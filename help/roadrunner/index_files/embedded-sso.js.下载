var EmbeddedSSO = EmbeddedSSO || {};

EmbeddedSSO.receiver = function(event) {
	try {
		var responseData = JSON.parse(event.data);
		var eventCode = responseData.event;
		if(eventCode == "getStatus"){
		  EmbeddedSSO.getStatus(responseData.sessionId, event.origin);
		}else if(eventCode == "ssoReq"){
		  EmbeddedSSO.getSSO(responseData.nonce, responseData.cnonce, event.origin);
		}
	} catch (err) {
		return;//not one of our postMessages, move along
	}
};

EmbeddedSSO.sendMessage = function(responseData, origin){
	var msg = JSON.stringify(responseData);
	parent.postMessage(msg, origin);
};

EmbeddedSSO.getStatus = function(sessionId, origin){
	var statusPost = $.ajax({
		method: "POST",
		url : "/embedded-login/v2/status",
		data : 'sessionId=' + sessionId + '&origin=' + origin,
		dataType: "text"	
	});
	statusPost.done(function(sessionId, statusText, xhr){
		var msg = {"event": "synced"}; 	
		EmbeddedSSO.sendMessage(msg,origin);
	});
	statusPost.fail(function(xhr, statusText, errorThrown) {
		var status = xhr.status;
		if(status == 402){
			var msg = {
					"event": "sso",
					"tx_id": xhr.responseText
			}; 	
			EmbeddedSSO.sendMessage(msg,origin);
		}else if(status == 424){
			EmbeddedSSO.sendMessage({"event": "policy"},origin);
		}else if(status == 401){ 	
			EmbeddedSSO.sendMessage({"event": "logout"},origin);
		}
	});
};

EmbeddedSSO.getSSO = function(nonce, cnonce, origin){
	console.log('Getting sso with nonce: ' + nonce + ' and cnonce: ' + cnonce + ' and origin: ' + origin);
	var statusPost = $.ajax({
		method: "POST",
		url : "/embedded-login/v2/sso",
		data : 'nonce=' + nonce + '&cnonce=' + cnonce +'&origin=' + origin,
		dataType: "json"	
	});
	statusPost.done(function(obj, statusText, xhr){
		var msg = {
				"event": "ssoResp",
				"sessionId": obj.sessionId,
				"token":obj.token
		};
		EmbeddedSSO.sendMessage(msg,origin);
	});
	statusPost.fail(function(xhr, statusText, errorThrown) {
		var statusCode = xhr.status;
		if(statusCode === 401){
			var msg = {"event": "logout"};
			EmbeddedSSO.sendMessage(msg,origin);
		}else if(statusCode === 402 || statusCode === 422){
		  console.log("User should be redirected to login page.");	
		  //TODO Determine if redirecting to login page is right approach here
		  //Have a seperate story for this.
		  //402 is response if user was redirected to sSO page however sso feature disabled 
		  //422 is an edge case where either origin is considered invalid or nonce,cnonce have not been inputted 
		}else{
		  console.log("Something happened!");	
		}
		
	});
};

EmbeddedSSO.cookiesAreEnabled = function(){
  try {
    var cookiesEnabled = document.cookie.indexOf('_enabled=') !== -1;
    document.cookie = "_enabled=; path=/embedded-login; expires=Thu, 01 Jan 1970 00:00:00 UTC";
    return cookiesEnabled;
  } catch (e) {
    return false;
  }
};
