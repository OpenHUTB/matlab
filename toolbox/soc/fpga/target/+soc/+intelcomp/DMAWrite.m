classdef DMAWrite<soc.intelcomp.IntelComponentBase
    properties
burst_size
fifo_depth
    end

    methods
        function obj=DMAWrite(varargin)

            obj.Configuration={...
            'dev_addr','0x00000000',...
            'dev_range','0',...
            'btt','24',...
            'mm_dw','64',...
            's_dw','32',...
            'sw_dw','32',...
            'bsize','16',...
            'fifo_depth','4',...
            'mem_addr','0x00000000',...
            'mem_range','0',...
            'diagnostics','1',...
            'bufferSize','1024'...
            ,'mem_type','memPS',...
            };

            if nargin>0
                obj.Configuration=varargin;
            end

            obj.burst_size=str2double(obj.Configuration.bsize);
            obj.fifo_depth=str2double(obj.Configuration.fifo_depth);

            [fifo_depth,bsize]=soc.internal.getDMAParams(obj.fifo_depth,obj.burst_size,obj.Configuration.mm_dw,obj.Configuration.s_dw);
            obj.Configuration={'fifo_depth',fifo_depth};
            obj.Configuration={'bsize',bsize};


            obj.addClk('dma_s2mm.s_axi_clock','SystemClk');
            obj.addRst('dma_s2mm.s_axi_reset','SystemRstn');
            obj.addAXI4Slave('dma_s2mm.s_axi','reg','sys',obj.Configuration.dev_addr);


            obj.addInterrupt('dma_s2mm.interrupt_sender');


            obj.addClk('dma_s2mm.m_dest_axi_clock',obj.type2ClkName(obj.Configuration.mem_type));
            obj.addRst('dma_s2mm.m_dest_axi_reset',obj.type2RstnName(obj.Configuration.mem_type));
            obj.addAXI4Master('dma_s2mm.m_dest_axi',obj.Configuration.mem_type,obj.Configuration.mem_type);


            obj.addClk('dma_s2mm.if_s_axis_aclk','IPCoreClk');


            obj.addClk('axis_slave_gasket.clock','IPCoreClk');
            obj.addRst('axis_slave_gasket.reset','IPCoreRstn');


            obj.Instance=[...
'add_instance dma_s2mm axi_dmac 1.0 \n'...
            ,'set_instance_parameter_value dma_s2mm {ASYNC_CLK_DEST_REQ_MANUAL} {1} \n',...
            'set_instance_parameter_value dma_s2mm {ASYNC_CLK_REQ_SRC_MANUAL} {1} \n',...
            'set_instance_parameter_value dma_s2mm {ASYNC_CLK_SRC_DEST_MANUAL} {1} \n',...
            'set_instance_parameter_value dma_s2mm {AUTO_ASYNC_CLK} {1} \n',...
            'set_instance_parameter_value dma_s2mm {AXI_SLICE_DEST} {0} \n',...
            'set_instance_parameter_value dma_s2mm {AXI_SLICE_SRC} {0} \n',...
            'set_instance_parameter_value dma_s2mm {CYCLIC} {0} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_2D_TRANSFER} {0} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_DATA_WIDTH_DEST} {',obj.Configuration.mm_dw,'} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_DATA_WIDTH_SRC} {',obj.Configuration.s_dw,'} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_LENGTH_WIDTH} {24} \n',...
            'set_instance_parameter_value dma_s2mm {MAX_BYTES_PER_BURST} {',obj.Configuration.bsize,'} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_TYPE_DEST} {0} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_AXI_PROTOCOL_DEST} {0} \n',...
            'set_instance_parameter_value dma_s2mm {DMA_TYPE_SRC} {1} \n',...
            'set_instance_parameter_value dma_s2mm {FIFO_SIZE} {',obj.Configuration.fifo_depth,'}\n',...
            'set_instance_parameter_value dma_s2mm {ID} {0}\n',...
            'set_instance_parameter_value dma_s2mm {SYNC_TRANSFER_START} {0} \n',...
            'set_instance_parameter_value dma_s2mm {USE_TLAST_SRC} {1} \n',...
            'set_instance_parameter_value dma_s2mm {ENABLE_DIAGNOSTICS_IF} {',obj.Configuration.diagnostics,'} \n',...
            'add_instance axis_slave_gasket axis_slave_gasket 1.0 \n',...
            'set_instance_parameter_value axis_slave_gasket {DWIDTH} {',obj.Configuration.s_dw,'} \n',...
            'add_connection axis_slave_gasket.conduit_tdata  dma_s2mm.if_s_axis_data \n',...
            'add_connection axis_slave_gasket.conduit_tready dma_s2mm.if_s_axis_ready \n',...
            'add_connection axis_slave_gasket.conduit_tvalid dma_s2mm.if_s_axis_valid \n',...
            'add_connection axis_slave_gasket.conduit_tlast  dma_s2mm.if_s_axis_last \n',...
            ];
        end

        function result=validateProperties(obj)
            result=soc.internal.validateDMA(obj.fifo_depth,obj.Configuration.mm_dw,obj.Configuration.s_dw,obj.burst_size,'Writer',obj.BlkName);
        end
    end
end