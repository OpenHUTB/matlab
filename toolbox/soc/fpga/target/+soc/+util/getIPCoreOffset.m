function offset_struct=getIPCoreOffset(type,baseaddr,varargin)
    switch type
    case 's2mm_dma'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'S2MM_ENABLE',soc.util.applyBaseOffset(baseaddr,'400'),...
        'S2MM_START',soc.util.applyBaseOffset(baseaddr,'408'),...
        'S2MM_FLAGS',soc.util.applyBaseOffset(baseaddr,'40C'),...
        'S2MM_DA',soc.util.applyBaseOffset(baseaddr,'410'),...
        'S2MM_LENGTH',soc.util.applyBaseOffset(baseaddr,'418'));
    case 'mm2s_dma'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'MM2S_ENABLE',soc.util.applyBaseOffset(baseaddr,'400'),...
        'MM2S_START',soc.util.applyBaseOffset(baseaddr,'408'),...
        'MM2S_FLAGS',soc.util.applyBaseOffset(baseaddr,'40C'),...
        'MM2S_SA',soc.util.applyBaseOffset(baseaddr,'414'),...
        'MM2S_LENGTH',soc.util.applyBaseOffset(baseaddr,'418'));
    case 's2mm_vdma'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'S2MM_ENABLE',soc.util.applyBaseOffset(baseaddr,'400'),...
        'S2MM_START',soc.util.applyBaseOffset(baseaddr,'408'),...
        'S2MM_FLAGS',soc.util.applyBaseOffset(baseaddr,'40C'),...
        'S2MM_DA',soc.util.applyBaseOffset(baseaddr,'410'),...
        'S2MM_XLENGTH',soc.util.applyBaseOffset(baseaddr,'418'),...
        'S2MM_YLENGTH',soc.util.applyBaseOffset(baseaddr,'41C'),...
        'S2MM_DESTSTRIDE',soc.util.applyBaseOffset(baseaddr,'420'),...
        'S2MM_FLOCK',soc.util.applyBaseOffset(baseaddr,'454'),...
        'S2MM_FRAMESTRIDE',soc.util.applyBaseOffset(baseaddr,'458'));
    case 'mm2s_vdma'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'MM2S_ENABLE',soc.util.applyBaseOffset(baseaddr,'400'),...
        'MM2S_START',soc.util.applyBaseOffset(baseaddr,'408'),...
        'MM2S_FLAGS',soc.util.applyBaseOffset(baseaddr,'40C'),...
        'MM2S_SA',soc.util.applyBaseOffset(baseaddr,'414'),...
        'MM2S_XLENGTH',soc.util.applyBaseOffset(baseaddr,'418'),...
        'MM2S_YLENGTH',soc.util.applyBaseOffset(baseaddr,'41C'),...
        'MM2S_SRCSTRIDE',soc.util.applyBaseOffset(baseaddr,'424'),...
        'MM2S_FLOCK',soc.util.applyBaseOffset(baseaddr,'454'),...
        'MM2S_FRAMESTRIDE',soc.util.applyBaseOffset(baseaddr,'458'));
    case 'vdma_frame_buff'
        if~iscell(baseaddr)
            baseaddr={baseaddr};
            baseaddr{2}=dec2hex(hex2dec(baseaddr{1})+65536);
        end
        offset_struct=struct('BASE_ADDR',baseaddr{1},...
        'S2MM_ENABLE',soc.util.applyBaseOffset(baseaddr{1},'400'),...
        'S2MM_START',soc.util.applyBaseOffset(baseaddr{1},'408'),...
        'S2MM_FLAGS',soc.util.applyBaseOffset(baseaddr{1},'40C'),...
        'S2MM_DA',soc.util.applyBaseOffset(baseaddr{1},'410'),...
        'S2MM_XLENGTH',soc.util.applyBaseOffset(baseaddr{1},'418'),...
        'S2MM_YLENGTH',soc.util.applyBaseOffset(baseaddr{1},'41C'),...
        'S2MM_DESTSTRIDE',soc.util.applyBaseOffset(baseaddr{1},'420'),...
        'S2MM_FLOCK',soc.util.applyBaseOffset(baseaddr{1},'454'),...
        'S2MM_FRAMESTRIDE',soc.util.applyBaseOffset(baseaddr{1},'458'),...
        'MM2S_ENABLE',soc.util.applyBaseOffset(baseaddr{2},'400'),...
        'MM2S_START',soc.util.applyBaseOffset(baseaddr{2},'408'),...
        'MM2S_FLAGS',soc.util.applyBaseOffset(baseaddr{2},'40C'),...
        'MM2S_SA',soc.util.applyBaseOffset(baseaddr{2},'414'),...
        'MM2S_XLENGTH',soc.util.applyBaseOffset(baseaddr{2},'418'),...
        'MM2S_YLENGTH',soc.util.applyBaseOffset(baseaddr{2},'41C'),...
        'MM2S_SRCSTRIDE',soc.util.applyBaseOffset(baseaddr{2},'424'),...
        'MM2S_FLOCK',soc.util.applyBaseOffset(baseaddr{2},'454'),...
        'MM2S_FRAMESTRIDE',soc.util.applyBaseOffset(baseaddr{2},'458'));
    case 'perf_mon'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'PERF_CR',soc.util.applyBaseOffset(baseaddr,'0100'),...
        'PERF_SIR',soc.util.applyBaseOffset(baseaddr,'0104'),...
        'PERF_SCTR',soc.util.applyBaseOffset(baseaddr,'010C'),...
        'TRCE_CR',soc.util.applyBaseOffset(baseaddr,'0200'),...
        'TRCE_STS',soc.util.applyBaseOffset(baseaddr,'0204'),...
        'TRCE_NEVT',soc.util.applyBaseOffset(baseaddr,'0208'),...
        'TRCE_FIFORP',soc.util.applyBaseOffset(baseaddr,'0210'),...
        'TRCE_FIFORD',soc.util.applyBaseOffset(baseaddr,'0214'),...
        'SAMPLED_METRIC_START',{{...
        soc.util.applyBaseOffset(baseaddr,'1000'),...
        soc.util.applyBaseOffset(baseaddr,'1050'),...
        soc.util.applyBaseOffset(baseaddr,'10A0'),...
        soc.util.applyBaseOffset(baseaddr,'10F0'),...
        soc.util.applyBaseOffset(baseaddr,'1140'),...
        soc.util.applyBaseOffset(baseaddr,'1190'),...
        soc.util.applyBaseOffset(baseaddr,'11E0'),...
        soc.util.applyBaseOffset(baseaddr,'1230')}});
    case 'traffic_gen'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'rw',soc.util.applyBaseOffset(baseaddr,'100'),...
        'addr',soc.util.applyBaseOffset(baseaddr,'104'),...
        'Burst_req',soc.util.applyBaseOffset(baseaddr,'108'),...
        'len',soc.util.applyBaseOffset(baseaddr,'10C'),...
        'delay',soc.util.applyBaseOffset(baseaddr,'110'),...
        'enable',soc.util.applyBaseOffset(baseaddr,'114')...
        );


    case 'vtc'
        offset_struct=struct('BASE_ADDR',baseaddr,...
        'CTL',baseaddr,...
        'DASIZE',soc.util.applyBaseOffset(baseaddr,'20'),...
        'DENC',soc.util.applyBaseOffset(baseaddr,'28'),...
        'DHSIZE',soc.util.applyBaseOffset(baseaddr,'30'),...
        'DVSIZE',soc.util.applyBaseOffset(baseaddr,'34')...
        );
    case 'dut'
        offset_struct_in=varargin{1};
        offset_struct=structfun(@(x)soc.util.applyBaseOffset(baseaddr,x),offset_struct_in,'UniformOutput',false);
    otherwise
        error(message('soc:msgs:unrecognizeIPType',type));
    end

end