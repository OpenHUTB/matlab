function[parameters,parameterGroups]=getDialogCustomizations(coderTargetCC,resetData)





    nargoutchk(1,2);
    if nargin<2
        resetData=false;
    end
    if nargout>1
        haveGroups=true;
    else
        haveGroups=false;
    end
    hCS=coderTargetCC.getConfigSet;
    if~isempty(coderTargetCC)
        [parameters,parameterGroups]=deal([]);
        [parameters,parameterGroups]=locAddCommonWidgets(hCS,...
        parameters,parameterGroups,haveGroups,resetData);
        if codertarget.utils.isSoCInstalledAndModelConfiguredForSoC(hCS)
            [parameters,parameterGroups]=locAddSoCBProcWidgets(hCS,...
            parameters,parameterGroups,haveGroups);
        end
        if codertarget.utils.isSoCInstalledAndModelConfiguredForSoC(hCS,2)
            [parameters,parameterGroups]=locAddSoCBFPGAWidgets(hCS,...
            parameters,parameterGroups,haveGroups);
        end
    end
end



function[parameters,parameterGroups]=locAddCommonWidgets(hCS,...
    parameters,parameterGroups,haveGroups,resetData)
    info1=codertarget.utils.getRTOSWidgets(hCS);
    info2=codertarget.utils.getSchedulerWidgets(hCS);
    info3=codertarget.parameter.getParameterDialogInfo(hCS,resetData);
    info4=codertarget.utils.getExtModeWidgets(hCS);

    parameters=[parameters...
    ,info1.Parameters{:},info2.Parameters{:}...
    ,info3.Parameters{:},info4.Parameters{:}...
    ];
    if haveGroups
        parameterGroups=[parameterGroups...
        ,locRepMatParamGroups(info1),locRepMatParamGroups(info2)...
        ,locRepMatParamGroups(info3),locRepMatParamGroups(info4)...
        ];
    end
end



function[parameters,parameterGroups]=locAddSoCBProcWidgets(hCS,...
    parameters,parameterGroups,haveGroups)
    info1=codertarget.utils.getSimulationDiagnosticsWidgets(hCS);
    info2=codertarget.utils.getHardwareDiagnosticsWidgets(hCS);
    info3=codertarget.utils.getSimulationWidgets(hCS);
    info4=codertarget.utils.getProcessingUnitWidget(hCS);
    parameters=[...
    info1.Parameters{:}...
    ,info2.Parameters{:}...
    ,info3.Parameters{:}...
    ,info4.Parameters{:}...
    ,parameters...
    ];
    if haveGroups
        parameterGroups=[...
        locRepMatParamGroups(info1)...
        ,locRepMatParamGroups(info2)...
        ,locRepMatParamGroups(info3)...
        ,locRepMatParamGroups(info4)...
        ,parameterGroups...
        ];
    end
end



function[parameters,parameterGroups]=locAddSoCBFPGAWidgets(hCS,...
    parameters,parameterGroups,haveGroups)
    info6=codertarget.utils.getFPGADesignWidgets(hCS,'TopLevel');
    info7=codertarget.utils.getFPGADesignWidgets(hCS,'MemControllersPS');
    info8=codertarget.utils.getFPGADesignWidgets(hCS,'MemControllersPL');
    info9=codertarget.utils.getFPGADesignWidgets(hCS,'Debug');
    parameters=[parameters...
    ,info6.Parameters{:}...
    ,info7.Parameters{:}...
    ,info8.Parameters{:}...
    ,info9.Parameters{:}...
    ];
    if haveGroups
        parameterGroups=[parameterGroups...
        ,locRepMatParamGroups(info6)...
        ,locRepMatParamGroups(info7)...
        ,locRepMatParamGroups(info8)...
        ,locRepMatParamGroups(info9)...
        ];
    end
end



function outParamGroups=locRepMatParamGroups(aInfo)
    outParamGroups={};
    for ii=1:numel(aInfo.ParameterGroups)
        outParamGroups=[outParamGroups,repmat(aInfo.ParameterGroups(ii),...
        size(aInfo.Parameters{ii}))];%#ok<AGROW>
    end
end



