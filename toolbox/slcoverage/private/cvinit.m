function cvinit(command)







    try
        if nargin==0
            cv('lock');
            cvinit('load defaults');
            cvinit('formatters');


            register_metrics;



            return;
        end

        switch command

        case 'register_metrics'
            register_metrics;
        case 'factory'
            relax_flags;
        case 'load defaults'
            restore_flags;
        case 'formatters'
            load_formatters;
        case 'save_defaults'
            restore_flags;
        case 'save defaults'
            restore_flags;
        end
    catch MEx
        rethrow(MEx);
    end

    function register_metrics

        enabledMetricNames={'cvmetric.Sldv','cvmetric.Structural','cvmetric.Simscape'};
        p=meta.package.fromName('cvmetric');
        if~isempty(p)
            classList=p.ClassList;
            metricNames={};
            for metric=enabledMetricNames
                idx=strcmpi(metric,{classList.Name});
                class=classList(idx);
                assert(numel(class)==1);
                className=class.Name;
                enumNameList={class.EnumerationMemberList.Name};
                for enumName=enumNameList
                    metricNames{end+1}=([className,'.',enumName{:}]);%#ok<AGROW>
                end
            end
            cvi.MetricRegistry.registerMetric(metricNames);
        end

        function relax_flags
            cv('flag'...
            ,'modelcov:all','write'...
            ,'slsfobj:all','write'...
            ,'decision:all','write'...
            ,'relation:all','write'...
            ,'condition:all','write'...
            ,'caption:all','write'...
            );

            function restore_flags
                cv('flag'...
                ,'modelcov:all','save/show'...
                ,'modelcov.isa','nosave'...
                ,'modelcov.handle','nosave'...
                ,'modelcov.currentDisplay:all','nosave'...
                ,'modelcov.deleteTrees','nosave'...
                ,'modelcov.deleteRoots','nosave'...
                ,'modelcov.staleRoots','nosave'...
                ,'modelcov.activeRoot','nosave'...
                ,'modelcov.indexedForRoot','nosave'...
                ,'modelcov.activeTest','nosave'...
                ,'modelcov.currentTest','nosave'...
                ,'modelcov.orphanSlsfobjs','nosave'...
                );

                cv('flag'...
                ,'slsfobj:all','save/show'...
                ,'slsfobj.isa','nosave/show'...
                ,'slsfobj.handle','nosave/show'...
                ,'slsfobj.cvChecksum','nosave/show'...
                );

                cv('flag'...
                ,'decision:all','save/show'...
                ,'decision.isa','nosave/show'...
                ,'decision.descriptor','save/show'...
                ,'decision.outMsgs','save/show'...
                );

                cv('flag'...
                ,'root:all','save/show'...
                ,'root.isa','nosave'...
                ,'root.runningTotal','save/show'...
                ,'root.topSlHandle','nosave'...
                ,'root.testobjectives','nosave'...
                );

                cv('flag'...
                ,'condition:all','save/show'...
                ,'condition.isa','nosave'...
                ,'condition.descriptor','save/show'...
                );

                cv('flag'...
                ,'codeblock:all','save/show'...
                ,'codeblock.isa','nosave'...
                ,'codeblock.lineStartInd','nosave'...
                ,'codeblock.styleIdx','nosave'...
                ,'codeblock.hyperlink','nosave'...
                );

                cv('flag'...
                ,'message:all','save/show'...
                ,'message.isa','nosave'...
                ,'message.formatter','nosave'...
                );

                cv('flag'...
                ,'testdata:all','save/show'...
                ,'testdata.mf0:all','nosave/show'...
                ,'testdata.data:all','nosave/show'...
                ,'testdata.data.decision','save/show'...
                ,'testdata.data.condition','save/show'...
                ,'testdata.data.relation','save/show'...
                ,'testdata.data.mcdc','save/show'...
                ,'testdata.data.tableExec','save/show'...
                ,'testdata.data.sigrange','save/show'...
                ,'testdata.data.sigsize','save/show'...
                ,'testdata.data.codeCovData','save/show'...
                ,'testdata.data.sfcnCovData','save/show'...
                ,'testdata.traceData:all','nosave/show'...
                ,'testdata.traceData.decision','save/show'...
                ,'testdata.traceData.condition','save/show'...
                ,'testdata.traceData.mcdc','save/show'...
                ,'testdata.traceData.tableExec','save/show'...
                ,'testdata.refCount','nosave'...
                ,'testdata.cleanupCallbacks','nosave'...
                );
                cv('flag'...
                ,'metricdata:all','save/show'...
                ,'metricdata.data:all','nosave/show'...
                ,'metricdata.data.rawdata','save/show'...
                ,'metricdata.trace:all','nosave/show'...
                ,'metricdata.trace.rawdata','save/show'...
                );
                cv('flag'...
                ,'sigranger:all','save/show'...
                ,'sigranger.isa','nosave/show'...
                ,'sigranger.handle','nosave/show'...
                ,'sigranger.markStatus','nosave/show'...
                );



                function load_formatters
                    make_formatters;
                    frmts=cv('get','all','formatter.id');
                    for h=frmts(:)'
                        parse_formatter_strings(h);
                    end
