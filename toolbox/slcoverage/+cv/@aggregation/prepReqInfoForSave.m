function reqInfoOut=prepReqInfoForSave(this)



    reqInfoTemplate=struct(...
    'Requirement',struct(...
    'Label',[],...
    'URL',[],...
    'ImplementInd',[],...
    'VerifyInd',[],...
    'FullID',[]),...
    'ImplementLink',struct(...
    'RequirementIdx',[],...
    'ModelItemIdx',[]),...
    'ModelItem',struct(...
    'SID',[],...
    'ImplementedInd',[]),...
    'VerifyLink',struct(...
    'RequirementIdx',[],...
    'TestIdx',[]),...
    'Test',struct(...
    'Label',[],...
    'VerifyInd',[],...
    'SimulationInd',[],...
    'URL',[]),...
    'Simulation',struct(...
    'RunId',[],...
    'TestIdx',[],...
    'URL',[],...
    'Label',[]),...
    'modelItemMap',struct(...
    'Keys',[],...
    'Values',[]));

    reqInfo_NoMaps=flattenMaps(this.reqInfo);
    reqInfoOut=scopeToTemplate(reqInfoTemplate,reqInfo_NoMaps);
end

function sOut=flattenMaps(sIn)


    sOut=sIn;
    fields=fieldnames(sIn);
    for i=1:length(fields)
        cur=sIn.(fields{i});
        if isa(cur,'containers.Map')
            sOut.(fields{i})=struct('Keys',cur.keys,'Values',cur.values);
        end
    end
end

function sOut=scopeToTemplate(sTemplate,sIn)



    sOut=removeExtraFields(sTemplate,sIn);


    topFields=fieldnames(sTemplate);
    for i=1:length(topFields)
        f=topFields{i};
        sOut.(f)=removeExtraFields(sTemplate.(f),sIn.(f));
    end
end

function sOut=removeExtraFields(sTemplate,sIn)

    fields_Expected=fieldnames(sTemplate);
    fields_Actual=fieldnames(sIn);
    rmIdx=~ismember(fields_Actual,fields_Expected);
    fieldsToRemove=fields_Actual(rmIdx);
    sOut=rmfield(sIn,fieldsToRemove);
    if isempty(sOut)
        sOut=[];
    end
end