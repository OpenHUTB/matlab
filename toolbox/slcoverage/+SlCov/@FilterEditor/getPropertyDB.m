function out=getPropertyDB




    persistent allPropMap;
    if isempty(allPropMap)


        propCell={...
        'P1',{true};...
        'P2',{true};...
        'P3',{false};...
        'P4',{false};...
        'P5',{false};...
        'P6',{true};...
        'P7',{true};...
        'P8',{false};...
        'P9',{false};...
        'P10',{true};...
        'P11',{true};...
        'P12',{false};...
        'P13',{false};...
        'P14',{true,true};...
        'P15',{true,true};...
        'P16',{true,true};...
        'P17',{true,true};...
        'P18',{false};...
        'P19',{false};...
        'P20',{true,true};...
        'P21',{true,true};...
        'P22',{true,true};...
        'P23',{true,true};...
        'P24',{false};...
        'P25',{false};...
        'P26',{false};...
        'P27',{false};...
        'P28',{false};...
        'P29',{false};...
        'P30',{false};...
        'P31',{false};...
        'P32',{false};...
        'P33',{false};...
        'P34',{false};...
        'P35',{false};...
        'P36',{false};...
        'P37',{false};...
        'P38',{false};...
        'P39',{false};...
        'P40',{false};...
        'P41',{false};...
        'P42',{false,true};...
        'P43',{false,true};...
        'P44',{false,true};...
        'P45',{false,true};...
        'P46',{false,true};...
        'P47',{false,true};...
        'P48',{false,true};...
        'P49',{false,true};...
        };

        allPropMap=containers.Map('KeyType','char','ValueType','any');
        for ii=1:size(propCell,1)
            propName=propCell{ii,1};
            propArgs=propCell{ii,2};
            msgId=['Slvnv:simcoverage:getPropertyDB:',propName];
            allPropMap=addToPropMap(allPropMap,propName,msgId,[msgId,'s'],propArgs{:});
        end
    end
    out=allPropMap;


    function propMap=addToPropMap(propMap,id,propDesc,propType,includeChildren,isCode)
        if nargin<6
            isCode=false;
        end
        s.propDesc=propDesc;
        s.propType=propType;
        s.id=id;
        s.includeChildren=includeChildren;
        s.isCode=isCode;
        s=setSelectorType(s);
        propMap(id)=s;


        function prop=setSelectorType(prop)
            prop.selectorType=[];
            id=str2double(prop.id(2:end));
            done=false;
            try
                prop.selectorType=slcoverage.BlockSelectorType(id);
                done=true;
            catch
            end
            if~done
                try
                    prop.selectorType=slcoverage.MetricSelectorType(id);
                    done=true;
                catch
                end
            end
            if~done
                try
                    prop.selectorType=slcoverage.SFcnSelectorType(id);
                    done=true;
                catch
                end
            end
            if~done
                try
                    prop.selectorType=slcoverage.CodeSelectorType(id);
                    done=true;
                catch
                end
            end
            if~done
                try
                    prop.selectorType=Sldv.RteSelectorType(id);
                catch
                end
            end
