




function table=getMetricDescrTable

    persistent descrTable


    if isempty(descrTable)
        ddEnumVals=cvi.MetricRegistry.getDDEnumVals;














        apiTable={...
        DAStudio.message('Slvnv:simcoverage:decisionMetric'),...
        'd',...
        'decision',...
        ddEnumVals.MTRC_DECISION,...
        getString(message('Slvnv:simcoverage:decisionMetricExplanation')),...
        'decisioninfo',1,1,...
        [];...
...
        DAStudio.message('Slvnv:simcoverage:conditionMetric'),...
        'c',...
        'condition',...
        ddEnumVals.MTRC_CONDITION,...
        getString(message('Slvnv:simcoverage:conditionMetricExplanation')),...
        'conditioninfo',1,2,...
        [];...
...
        DAStudio.message('Slvnv:simcoverage:mcdcMetric'),...
        'm',...
        'mcdc',...
        ddEnumVals.MTRC_MCDC,...
        getString(message('Slvnv:simcoverage:mcdcMetricExplanation')),...
        'mcdcinfo',2,1,...
        [];...
...
        DAStudio.message('Slvnv:simcoverage:tableMetric'),...
        't',...
        'tableExec',...
        ddEnumVals.MTRC_TABLE_EXEC,...
        getString(message('Slvnv:simcoverage:tableMetricExplanation')),...
        'tableinfo',2,2,...
        [];...
...
        DAStudio.message('Slvnv:simcoverage:sigrangeMetric'),...
        'r',...
        'sigrange',...
        ddEnumVals.MTRC_SIGRANGE,...
        getString(message('Slvnv:simcoverage:sigrangeMetricExplanation')),...
        'sigrangeinfo',3,1,...
        [];...
        DAStudio.message('Slvnv:simcoverage:sigsizeMetric'),...
        'z',...
        'sigsize',...
        ddEnumVals.MTRC_SIGSIZE,...
        getString(message('Slvnv:simcoverage:sigsizeMetricExplanation')),...
        'sigsizeinfo',3,2,...
        [];...
        DAStudio.message('Slvnv:simcoverage:sldvMetric'),...
        'o',...
        'designverifier',...
        [],...
        getString(message('Slvnv:simcoverage:sldvMetricExplanation')),...
        'getCoverageInfo',4,1,...
        {'cvmetric_Sldv_test','cvmetric_Sldv_proof','cvmetric_Sldv_condition','cvmetric_Sldv_assumption'};...
        DAStudio.message('Slvnv:simcoverage:overflowMetric'),...
        'i',...
        'overflowsaturation',...
        [],...
        getString(message('Slvnv:simcoverage:overflowMetricExplanation')),...
        'overflowsaturationinfo',4,2,...
        {'cvmetric_Structural_saturate'}};

        apiTable=addMetricDescr(apiTable,...
        DAStudio.message('Slvnv:simcoverage:relationalBoundaryMetric'),...
        'b',...
        'relationalop',...
        [],...
        getString(message('Slvnv:simcoverage:relationalBoundaryMetricExplanation')),...
        'relationalopinfo',5,1,...
        {'cvmetric_Structural_relationalop'});

        apiTable=addMetricDescr(apiTable,...
        DAStudio.message('Slvnv:simcoverage:blockCoverageMetric'),...
        'a',...
        'block',...
        [],...
        getString(message('Slvnv:simcoverage:blockCoverageMetricExplanation')),...
        'executioninfo',5,2,...
        {'cvmetric_Structural_block'});
        if strcmpi(cv('Feature','simscapeCoverage'),'on')
            apiTable=addMetricDescr(apiTable,...
            DAStudio.message('Slvnv:simcoverage:simscapeModeMetric'),...
            's',...
            'simscapemodeinfo',...
            [],...
            getString(message('Slvnv:simcoverage:simscapeModeCoverageMetricExplanation')),...
            'scimscapeinfo',5,3,...
            {'cvmetric_Simscape_mode'});
        end


        descrTable=[];
        descrTable=cvi.MetricRegistry.buildMap(descrTable,apiTable,3);
    end

    table=descrTable;

    function apiTable=addMetricDescr(apiTable,...
        uiName,...
        singleLetterAbbr,...
        ddFieldName,...
        ddEnumValue,...
        description,...
        queryMethod,...
        posX,posY,...
        metricMapping)

        apiTable=[apiTable;...
        {uiName,...
        singleLetterAbbr,...
        ddFieldName,...
        ddEnumValue,...
        description,...
        queryMethod,...
        posX,posY,...
        metricMapping}];

