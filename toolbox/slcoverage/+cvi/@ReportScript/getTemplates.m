function getTemplates(this,options)
    txtMetric=getString(message('Slvnv:simcoverage:cvhtml:Metric'));
    txtCoverage=getString(message('Slvnv:simcoverage:cvhtml:Coverage'));
    txtCoverageThisObject=getString(message('Slvnv:simcoverage:cvhtml:CoverageThisObject'));
    txtCoverageIncDescendants=getString(message('Slvnv:simcoverage:cvhtml:CoverageIncDescendants'));
    txtCyclomaticComplexity=getString(message('Slvnv:simcoverage:cvhtml:CyclomaticComplexity'));

    if options.complexInBlkTable
        var_sysSummary_mainTemplate={{'If',{'RpnExpr','#complexity.varDeep',0,'!'},...
        {'If','#complexity.isModule',...
        {'Cat','#complexity.varShallow'},{'Cat','#complexity.varDeep'},...
        'Else',...
        '#complexity.varShallow','#complexity.varDeep'...
        },...
        'Else',...
        {'If','#complexity.isModule',...
        {'Cat','#complexity.shallow'},{'Cat','#complexity.deep'},...
        'Else',...
        '#complexity.shallow','#complexity.deep'...
        },...
        },'\n'};

        sysSummary.mainTemplate=[{['$<b>',txtMetric,'</b>'],...
        ['$<b>',txtCoverageThisObject,'</b>'],...
        ['$<b>',txtCoverageIncDescendants,'</b>'],'\n',...
        ['$',txtCyclomaticComplexity]}...
        ,var_sysSummary_mainTemplate];

        var_blkSummary_mainTemplate={{'If',{'RpnExpr','#complexity.varShallow',0,'!'},...
        ['$',txtCyclomaticComplexity],'#complexity.varShallow','\n',...
        'Else',...
        ['$',txtCyclomaticComplexity],'#complexity.shallow','\n',...
        }};

        blkSummary.mainTemplate=[{['$<b>',txtMetric,'</b>'],...
        ['$<b>',txtCoverage,'</b>'],'\n'}...
        ,var_blkSummary_mainTemplate];

    else
        sysSummary.mainTemplate={['$<b>',txtMetric,'</b>'],...
        ['$<b>',txtCoverageThisObject,'</b>'],...
        ['$<b>',txtCoverageIncDescendants,'</b>'],'\n'};
        blkSummary.mainTemplate={['$<b>',txtMetric,'</b>'],...
        ['$<b>',txtCoverage,'</b>'],'\n'};

    end
    sysSummary.mainTemplateNoComplexity={['$<b>',txtMetric,'</b>'],...
    ['$<b>',txtCoverageThisObject,'</b>'],...
    ['$<b>',txtCoverageIncDescendants,'</b>'],'\n'};

    blkSummary.mainTemplateNoComplexity={['$<b>',txtMetric,'</b>'],...
    ['$<b>',txtCoverage,'</b>'],'\n'};

    for i=1:length(this.cvstruct.enabledMetricNames)
        thisMetric=this.cvstruct.enabledMetricNames{i};
        if~strcmp(thisMetric,'sigrange')

            switch(thisMetric)
            case 'tableExec'
                [sysTemp,blkTemp]=cvi.ReportScript.tableExec_summary(this.testCnt,options);
            case 'decision'
                [sysTemp,blkTemp]=cvi.ReportScript.decision_summary(this.testCnt,options);
            case 'condition'
                [sysTemp,blkTemp]=cvi.ReportScript.condition_summary(this.testCnt,options);
            case 'mcdc'
                [sysTemp,blkTemp]=cvi.ReportScript.mcdc_summary(this.testCnt,options);
            end
            sysSummary.(thisMetric)=sysTemp;
            blkSummary.(thisMetric)=blkTemp;

        end
    end

    for i=1:length(this.cvstruct.enabledTOMetricNames)
        thisMetric=this.cvstruct.enabledTOMetricNames{i};
        [sysTemp,blkTemp]=cvi.ReportScript.testobjective_summary(this.testCnt,thisMetric,options);
        sysSummary.(thisMetric)=sysTemp;
        blkSummary.(thisMetric)=blkTemp;
    end

    this.sysSummaryScript=sysSummary;
    this.blkSummaryScript=blkSummary;
