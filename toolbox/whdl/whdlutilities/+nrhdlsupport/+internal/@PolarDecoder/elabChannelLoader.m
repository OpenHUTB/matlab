function channelLoaderNet=elabChannelLoader(this,topNet,blockInfo,dataRate)
    boolType=pir_boolean_t();
    nMax=blockInfo.nMax;
    coreOrder=blockInfo.coreOrder;
    NType=blockInfo.NType;
    blockType=blockInfo.blockType;
    intLlrType=blockInfo.intLlrType;
    intLlrVecType=pirelab.createPirArrayType(intLlrType,[1,coreOrder]);


    inportNames={'dataIn','startIn','endIn','validIn','NSub1','startOutput','configValid'};
    inTypes=[intLlrType,boolType,boolType,boolType,NType,boolType,boolType];
    indataRates=dataRate*ones(1,length(inportNames));

    outportNames={'rxBuffer','rxSel','chnlBlock','chnlLowerWrEn','chnlUpperWrEn','nextFrame'};
    outTypes=[intLlrVecType,boolType,blockType,boolType,boolType,boolType];

    channelLoaderNet=pirelab.createNewNetwork(...
    'Network',topNet,...
    'Name','channelLoader',...
    'InportNames',inportNames,...
    'InportTypes',inTypes,...
    'InportRates',indataRates,...
    'OutportNames',outportNames,...
    'OutportTypes',outTypes...
    );

    desc='channelLoader - loads input channel LLRs into treeMem';

    fid=fopen(fullfile(blockInfo.emlPath,'channelLoader.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char');
    fclose(fid);

    inports=channelLoaderNet.PirInputSignals;
    outports=channelLoaderNet.PirOutputSignals;

    chnlLoader=channelLoaderNet.addComponent2(...
    'kind','cgireml',...
    'Name','channelLoader',...
    'InputSignals',inports,...
    'OutputSignals',outports,...
    'EMLFileName','channelLoader',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{nMax,coreOrder},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc...
    );
    chnlLoader.runConcurrencyMaximizer(0);
end