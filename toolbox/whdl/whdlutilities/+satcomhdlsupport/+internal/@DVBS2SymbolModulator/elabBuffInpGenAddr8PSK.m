function buffInpGenAddr8PSK=elabBuffInpGenAddr8PSK(~,topNet,~,rate)






    pirTyp2=pir_boolean_t;
    pirTyp1=pir_ufixpt_t(1,0);
    pirTyp4=pir_ufixpt_t(2,0);
    pirTyp3=pir_ufixpt_t(3,0);

    fiMath1=fimath('RoundingMethod','Nearest','OverflowAction','Saturate','ProductMode','FullPrecision','SumMode','FullPrecision');

    nt1=numerictype(0,1,0);
    nt2=numerictype(0,2,0);


    inBuffInpGen8PSKAddr={'dataIn','validIn','resetIn'};
    controlType=pir_ufixpt_t(1,0);
    inTypeBuffInpGen8PSKAddr=[controlType,controlType,controlType];
    inRateBuffInpGen8PSKAddr=[rate,rate,rate];

    outBuffInpGen8PSKAddr={'addr8PSK','addr8PSKValidOut'};
    outTypeBuffInpGen8PSKAddr=[pir_ufixpt_t(3,0),controlType];

    buffInpGenAddr8PSK=pirelab.createNewNetwork(...
    'Network',topNet,...
    'Name','buffInpGenAddr8PSK',...
    'InportNames',inBuffInpGen8PSKAddr,...
    'InportTypes',inTypeBuffInpGen8PSKAddr,...
    'InportRates',inRateBuffInpGen8PSKAddr,...
    'OutportNames',outBuffInpGen8PSKAddr,...
    'OutportTypes',outTypeBuffInpGen8PSKAddr...
    );


    dataIn_s0=buffInpGenAddr8PSK.PirInputSignals(1);
    validIn_s1=buffInpGenAddr8PSK.PirInputSignals(2);
    resetIn_s2=buffInpGenAddr8PSK.PirInputSignals(3);

    addr8PSK=buffInpGenAddr8PSK.PirOutputSignals(1);
    addr8PSKValidOut=buffInpGenAddr8PSK.PirOutputSignals(2);

    slRate1=rate;

    Switch2_out1_s33=addSignal(buffInpGenAddr8PSK,'Switch2_out1',pirTyp3,slRate1);

    LogicalOperator2_out1_s22=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator2_out1'),pirTyp2,slRate1);


    CompareToConstant_out1_s3=addSignal(buffInpGenAddr8PSK,sprintf('Compare\nTo Constant_out1'),pirTyp2,slRate1);
    CompareToConstant1_out1_s4=addSignal(buffInpGenAddr8PSK,sprintf('Compare\nTo Constant1_out1'),pirTyp2,slRate1);
    CompareToConstant5_out1_s5=addSignal(buffInpGenAddr8PSK,sprintf('Compare\nTo Constant5_out1'),pirTyp2,slRate1);
    CompareToConstant7_out1_s6=addSignal(buffInpGenAddr8PSK,sprintf('Compare\nTo Constant7_out1'),pirTyp2,slRate1);
    Constant_out1_s7=addSignal(buffInpGenAddr8PSK,'Constant_out1',pirTyp4,slRate1);
    Constant1_out1_s8=addSignal(buffInpGenAddr8PSK,'Constant1_out1',pirTyp1,slRate1);
    Delay_out1_s9=addSignal(buffInpGenAddr8PSK,'Delay_out1',pirTyp4,slRate1);
    Delay1_out1_s10=addSignal(buffInpGenAddr8PSK,'Delay1_out1',pirTyp1,slRate1);
    Delay2_out1_s11=addSignal(buffInpGenAddr8PSK,'Delay2_out1',pirTyp1,slRate1);
    Delay3_out1_s12=addSignal(buffInpGenAddr8PSK,'Delay3_out1',pirTyp2,slRate1);
    Delay4_out1_s13=addSignal(buffInpGenAddr8PSK,'Delay4_out1',pirTyp1,slRate1);
    Delay5_out1_s14=addSignal(buffInpGenAddr8PSK,'Delay5_out1',pirTyp2,slRate1);
    Delay7_out1_s15=addSignal(buffInpGenAddr8PSK,'Delay7_out1',pirTyp4,slRate1);
    Delay8_out1_s16=addSignal(buffInpGenAddr8PSK,'Delay8_out1',pirTyp4,slRate1);
    HDLCounter_out1_s17=addSignal(buffInpGenAddr8PSK,'HDL Counter_out1',pirTyp4,slRate1);
    LogicalOperator_out1_s18=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator_out1'),pirTyp2,slRate1);
    LogicalOperator1_out1_s19=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator1_out1'),pirTyp2,slRate1);
    LogicalOperator12_out1_s20=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator12_out1'),pirTyp2,slRate1);
    LogicalOperator15_out1_s21=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator15_out1'),pirTyp2,slRate1);
    LogicalOperator3_out1_s23=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator3_out1'),pirTyp2,slRate1);
    LogicalOperator4_out1_s24=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator4_out1'),pirTyp2,slRate1);
    LogicalOperator5_out1_s25=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator5_out1'),pirTyp2,slRate1);
    LogicalOperator6_out1_s26=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator6_out1'),pirTyp2,slRate1);
    LogicalOperator7_out1_s27=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator7_out1'),pirTyp2,slRate1);
    LogicalOperator8_out1_s28=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator8_out1'),pirTyp2,slRate1);
    LogicalOperator9_out1_s29=addSignal(buffInpGenAddr8PSK,sprintf('Logical\nOperator9_out1'),pirTyp2,slRate1);
    PSK8_out1_s30=addSignal(buffInpGenAddr8PSK,'PSK8_out1',pirTyp3,slRate1);
    RelationalOperator_out1_s31=addSignal(buffInpGenAddr8PSK,sprintf('Relational\nOperator_out1'),pirTyp2,slRate1);
    RelationalOperator1_out1_s32=addSignal(buffInpGenAddr8PSK,sprintf('Relational\nOperator1_out1'),pirTyp2,slRate1);
    y_s38=addSignal(buffInpGenAddr8PSK,'y',pirTyp3,slRate1);
    y_s39=addSignal(buffInpGenAddr8PSK,'y',pirTyp3,slRate1);
    Constant_out1_s40=addSignal(buffInpGenAddr8PSK,'Constant_out1',pirTyp1,slRate1);
    Constant1_out1_s41=addSignal(buffInpGenAddr8PSK,'Constant1_out1',pirTyp1,slRate1);
    Constant2_out1_s42=addSignal(buffInpGenAddr8PSK,'Constant2_out1',pirTyp1,slRate1);
    Switch1_out1_s43=addSignal(buffInpGenAddr8PSK,'Switch1_out1',pirTyp3,slRate1);
    HDLCounter_out1_s49=addSignal(buffInpGenAddr8PSK,'HDL Counter_out1',pirTyp4,slRate1);
    count_s50=addSignal(buffInpGenAddr8PSK,'count',pirTyp4,slRate1);
    count_reset_s51=addSignal(buffInpGenAddr8PSK,'count_reset',pirTyp4,slRate1);
    count_step_s52=addSignal(buffInpGenAddr8PSK,'count_step',pirTyp4,slRate1);
    count_from_s53=addSignal(buffInpGenAddr8PSK,'count_from',pirTyp4,slRate1);
    count_value_s54=addSignal(buffInpGenAddr8PSK,'count_value',pirTyp4,slRate1);
    need_to_wrap_s55=addSignal(buffInpGenAddr8PSK,'need_to_wrap',pirTyp2,slRate1);
    count_s56=addSignal(buffInpGenAddr8PSK,'count',pirTyp4,slRate1);
    count_s57=addSignal(buffInpGenAddr8PSK,'count',pirTyp4,slRate1);
    HDLCounter_out_s58=addSignal(buffInpGenAddr8PSK,'HDL Counter_out',pirTyp4,slRate1);
    HDLCounter_Initial_Val_out_s59=addSignal(buffInpGenAddr8PSK,'HDL Counter_Initial_Val_out',pirTyp4,slRate1);
    HDLCounter_ctrl_const_out_s60=addSignal(buffInpGenAddr8PSK,'HDL Counter_ctrl_const_out',pirTyp2,slRate1);
    HDLCounter_ctrl_delay_out_s61=addSignal(buffInpGenAddr8PSK,'HDL Counter_ctrl_delay_out',pirTyp2,slRate1);
    Delay1_delOut_s62=addSignal(buffInpGenAddr8PSK,'Delay1_delOut',pirTyp1,slRate1);
    Delay1_ectrl_s63=addSignal(buffInpGenAddr8PSK,'Delay1_ectrl',pirTyp1,slRate1);
    Delay1_last_value_s64=addSignal(buffInpGenAddr8PSK,'Delay1_last_value',pirTyp1,slRate1);
    Delay2_delOut_s65=addSignal(buffInpGenAddr8PSK,'Delay2_delOut',pirTyp1,slRate1);
    Delay2_ectrl_s66=addSignal(buffInpGenAddr8PSK,'Delay2_ectrl',pirTyp1,slRate1);
    Delay2_last_value_s67=addSignal(buffInpGenAddr8PSK,'Delay2_last_value',pirTyp1,slRate1);
    Delay4_delOut_s68=addSignal(buffInpGenAddr8PSK,'Delay4_delOut',pirTyp1,slRate1);
    Delay4_ectrl_s69=addSignal(buffInpGenAddr8PSK,'Delay4_ectrl',pirTyp1,slRate1);
    Delay4_last_value_s70=addSignal(buffInpGenAddr8PSK,'Delay4_last_value',pirTyp1,slRate1);

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    Constant_out1_s40,...
    fi(0,nt1,fiMath1,'hex','0'),...
    'Constant','on',1,'','','');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    Constant1_out1_s41,...
    fi(0,nt1,fiMath1,'hex','0'),...
    'Constant1','on',1,'','','');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    Constant2_out1_s42,...
    fi(0,nt1,fiMath1,'hex','0'),...
    'Constant2','on',1,'','','');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    Constant_out1_s7,...
    fi(0,nt2,fiMath1,'hex','3'),...
    'Constant','on',0,'','','');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    Constant1_out1_s8,...
    fi(0,nt1,fiMath1,'hex','0'),...
    'Constant1','on',1,'','','');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s17,...
    Delay_out1_s9,...
    1,'Delay',...
    fi(0,nt2,fiMath1,'hex','0'),...
    0,0,[],0,0);

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    validIn_s1,...
    Delay3_out1_s12,...
    1,'Delay3',...
    false,...
    0,0,[],0,0);

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    LogicalOperator7_out1_s27,...
    Delay5_out1_s14,...
    1,'Delay5',...
    false,...
    0,0,[],0,0);

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Constant_out1_s7,...
    Delay7_out1_s15,...
    1,'Delay7',...
    fi(0,nt2,fiMath1,'hex','0'),...
    0,0,[],0,0);

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Constant_out1_s7,...
    Delay8_out1_s16,...
    1,'Delay8',...
    fi(0,nt2,fiMath1,'hex','0'),...
    0,0,[],0,0);

    hC_11=pirelab.getConstComp(buffInpGenAddr8PSK,...
    count_step_s52,...
    fi(0,nt2,fiMath1,'hex','1'),...
    'step_value','off',0,'','','');

    hC_11.addComment(sprintf(['  // Count limited, Unsigned Counter\n  //  initial value   = 1\n'...
    ,'  //  step value      = 1\n  //  count to value  = 3']));

    pirelab.getAddComp(buffInpGenAddr8PSK,...
    [HDLCounter_out1_s49,count_step_s52],...
    count_s50,...
    'Floor','Wrap','adder',pirTyp4,'++');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    count_from_s53,...
    fi(0,nt2,fiMath1,'hex','1'),...
    'countFrom','off',0,'','','');

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [count_from_s53,count_s50],...
    count_value_s54,...
    need_to_wrap_s55,'switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getCompareToValueComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s49,...
    need_to_wrap_s55,...
    '==',fi(0,nt2,fiMath1,'hex','3'),...
    'compare',0);

    pirelab.getMultiPortSwitchComp(buffInpGenAddr8PSK,...
    [validIn_s1,HDLCounter_out1_s49,count_value_s54],...
    count_s56,...
    1,'Zero-based contiguous','Floor','Wrap','switchEnable',[]);

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    count_reset_s51,...
    fi(0,nt2,fiMath1,'hex','1'),...
    'const','off',0,'','','');

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [count_reset_s51,count_s56],...
    count_s57,...
    LogicalOperator12_out1_s20,'switchReset',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    count_s57,...
    HDLCounter_out_s58,...
    1,'HDL Counter',...
    double(0),...
    0,0,[],0,0);

    pirelab.getWireComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s49,...
    HDLCounter_out1_s17,...
    'HDL Counter_out1');

    pirelab.getWireComp(buffInpGenAddr8PSK,...
    Switch1_out1_s43,...
    PSK8_out1_s30,...
    'PSK8_out1');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    HDLCounter_Initial_Val_out_s59,...
    fi(0,nt2,fiMath1,'hex','1'),...
    'HDL Counter_Initial_Val','on',0,'','','');

    pirelab.getConstComp(buffInpGenAddr8PSK,...
    HDLCounter_ctrl_const_out_s60,...
    1,...
    'HDL Counter_ctrl_const');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    HDLCounter_ctrl_const_out_s60,...
    HDLCounter_ctrl_delay_out_s61,...
    1,'HDL Counter_ctrl_delay',...
    double(0),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [HDLCounter_out_s58,HDLCounter_Initial_Val_out_s59],...
    HDLCounter_out1_s49,...
    HDLCounter_ctrl_delay_out_s61,'HDL Counter_switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [dataIn_s0,Delay1_delOut_s62],...
    Delay1_ectrl_s63,...
    LogicalOperator4_out1_s24,'Delay_Switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay1_ectrl_s63,...
    Delay1_delOut_s62,...
    1,'Delay1_lowered',...
    fi(0,nt1,fiMath1,'hex','0'),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [Delay1_delOut_s62,Delay1_last_value_s64],...
    Delay1_out1_s10,...
    LogicalOperator4_out1_s24,'bypass_out',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay1_out1_s10,...
    Delay1_last_value_s64,...
    1,'Delay1_bypass',...
    double(0),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [dataIn_s0,Delay2_delOut_s65],...
    Delay2_ectrl_s66,...
    LogicalOperator3_out1_s23,'Delay_Switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay2_ectrl_s66,...
    Delay2_delOut_s65,...
    1,'Delay2_lowered',...
    fi(0,nt1,fiMath1,'hex','0'),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [Delay2_delOut_s65,Delay2_last_value_s67],...
    Delay2_out1_s11,...
    LogicalOperator3_out1_s23,'bypass_out',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay2_out1_s11,...
    Delay2_last_value_s67,...
    1,'Delay2_bypass',...
    double(0),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [dataIn_s0,Delay4_delOut_s68],...
    Delay4_ectrl_s69,...
    LogicalOperator8_out1_s28,'Delay_Switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay4_ectrl_s69,...
    Delay4_delOut_s68,...
    1,'Delay4_lowered',...
    fi(0,nt1,fiMath1,'hex','0'),...
    0,0,[],0,0);

    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [Delay4_delOut_s68,Delay4_last_value_s70],...
    Delay4_out1_s13,...
    LogicalOperator8_out1_s28,'bypass_out',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(buffInpGenAddr8PSK,...
    Delay4_out1_s13,...
    Delay4_last_value_s70,...
    1,'Delay4_bypass',...
    double(0),...
    0,0,[],0,0);


    pirelab.getCompareToValueComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s17,...
    CompareToConstant_out1_s3,...
    '==',fi(0,nt2,fiMath1,'hex','2'),...
    sprintf('Compare\nTo Constant'),0);


    pirelab.getCompareToValueComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s17,...
    CompareToConstant1_out1_s4,...
    '==',fi(0,nt2,fiMath1,'hex','3'),...
    sprintf('Compare\nTo Constant1'),0);


    pirelab.getCompareToValueComp(buffInpGenAddr8PSK,...
    HDLCounter_out1_s17,...
    CompareToConstant5_out1_s5,...
    '==',fi(0,nt2,fiMath1,'hex','1'),...
    sprintf('Compare\nTo Constant5'),0);


    pirelab.getCompareToValueComp(buffInpGenAddr8PSK,...
    Delay7_out1_s15,...
    CompareToConstant7_out1_s6,...
    '==',fi(0,nt2,fiMath1,'hex','3'),...
    sprintf('Compare\nTo Constant7'),0);


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [validIn_s1,CompareToConstant5_out1_s5],...
    LogicalOperator_out1_s18,...
    'and',sprintf('Logical\nOperator'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [validIn_s1,CompareToConstant_out1_s3],...
    LogicalOperator1_out1_s19,...
    'and',sprintf('Logical\nOperator1'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [LogicalOperator5_out1_s25,resetIn_s2],...
    LogicalOperator12_out1_s20,...
    'or',sprintf('Logical\nOperator12'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [LogicalOperator2_out1_s22,CompareToConstant7_out1_s6],...
    LogicalOperator15_out1_s21,...
    'and',sprintf('Logical\nOperator15'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [RelationalOperator1_out1_s32,LogicalOperator9_out1_s29],...
    LogicalOperator2_out1_s22,...
    'and',sprintf('Logical\nOperator2'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [LogicalOperator2_out1_s22,LogicalOperator1_out1_s19],...
    LogicalOperator3_out1_s23,...
    'or',sprintf('Logical\nOperator3'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [LogicalOperator2_out1_s22,LogicalOperator_out1_s18],...
    LogicalOperator4_out1_s24,...
    'or',sprintf('Logical\nOperator4'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [RelationalOperator_out1_s31,validIn_s1],...
    LogicalOperator5_out1_s25,...
    'and',sprintf('Logical\nOperator5'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [validIn_s1,CompareToConstant1_out1_s4],...
    LogicalOperator6_out1_s26,...
    'and',sprintf('Logical\nOperator6'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    resetIn_s2,...
    LogicalOperator7_out1_s27,...
    'not',sprintf('Logical\nOperator7'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [LogicalOperator2_out1_s22,LogicalOperator6_out1_s26],...
    LogicalOperator8_out1_s28,...
    'or',sprintf('Logical\nOperator8'));


    pirelab.getLogicComp(buffInpGenAddr8PSK,...
    [Delay3_out1_s12,Delay5_out1_s14],...
    LogicalOperator9_out1_s29,...
    'and',sprintf('Logical\nOperator9'));


    pirelab.getBitConcatComp(buffInpGenAddr8PSK,...
    [Delay1_out1_s10,Delay2_out1_s11,Delay4_out1_s13],...
    y_s38,...
    'Bit Concat');


    pirelab.getBitConcatComp(buffInpGenAddr8PSK,...
    [Constant_out1_s40,Constant1_out1_s41,Constant2_out1_s42],...
    y_s39,...
    'Bit Concat1');


    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [y_s38,y_s39],...
    Switch1_out1_s43,...
    LogicalOperator2_out1_s22,'Switch1',...
    '>',0,'Floor','Wrap');


    pirelab.getRelOpComp(buffInpGenAddr8PSK,...
    [Constant_out1_s7,HDLCounter_out1_s17],...
    RelationalOperator_out1_s31,...
    '==',0,sprintf('Relational\nOperator'));


    pirelab.getRelOpComp(buffInpGenAddr8PSK,...
    [Delay8_out1_s16,Delay_out1_s9],...
    RelationalOperator1_out1_s32,...
    '==',0,sprintf('Relational\nOperator1'));


    pirelab.getSwitchComp(buffInpGenAddr8PSK,...
    [PSK8_out1_s30,Constant1_out1_s8],...
    Switch2_out1_s33,...
    LogicalOperator15_out1_s21,'Switch2',...
    '>',0,'Floor','Wrap');




    pirelab.getWireComp(buffInpGenAddr8PSK,Switch2_out1_s33,addr8PSK);
    pirelab.getWireComp(buffInpGenAddr8PSK,LogicalOperator2_out1_s22,addr8PSKValidOut);
end

function hS=addSignal(buffInpGenAddr8PSK,sigName,pirTyp,simulinkRate)
    hS=buffInpGenAddr8PSK.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=0;
    hS.SimulinkRate=simulinkRate;
end