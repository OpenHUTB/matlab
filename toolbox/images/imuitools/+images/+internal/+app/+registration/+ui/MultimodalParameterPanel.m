classdef MultimodalParameterPanel<images.internal.app.registration.ui.ParameterPanel





    properties(GetAccess={?uitest.factory.Tester,...
        ?images.internal.app.registration.ui.DocumentArea})
hTransformType
hNumSamples
hNumBins
hUseAllPixels
hGrowthFactor
hEpsilon
hInitialRadius
hMaxIterations
hPyramidLevels
        TformList={'Similarity','Affine','Rigid','Translation'};
    end

    properties
        Tform='similarity';
        NumSamples=500;
        NumBins=50;
        UseAllPixels=true;
        GrowthFactor=1.05;
        Epsilon=1.5e-6;
        InitialRadius=6.25e-3;
        MaxIterations=100;
        PyramidLevels=3;
HelpPanel
    end

    methods

        function self=MultimodalParameterPanel(hParent)

            import images.internal.app.registration.ui.*;

            self.PanelHeight=212;

            self.setupParameterPanel(hParent,getMessageString('intensityParameters'),'intensityParameters')

            self.setupMultimodalComponents();

        end

        function setupMultimodalComponents(self)

            import images.internal.app.registration.ui.*;

            pos=get(self.BodyPanel,'Position');
            border=2;
            height=20;

            newpos=[10,pos(4)-height,5*height,height];
            labelpos=[10+(5*height)+border,pos(4)-height,pos(3)-(5*height)-border-10,height-3];

            self.hTransformType=uidropdown(...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Items',self.TformList,...
            'ItemsData',1:numel(self.TformList),...
            'Value',1,...
            'Tag','MultiTransformType',...
            'Tooltip',getMessageString('tformTypeTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.tformCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('tformType'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(2*(height+border)),height,height];
            labelpos=[10+(3*height)+border,pos(4)-(2*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hUseAllPixels=uicheckbox(...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',1,...
            'Tag','UseAllPixels',...
            'Text','',...
            'Tooltip',getMessageString('usePixelsTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.useAllPixelsCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('usePixels'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(3*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(3*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hNumSamples=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.NumSamples,...
            'Enable','off',...
            'Tag','NumSamples',...
            'RoundFractionalValues','on',...
            'Tooltip',getMessageString('numSamplesTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.numSamplesCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('numSamples'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(4*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(4*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hNumBins=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.NumBins,...
            'Tag','NumBins',...
            'RoundFractionalValues','on',...
            'Tooltip',getMessageString('numBinsTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.histBinCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('numBins'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(5*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(5*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hGrowthFactor=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.GrowthFactor,...
            'Tag','GrowthFactor',...
            'Tooltip',getMessageString('growthFactorTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.growthFactorCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('growthFactor'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(6*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(6*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hEpsilon=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.Epsilon,...
            'Tag','Epsilon',...
            'Tooltip',getMessageString('epsilonTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.epsilonCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('epsilon'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(7*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(7*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hInitialRadius=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.InitialRadius,...
            'Tag','InitialRadius',...
            'Tooltip',getMessageString('initRadiusTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.initRadiusCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('initRadius'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(8*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(8*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hMaxIterations=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.MaxIterations,...
            'Tag','MultiMaxIterations',...
            'RoundFractionalValues','on',...
            'Tooltip',getMessageString('maxIterTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.maxIterCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('maxIter'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos=[10,pos(4)-(9*(height+border)),3*height,height];
            labelpos=[10+(3*height)+border,pos(4)-(9*(height+border)),pos(3)-(3*height)-border-10,height-3];

            self.hPyramidLevels=uieditfield('numeric',...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Value',self.PyramidLevels,...
            'Tag','MultiPyramidLevels',...
            'RoundFractionalValues','on',...
            'Tooltip',getMessageString('pyramidLevelsTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.pyramidCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('pyramidLevels'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            bodyPos=get(self.BodyPanel,'Position');
            pos=[bodyPos(3)-18,3,16,16];

            helpImage=uiimage('Parent',self.BodyPanel,...
            'Position',pos,...
            'ScaleMethod','fill',...
            'ImageSource',fullfile(matlabroot,'toolbox','shared','controllib','general','resources','Help_16.png'));

            addlistener(helpImage,'ImageClicked',@(~,~)helpCallback());

        end

        function tformCallback(self,~,evt)
            self.Tform=evt.Source.Items{evt.Source.Value};
            self.updateSettings();
        end

        function numSamplesCallback(self,~,evt)
            inputVal=evt.Value;
            if self.validateSettings(inputVal)&&inputVal>0
                self.NumSamples=inputVal;
                self.updateSettings();
            else
                self.hNumSamples.Value=evt.PreviousValue;
            end
        end

        function histBinCallback(self,~,evt)
            inputVal=evt.Value;
            if self.validateSettings(inputVal)&&inputVal>=5
                self.NumBins=inputVal;
                self.updateSettings();
            else
                self.hNumBins.Value=evt.PreviousValue;
            end
        end

        function useAllPixelsCallback(self,~,evt)
            self.UseAllPixels=evt.Source.Value;
            self.updateSettings();
        end

        function growthFactorCallback(self,~,evt)
            inputVal=evt.Source.Value;
            if self.validateSettings(inputVal)&&inputVal>1
                self.GrowthFactor=inputVal;
                self.updateSettings();
            else
                self.hGrowthFactor.Value=evt.PreviousValue;
            end
        end

        function epsilonCallback(self,~,evt)
            inputVal=evt.Source.Value;
            if self.validateSettings(inputVal)&&inputVal>0
                self.Epsilon=inputVal;
                self.updateSettings();
            else
                self.hEpsilon.Value=evt.PreviousValue;
            end
        end

        function initRadiusCallback(self,~,evt)
            inputVal=evt.Source.Value;
            if self.validateSettings(inputVal)&&inputVal>0
                self.InitialRadius=inputVal;
                self.updateSettings();
            else
                self.hInitialRadius.Value=evt.PreviousValue;
            end
        end

        function maxIterCallback(self,~,evt)
            inputVal=evt.Source.Value;
            if self.validateSettings(inputVal)&&inputVal>0
                self.MaxIterations=inputVal;
                self.updateSettings();
            else
                self.hMaxIterations.Value=evt.PreviousValue;
            end
        end

        function pyramidCallback(self,~,evt)
            inputVal=evt.Source.Value;
            if self.validateSettings(inputVal)&&inputVal>0
                self.PyramidLevels=inputVal;
                self.updateSettings();
            else
                self.hPyramidLevels.Value=evt.PreviousValue;
            end
        end

        function enableNumSamples(self,TF)
            if TF
                status='off';
            else
                status='on';
            end
            set(self.hNumSamples,'Enable',status)
        end

    end

    methods

        function set.Tform(self,inputString)
            idx=find(strcmpi(self.TformList,inputString));%#ok<MCSUP>
            set(self.hTransformType,'Value',idx);%#ok<MCSUP>
            self.Tform=lower(inputString);
        end

        function set.NumSamples(self,inputVal)
            set(self.hNumSamples,'Value',inputVal);%#ok<MCSUP>
            self.NumSamples=inputVal;
        end

        function set.NumBins(self,inputVal)
            set(self.hNumBins,'Value',inputVal);%#ok<MCSUP>
            self.NumBins=inputVal;
        end

        function set.UseAllPixels(self,TF)
            self.enableNumSamples(TF);
            set(self.hUseAllPixels,'Value',TF);%#ok<MCSUP>
            self.UseAllPixels=TF;
        end

        function set.GrowthFactor(self,inputVal)
            set(self.hGrowthFactor,'Value',inputVal);%#ok<MCSUP>
            self.GrowthFactor=inputVal;
        end

        function set.Epsilon(self,inputVal)
            set(self.hEpsilon,'Value',inputVal);%#ok<MCSUP>
            self.Epsilon=inputVal;
        end

        function set.InitialRadius(self,inputVal)
            set(self.hInitialRadius,'Value',inputVal);%#ok<MCSUP>
            self.InitialRadius=inputVal;
        end

        function set.MaxIterations(self,inputVal)
            set(self.hMaxIterations,'Value',inputVal);%#ok<MCSUP>
            self.MaxIterations=inputVal;
        end

        function set.PyramidLevels(self,inputVal)
            set(self.hPyramidLevels,'Value',inputVal);%#ok<MCSUP>
            self.PyramidLevels=inputVal;
        end

    end

end

function helpCallback()
    doc registration.metric.MattesMutualInformation;
    doc registration.optimizer.OnePlusOneEvolutionary;
end
