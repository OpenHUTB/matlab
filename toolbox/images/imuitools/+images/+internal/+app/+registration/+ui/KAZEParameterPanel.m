classdef KAZEParameterPanel<images.internal.app.registration.ui.ParameterPanel





    properties(GetAccess={?uitest.factory.Tester,...
        ?images.internal.app.registration.ui.DocumentArea})
hDiffusion
        DiffusionList={'Region','Sharpedge','Edge'};
hTransformType
hHasRotation
        TformList={'Rigid','Similarity','Affine','Projective'};

hFeatureNumberSlider
hFeatureQualitySlider
    end

    properties
        Diffusion='region';
        Tform='similarity';
        HasRotation=true;
    end

    methods

        function self=KAZEParameterPanel(hParent)

            import images.internal.app.registration.ui.*;

            self.PanelHeight=158;

            self.setupParameterPanel(hParent,getMessageString('featureParameters'),'featureParameters')

            self.setupFeatureComponents();

        end

        function setupFeatureComponents(self)

            import images.internal.app.registration.ui.*;

            pos=get(self.BodyPanel,'Position');
            border=2;
            height=20;

            newpos=[10,pos(4)-height,5*height,height];
            labelpos=[10+(5*height)+border,pos(4)-height,pos(3)-(5*height)-border-10,height-3];


            self.hTransformType=uidropdown(...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Items',self.TformList,...
            'ItemsData',1:numel(self.TformList),...
            'Value',2,...
            'Tag','FeatureTransformType',...
            'Tooltip',getMessageString('tformTypeTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.tformCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('tformType'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos(2)=pos(4)-(2*height)-(2*border);
            labelpos=[10+(5*height)+border,newpos(2),pos(3)-10,height-3];


            self.hDiffusion=uidropdown(...
            'Parent',self.BodyPanel,...
            'Position',newpos,...
            'Items',self.DiffusionList,...
            'ItemsData',1:numel(self.DiffusionList),...
            'Value',1,...
            'Tag','KAZEDiffusionType',...
            'Tooltip',getMessageString('diffusionTypeTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.diffusionCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('diffusionType'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos(2)=pos(4)-(3*height)-(3*border);
            labelpos=[10,newpos(2),pos(3)-10,height-3];

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('numDetectedFeatures'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','bottom',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos(2)=pos(4)-(3.5*height)-(4*border);
            newpos(3)=8*height;

            self.hFeatureNumberSlider=uislider('Parent',self.BodyPanel,...
            'Tag','NumDetectedFeatureSliderKAZE',...
            'Value',0.5,...
            'Position',[newpos(1:3),3],...
            'Visible','on',...
            'Limits',[0,1],...
            'MajorTicks',[],...
            'MinorTicks',[],...
            'ValueChangedFcn',@(~,~)updateSettings(self));

            newpos(2)=pos(4)-(5*height)-(5*border);
            labelpos=[10,newpos(2),pos(3)-10,height-3];

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('qualityFeatures'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','bottom',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

            newpos(2)=pos(4)-(5.5*height)-(6*border);
            newpos(3)=8*height;

            self.hFeatureQualitySlider=uislider('Parent',self.BodyPanel,...
            'Tag','FeatureQualitySliderKAZE',...
            'Value',0.5,...
            'Position',[newpos(1:3),3],...
            'Visible','on',...
            'Limits',[0,1],...
            'MajorTicks',[],...
            'MinorTicks',[],...
            'ValueChangedFcn',@(~,~)updateSettings(self));

            newpos(3)=height;
            newpos(2)=pos(4)-(7*height)-(7*border);
            labelpos=[10+height+border,newpos(2),pos(3)-10-height-border,height-3];

            self.hHasRotation=uicheckbox(...
            'Parent',self.BodyPanel,...
            'Value',1,...
            'Position',newpos,...
            'Tag','HasRotation',...
            'Text','',...
            'Tooltip',getMessageString('hasRotationTooltip'),...
            'ValueChangedFcn',@(hobj,evt)self.hasRotationCallback(hobj,evt));

            uilabel('Parent',self.BodyPanel,...
            'Text',getMessageString('hasRotation'),...
            'Position',labelpos,...
            'Visible','on',...
            'VerticalAlignment','top',...
            'FontName',self.FontName,...
            'FontSize',self.FontSize);

        end

        function diffusionCallback(self,~,evt)
            self.Diffusion=evt.Source.Items{evt.Source.Value};
            self.updateSettings();
        end

        function tformCallback(self,~,evt)
            self.Tform=evt.Source.Items{evt.Source.Value};
            self.updateSettings();
        end

        function hasRotationCallback(self,~,evt)
            self.HasRotation=evt.Source.Value;
            self.updateSettings();
        end

    end

    methods

        function set.Diffusion(self,inputString)
            idx=find(strcmpi(self.DiffusionList,inputString));%#ok<MCSUP>
            set(self.hDiffusion,'Value',idx);%#ok<MCSUP>
            self.Diffusion=lower(inputString);
        end

        function set.Tform(self,inputString)
            idx=find(strcmpi(self.TformList,inputString));%#ok<MCSUP>
            set(self.hTransformType,'Value',idx);%#ok<MCSUP>
            self.Tform=lower(inputString);
        end

        function set.HasRotation(self,TF)
            set(self.hHasRotation,'Value',TF);%#ok<MCSUP>
            self.HasRotation=TF;
        end

    end

end

