










classdef UserInterface<hgsetget

    properties(Access=public)
        AutomaticRun=true;
        Handles=[];
        Model=[];
        Name=''

        Doses=[];
        Plots=[];
        Sliders=[];
        Statistics=[];
        ConfigureRanges='on';
        SliderLocation=1;
        NumSlidersShown=1;

        plotTabHandle=[];
        axesHandles=[];

        LastDataRun=[];
        LastDirectory='';

        UseStopTime=true;
        StopTime=10;
        OutputTimes=[];
        SupportOutputTimes=false;
        InvalidOutputTimes=false;
        TimeUnits='seconds';
        ModelDocument='';
        Title='';
    end

    methods
        function obj=UserInterface(varargin)
            if nargin==0
                load ExportedDefFile;
            else
                exportedDef=varargin{1};
            end

            obj.Model=exportedDef.Model;
            obj.Name=exportedDef.Name;
            obj.Doses=exportedDef.Doses;
            obj.Sliders=exportedDef.Sliders;
            obj.Plots=exportedDef.Plots;
            obj.Statistics=exportedDef.Statistics;
            obj.UseStopTime=exportedDef.UseStopTime;
            obj.StopTime=exportedDef.StopTime;
            obj.OutputTimes=exportedDef.OutputTimes;
            obj.SupportOutputTimes=exportedDef.SupportOutputTimes;
            obj.TimeUnits=exportedDef.TimeUnits;
            obj.ModelDocument=exportedDef.ModelDocument;
            obj.Title=exportedDef.Title;

            if exportedDef.ConfigureRanges
                obj.ConfigureRanges='on';
            else
                obj.ConfigureRanges='off';
            end

            obj.layout;
        end

        function layout(obj)
            obj.Handles.Figure=figure('Position',[100,100,1000,650],...
            'NumberTitle','off',...
            'Name',obj.Title,...
            'MenuBar','none',...
            'IntegerHandle','off',...
            'Tag','SimBiology_UI_Figure',...
            'HandleVisibility','off');

            obj.Handles.Toolbar=uitoolbar(obj.Handles.Figure,...
            'Tag','SimBiology_UI_Toolbar');

            obj.Handles.RunButton=uipushtool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','playback_script_run.png'),...
            'TooltipString','Simulate the model',...
            'Tag','SimBiology_UI_ToolBar_Run_Button',...
            'HandleVisibility','off');

            obj.Handles.AutoRunButton=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','re-run.png'),...
            'TooltipString','Automatically run the model when the sliders change value',...
            'HandleVisibility','off',...
            'Tag','SimBiology_UI_ToolBar_AutoRun_Button',...
            'State','on');

            obj.Handles.Overlay=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','overlay_results_16.png'),...
            'TooltipString','Overlay results',...
            'Tag','SimBiology_UI_ToolBar_Overlay_Button',...
            'HandleVisibility','off',...
            'State','off',...
            'Separator','on');

            obj.Handles.ShowAsTab=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','tab.png'),...
            'TooltipString','Show plots on separate tabs',...
            'Tag','SimBiology_UI_ToolBar_ShowAsTab_Button',...
            'HandleVisibility','off',...
            'State','on',...
            'Separator','on');


            obj.Handles.ShowAsGrid=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Axes_Grid_16.png'),...
            'TooltipString','Show plots as a grid of subplots',...
            'Tag','SimBiology_UI_ToolBar_ShowAsGrid_Button',...
            'HandleVisibility','off',...
            'State','off');

            obj.Handles.ShowAsColumn=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Axes_Column_16.png'),...
            'TooltipString','Show plots as a column of subplots',...
            'Tag','SimBiology_UI_ToolBar_ShowAsColumn_Button',...
            'HandleVisibility','off',...
            'State','off');

            obj.Handles.ShowAsRow=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Axes_Row_16.png'),...
            'TooltipString','Show plots as a row of subplots',...
            'Tag','SimBiology_UI_ToolBar_ShowAsRow_Button',...
            'HandleVisibility','off',...
            'Visible','off',...
            'State','off');

            obj.Handles.ViewModel=uipushtool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Model_Simbiology.png'),...
            'TooltipString','View documentation on the model',...
            'Tag','SimBiology_UI_ToolBar_ViewModel_Button',...
            'HandleVisibility','off');

            obj.Handles.ZoomIn=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Zoom_In_16.png'),...
            'TooltipString','Zoom in',...
            'Tag','SimBiology_UI_ToolBar_ZoomIn_Button',...
            'HandleVisibility','off',...
            'Separator','on');

            obj.Handles.ZoomOut=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','Zoom_Out_16.png'),...
            'TooltipString','Zoom out',...
            'Tag','SimBiology_UI_ToolBar_ZoomOut_Button',...
            'HandleVisibility','off');

            obj.Handles.DataCursor=uitoggletool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','datacursor.png'),...
            'TooltipString','Show data cursor',...
            'Tag','SimBiology_UI_ToolBar_DataCursor_Button',...
            'HandleVisibility','off');

            obj.Handles.ExportFigures=uipushtool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','ExportFigure.png'),...
            'TooltipString','Export figures',...
            'Tag','SimBiology_UI_ToolBar_ExportFigures_Button',...
            'HandleVisibility','off',...
            'Enable','off',...
            'Separator','on');

            obj.Handles.ExportData=uipushtool(obj.Handles.Toolbar,...
            'CData',SimBiology.simviewer.internal.layouthandler('readIcon','ExportData.png'),...
            'TooltipString','Export data to Excel',...
            'Tag','SimBiology_UI_ToolBar_ExportData_Button',...
            'Enable','off',...
            'HandleVisibility','off');

            set(obj.Handles.RunButton,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'run',obj});
            set(obj.Handles.ZoomIn,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'zoomin',obj});
            set(obj.Handles.ZoomOut,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'zoomout',obj});
            set(obj.Handles.DataCursor,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'datacursor',obj});
            set(obj.Handles.Overlay,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'overlay',obj});
            set(obj.Handles.AutoRunButton,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'automaticRun',obj});
            set(obj.Handles.ShowAsTab,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'showAsTab',obj});
            set(obj.Handles.ShowAsGrid,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'showAsGrid',obj});
            set(obj.Handles.ShowAsColumn,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'showAsColumn',obj});
            set(obj.Handles.ShowAsRow,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'showAsRow',obj});
            set(obj.Handles.ExportFigures,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'exportFigures',obj});
            set(obj.Handles.ExportData,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'exportData',obj});
            set(obj.Handles.ViewModel,'ClickedCallback',{@SimBiology.simviewer.internal.uiController,'viewModel',obj});
            set(obj.Handles.Figure,'ResizeFcn',{@SimBiology.simviewer.internal.uiController,'resizeFigure',obj});

            if isempty(obj.ModelDocument)
                obj.Handles.ViewModel.Visible='off';
            else
                obj.Handles.ViewModel.Separator='on';
            end


            obj.Handles.TabPanelGroup=uitabgroup(obj.Handles.Figure,'Units','Normalized',...
            'Position',[.005,.005,.4,.99],...
            'Tag','SimBiology_UI_ExploreModelAndPlots_TabGroup',...
            'HandleVisibility','off');

            obj.Handles.ExploreModelTab=uitab(obj.Handles.TabPanelGroup,...
            'Title','Explore Model',...
            'Tag','SimBiology_UI_ExploreModel_Tab',...
            'HandleVisibility','off');

            obj.Handles.PlotSetupTab=uitab(obj.Handles.TabPanelGroup,...
            'Title','Plot Setup',...
            'Tag','SimBiology_UI_PlotSetup_Tab',...
            'HandleVisibility','off');


            obj.Handles.PlotTabUIPanel=uipanel(obj.Handles.Figure,'Units','Normalized',...
            'Position',[.411,0.005,.5841,.99],...
            'BorderWidth',0,...
            'HandleVisibility','off');

            obj.Handles.SubPlotPanel=uipanel(obj.Handles.Figure,'Units','Normalized',...
            'Position',[.411,0.005,.5841,.99],...
            'BorderWidth',0,...
            'Tag','SimBiology_UI_SubPlotPanel',...
            'HandleVisibility','off',...
            'Visible','off');

            set(obj.Handles.PlotTabUIPanel,'Units','pixels');
            set(obj.Handles.SubPlotPanel,'Units','pixels');

            obj.Handles.AxesGrid=sbioGroupLayout('grid','gridDimensions',[length(obj.Plots),1],...
            'gap',[20,30],'insets',[5,25,25,25],...
            'tightAxes',true);

            obj.Handles.PlotTabPanelGroup=uitabgroup(obj.Handles.PlotTabUIPanel,'Units','Normalized',...
            'Position',[0,0,1,1],...
            'HandleVisibility','off',...
            'Tag','SimBiology_UI_Plots_TabGroup',...
            'SelectionChangedFcn',{@SimBiology.simviewer.internal.uiController,'plotSelectionChanged',obj});

            for i=1:length(obj.Plots)
                h=uitab(obj.Handles.PlotTabPanelGroup,...
                'Title',obj.Plots(i).Name,...
                'Tag',['SimBiology_UI_',obj.Plots(i).Name,'_Tab']);

                tabAxes=axes('parent',h,...
                'Tag',['SimBiology_UI_',obj.Plots(i).Name,'_TabAxes'],...
                'HandleVisibility','callback');

                gridAxes=axes('parent',obj.Handles.SubPlotPanel,...
                'HandleVisibility','off',...
                'Tag',['SimBiology_UI_',obj.Plots(i).Name,'_GridAxes']);

                if isempty(obj.plotTabHandle)
                    obj.plotTabHandle=h;
                    obj.axesHandles=tabAxes;
                    obj.Handles.AxesGrid.add(gridAxes);
                else
                    obj.plotTabHandle(end+1)=h;
                    obj.axesHandles(end+1)=tabAxes;
                    obj.Handles.AxesGrid.add(gridAxes);
                end
            end


            obj.Handles.ZoomMode=zoom(obj.Handles.Figure);



            set([obj.Handles.AxesGrid.children{:}],'HandleVisibility','on')


            if length(obj.Plots)==1
                set(obj.Handles.ShowAsTab,'Visible','off','Separator','off');
                set(obj.Handles.ShowAsGrid,'Visible','off');
                set(obj.Handles.ShowAsColumn,'Visible','off');
            end


            SimBiology.simviewer.internal.exploreModelTab(obj);
            SimBiology.simviewer.internal.plotSetupTab(obj);


            SimBiology.simviewer.internal.uiController(obj.Handles.ShowAsColumn,[],'showAsColumn',obj);
        end

        function msg=okToRun(obj)
            msg='';
            if obj.InvalidOutputTimes
                msg='Output Times is not valid MATLAB code. Use Stop Time or correct the Output Times expression.';
            end
        end

        function out=getMarkerSizes(obj)
            out=[];
            for i=1:length(obj.Plots)
                lines=obj.Plots(i).PlotLines;
                for j=1:length(lines)
                    out(end+1)=lines(j).MarkerSize;%#ok<*AGROW>
                end
            end
            out=unique(out);
        end

        function out=getLineWidths(obj)
            out=[];
            for i=1:length(obj.Plots)
                lines=obj.Plots(i).PlotLines;
                for j=1:length(lines)
                    out(end+1)=lines(j).LineWidth;
                end
            end
            out=unique(out);
        end
    end
end
