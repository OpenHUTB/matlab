%#codegen

function[x,n,ls]=normalize_fi(u)%#codegen














    coder.inline('always');
    coder.allowpcode('plain');

    persistent NLZLUT
    if isempty(NLZLUT)
        NLZLUT=number_of_leading_zeros_look_up_table();
    end

    assert(isscalar(u),'Input must be scalar');
    assert(~u.SignednessBool,'Input must be unsigned.');
    assert(isfi(u)&&isfixed(u),'Input must be a fi object with fixed-point data type.');
    u=removefimath(u);

    word_length=u.WordLength;
    u_fraction_length=u.FractionLength;
    B=8;
    leftshifts=int8(0);

    T_unsigned_integer=numerictype(0,word_length,0);
    v=reinterpretcast(u,T_unsigned_integer);
    F=fimath('OverflowAction','Wrap',...
    'RoundingMethod','Floor',...
    'SumMode','KeepLSB',...
    'SumWordLength',v.WordLength);
    v=setfimath(v,F);

    for k=coder.unroll(1:ceil(word_length/B))






        index=int32(bitsra(v,word_length-B)+uint8(1));



        shiftamount=NLZLUT(index);

        v=bitsll(v,shiftamount);

        leftshifts=leftshifts+shiftamount;
    end




    x=reinterpretcast(v,numerictype(u));
    x=setfimath(x,fimath(u));



    n=int8(word_length-u_fraction_length)-leftshifts-int8(1);
    ls=leftshifts;
end

function NLZLUT=number_of_leading_zeros_look_up_table()


    NLZLUT=int8([8,7,6,6,5,5,5,5...
    ,4,4,4,4,4,4,4,4...
    ,3,3,3,3,3,3,3,3...
    ,3,3,3,3,3,3,3,3...
    ,2,2,2,2,2,2,2,2...
    ,2,2,2,2,2,2,2,2...
    ,2,2,2,2,2,2,2,2...
    ,2,2,2,2,2,2,2,2...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,1,1,1,1,1,1,1,1...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0...
    ,0,0,0,0,0,0,0,0]);
end
