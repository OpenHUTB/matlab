classdef DiagnosticServiceComponent<handle




    methods(Static,Access=public)

        function desc=getDescription()
            desc='Configure AUTOSAR Diagnostic Services and Runtime Environment (RTE) for emulation.';
        end

        function type=getType()
            type='Diagnostic Service Component';
        end

        function blockIconType=getBlockIconType()
            blockIconType='DiagnosticService';
        end

        function display=getDisplay()
            display='disp(''Diagnostic Service\n   Component'')';
        end

        function help=getHelp()
            help='helpview(fullfile(docroot,''autosar'',''helptargets.map''),''autosar_diagnostic_service_block'');';
        end

        function keywords=getKeywords()
            keywords=[{'AUTOSAR';'Dem';'FiM';'Diagnostic';'Manager';'Function';'Inhibition'};...
            autosar.bsw.DiagnosticServiceComponent.getType()];

        end

        function addBlocks(blkPath)

            demBlockH=add_block('autosarspkglib_internal/Dem Module',[blkPath,'/DEM'],...
            'Position',[370,173,512,218]);
            fimBlockH=add_block('autosarspkglib_internal/FiM Module',[blkPath,'/FIM'],...
            'Position',[170,173,312,218]);


            set_param(demBlockH,'MaxEventId','MaxEventId');
            set_param(demBlockH,'DemDebounceCounterIncrementStepSize','DemDebounceCounterIncrementStepSize');
            set_param(demBlockH,'DemDebounceCounterDecrementStepSize','DemDebounceCounterDecrementStepSize');
            set_param(demBlockH,'DemDebounceCounterFailedThreshold','DemDebounceCounterFailedThreshold');
            set_param(demBlockH,'DemDebounceCounterPassedThreshold','DemDebounceCounterPassedThreshold');


            set_param(demBlockH,'EnableConditionIndexes','EnableConditionIndexes');
            set_param(demBlockH,'StorageConditionIndexes','StorageConditionIndexes');


            set_param(fimBlockH,'MaxFID','MaxFID');
            set_param(fimBlockH,'InhibitionMatrix','InhibitionMatrix');


            add_block('built-in/Area',...
            [blkPath,'/RTE'],...
            'Position',[70,09,612,116],...
            'BackgroundColor','[0.992,0.937,0.913]');

            add_block('built-in/Area',...
            [blkPath,'/Basic Software'],...
            'Position',[70,133,612,248],...
            'BackgroundColor','[0.698,0.698,0.698]');

        end

        function addMaskObjectParameters(maskObject)


            maskObject.Initialization=[maskObject.Initialization,'autosar.ui.bsw.ServiceComponentListener.updateDiagnosticServiceComponentUI();'];

            maskObject.addParameter('Type','edit',...
            'Name','MaxEventId',...
            'Prompt','Max EventId:',...
            'Value','10',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','MaxFID',...
            'Prompt','Max FID:',...
            'Value','10',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','DemDebounceCounterIncrementStepSize',...
            'Prompt','Increment step size:',...
            'Value','1',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','DemDebounceCounterDecrementStepSize',...
            'Prompt','Decrement step size:',...
            'Value','1',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','DemDebounceCounterFailedThreshold',...
            'Prompt','Failed threshold:',...
            'Value','2',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','DemDebounceCounterPassedThreshold',...
            'Prompt','Passed threshold:',...
            'Value','-1',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameter('Type','edit',...
            'Name','InhibitionMatrix',...
            'Prompt','InhibitionMatrix:',...
            'Value','zeros(11,''uint8'')',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');



            maskObject.addParameter('Type','edit',...
            'Name','EnableConditionIndexes',...
            'Prompt','EnableConditionIndexes:',...
            'Value','zeros(257,''uint8'')',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');



            maskObject.addParameter('Type','edit',...
            'Name','StorageConditionIndexes',...
            'Prompt','StorageConditionIndexes:',...
            'Value','zeros(257,''uint8'')',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameterConstraint('Name','pos16',...
            'Parameters',{...
            'DemDebounceCounterIncrementStepSize',...
            'DemDebounceCounterDecrementStepSize',...
            'DemDebounceCounterFailedThreshold',...
            },...
            'Rules',{...
            'Minimum','1',...
            'Maximum','32767',...
            'DataType','int16',...
            'Dimension',{'scalar'},...
            'Sign',{'positive'},...
            'Finiteness',{'finite'},...
            'Complexity',{'real'}...
            });

            maskObject.addParameterConstraint('Name','neg16',...
            'Parameters',{'DemDebounceCounterPassedThreshold'},...
            'Rules',{...
            'Minimum','-32768',...
            'Maximum','-1',...
            'DataType','int16',...
            'Dimension',{'scalar'},...
            'Sign',{'negative'},...
            'Finiteness',{'finite'},...
            'Complexity',{'real'}
            });

            maskObject.addParameterConstraint('Name','u16',...
            'Parameters',{'MaxEventId'},...
            'Rules',{
            'Minimum','1',...
            'Maximum','65535',...
            'DataType','uint16',...
            'Dimension',{'scalar'},...
            'Sign',{'positive'},...
            'Finiteness',{'finite'},...
            'Complexity',{'real'}
            });

            maskObject.addParameterConstraint('Name','u16withZero',...
            'Parameters',{'MaxFID'},...
            'Rules',{
            'Minimum','0',...
            'Maximum','65535',...
            'DataType','uint16',...
            'Dimension',{'scalar'},...
            'Sign',{'positive'},...
            'Finiteness',{'finite'},...
            'Complexity',{'real'}
            });

        end

    end

end


