classdef NVRAMServiceComponent<handle




    methods(Static,Access=public)

        function desc=getDescription()
            desc='Configure AUTOSAR NVRAM Services and Runtime Environment (RTE) for emulation.';
        end

        function type=getType()
            type='NVRAM Service Component';
        end

        function blockIconType=getBlockIconType()
            blockIconType='NVRAMService';
        end

        function display=getDisplay()
            display='disp(''NVRAM Service\n   Component'')';
        end

        function help=getHelp()
            help='helpview(fullfile(docroot,''autosar'',''helptargets.map''),''autosar_memory_service_block'');';
        end

        function keywords=getKeywords()
            keywords=[{'AUTOSAR';'NvM';'NVRAM';'Non-volatile';'non volatile';'Manager'};...
            autosar.bsw.NVRAMServiceComponent.getType()];
        end

        function addBlocks(blkPath)


            nvmBlockH=add_block('autosarspkglib_internal/NvM Module',[blkPath,'/NvM'],...
            'Position',[255,168,397,213]);


            add_block('built-in/Area',...
            [blkPath,'/RTE'],...
            'Position',[215,09,447,116],...
            'BackgroundColor','[0.992,0.937,0.913]');

            add_block('built-in/Area',...
            [blkPath,'/Basic Software'],...
            'Position',[215,128,447,253],...
            'BackgroundColor','[0.698,0.698,0.698]');

            set_param(nvmBlockH,'MaxBlockId','MaxBlockId');

        end

        function addMaskObjectParameters(maskObject)

            maskObject.Initialization=[maskObject.Initialization,'autosar.ui.bsw.ServiceComponentListener.updateNVRAMServiceComponentUI();'];

            maskObject.addParameter('Type','edit',...
            'Name','MaxBlockId',...
            'Prompt','Max BlockId:',...
            'Value','10',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

            maskObject.addParameterConstraint('Name','u16',...
            'Parameters',{'MaxBlockId'},...
            'Rules',{...
            'Minimum','1',...
            'Maximum','65535',...
            'DataType','uint16',...
            'Dimension',{'scalar'},...
            'Sign',{'positive'},...
            'Finiteness',{'finite'},...
            'Complexity',{'real'}
            });

            maskObject.addParameter('Type','edit',...
            'Name','NvInitValues',...
            'Prompt','NvInitValues:',...
            'Value','{''0''}',...
            'Tunable','on',...
            'Evaluate','on',...
            'Hidden','off');

        end

    end

end


