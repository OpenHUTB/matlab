




classdef PackageString
    properties(Constant)
        Title=[DAStudio.message('RTW:autosar:configAutosarInterface'),':'];
        UITitle=[DAStudio.message('Simulink:studio:AutosarPropertiesUiTitle'),':'];
        ValidateButtonStr=DAStudio.message('coderdictionary:mapping:ValidateMapping_Tooltip');
        SyncButtonStr=DAStudio.message('autosarstandard:ui:uiSyncButtonStr');
        MapRootName='Simulink Mapping';
        Name='Name';
        Inports='Inports';
        Outports='Outports';
        FunctionCallers='Function Callers';
        FunctionCallersProperty='FunctionCallers';
        ClientPortNameProperty='ClientPort';
        ClientPortOpProperty='Operation';
        EntryPointFcns='Entry Point Functions';
        Initialization='Initialize Function';
        ResetFunction='Reset Function';
        Termination='Terminate Function';
        RunnableProperty='Runnable';
        InitProperty='InitializeFunctions';
        ResetProperty='ResetFunctions';
        TerminateProperty='TerminateFunctions';
        PeriodicBlock='Periodic Blocks';
        FunctionInports='Function Inports';
        FunctionOutports='Function Outports';
        FcnCallInportsProperty='FcnCallInports';
        FcnCallInports='Exported Functions';
        ServerFunctionsProperty='ServerFunctions';
        DataTransferProperty='DataTransfers';
        IrvAccessModeProperty='IrvAccessMode';
        RateTransitionProperty='RateTransition';
        IrvNameProperty='IrvName';
        LookupTablesProperty='LookupTables';
        LookupTables='Lookup Tables'
        DataTransfer='Data Transfers';
        DataTransferMapClass='Simulink.AutosarTarget.InterRunnableVariableMapping';
        DataTransferClass='Simulink.AutosarTarget.InterRunnableVariable';
        IrvAccess={'Implicit','Explicit'};
        ParameterAccessMode={'PortParameter','Shared','PerInstance','ConstantMemory'};
        LookupTableMapClass='Simulink.AutosarTarget.LookupTableMapping';
        ARParameterClass='Simulink.AutosarTarget.ARParameter';
        StepsProperty='StepFunctions';
        StepNodeName='Step Function';
        StepNodeSampleTime='Sample time:';
        OutportIdentifier='Send';
        mappingAccLabel=DAStudio.message('autosarstandard:ui:uiExplorerMappingAccLabel');
        targetAccLabel=DAStudio.message('autosarstandard:ui:uiExplorerTargetAccLabel');
        mappingAccName='Mapping';
        targetAccName='Target';
        Handle='handle';
        IdentifierProperty='MappedClass';
        ValidInitValue='init';
        PortMapClass='Simulink.AutosarTarget.BlockMapping';
        ModelMapClass='Simulink.AutosarTarget.ModelMapping';
        EntryPointMapClass='Simulink.AutosarTarget.EntryPointMapping';
        RunnableClass='Simulink.AutosarTarget.Runnable';
        PortElementClass='Simulink.AutosarTarget.PortElement';
        PortOperationClass='Simulink.AutosarTarget.PortOperation';
        ComponentClass='Simulink.AutosarTarget.Component';
        ParameterClass='Simulink.AutosarTarget.ParameterMapping';
        ActiveMapping='ActiveMapping';
        MapModel='MapModel';
        DefaultNode='Default';
        TipHelp='autosar';
        TipViewName=DAStudio.message('autosarstandard:ui:uiCommonHelp');
        PrefixAutosar='AR:';
        Port='Port';
        Element='Element';
        ReceiverDataAccess={'ImplicitReceive','ExplicitReceive',...
        'QueuedExplicitReceive','ErrorStatus',...
        'ModeReceive','IsUpdated','EndToEndRead',...
        'ExplicitReceiveByVal','EndToEndQueuedReceive'};
        SenderDataAccess={'ImplicitSend','ImplicitSendByRef',...
        'ExplicitSend','EndToEndWrite','ModeSend','QueuedExplicitSend',...
        'EndToEndQueuedSend'};
        Ports={'Simulink.metamodel.arplatform.port.DataReceiverPort',...
        'Simulink.metamodel.arplatform.port.DataSenderPort',...
        'Simulink.metamodel.arplatform.port.ClientPort',...
        'Simulink.metamodel.arplatform.port.ModeReceiverPort',...
        'Simulink.metamodel.arplatform.port.ServerPort',...
        'Simulink.metamodel.arplatform.port.DataSenderReceiverPort',...
        'Simulink.metamodel.arplatform.port.NvDataReceiverPort',...
        'Simulink.metamodel.arplatform.port.NvDataSenderPort',...
        'Simulink.metamodel.arplatform.port.NvDataSenderReceiverPort',...
        'Simulink.metamodel.arplatform.port.ParameterReceiverPort',...
        'Simulink.metamodel.arplatform.port.ModeSenderPort',...
        'Simulink.metamodel.arplatform.port.TriggerReceiverPort',...
        'Simulink.metamodel.arplatform.port.ServiceRequiredPort',...
        'Simulink.metamodel.arplatform.port.ServiceProvidedPort',...
        'Simulink.metamodel.arplatform.port.PersistencyProvidedPort',...
        'Simulink.metamodel.arplatform.port.PersistencyRequiredPort',...
        'Simulink.metamodel.arplatform.port.PersistencyProvidedRequiredPort'}
        Components={'Simulink.metamodel.arplatform.component.AtomicComponent',...
        'Simulink.metamodel.arplatform.component.ParameterComponent',...
        'Simulink.metamodel.arplatform.component.AdaptiveApplication'};
        Events={'Simulink.metamodel.arplatform.behavior.TimingEvent',...
        'Simulink.metamodel.arplatform.behavior.DataReceivedEvent',...
        'Simulink.metamodel.arplatform.behavior.ModeSwitchEvent',...
        'Simulink.metamodel.arplatform.behavior.OperationInvokedEvent',...
        'Simulink.metamodel.arplatform.behavior.InitEvent',...
        'Simulink.metamodel.arplatform.behavior.DataReceiveErrorEvent',...
        'Simulink.metamodel.arplatform.behavior.ExternalTriggerOccurredEvent'};
        Runnables='Simulink.metamodel.arplatform.behavior.Runnable';
        Interfaces='Simulink.metamodel.arplatform.interface';
        DataElement='Simulink.metamodel.arplatform.interface.FlowData';
        IRV='Simulink.metamodel.arplatform.behavior.IrvData';
        Operation='Simulink.metamodel.arplatform.interface.Operation';
        FieldData='Simulink.metamodel.arplatform.interface.FieldData';
        SymbolProps='Simulink.metamodel.foundation.SymbolProps';
        ArgumentData='Simulink.metamodel.arplatform.interface.ArgumentData';
        ParameterData='Simulink.metamodel.arplatform.interface.ParameterData';
        PersistencyData='Simulink.metamodel.arplatform.interface.PersistencyData';
        VariableData='Simulink.metamodel.arplatform.interface.VariableData';
        Triggers='Simulink.metamodel.arplatform.interface.Trigger';
        NoMetaModelOption1=DAStudio.message('coderdictionary:mapping:StageCreateDefaultCompMsg');
        NoMetaModelOption2=DAStudio.message('autosarstandard:ui:uiWizardNoMetaModelOption2');
        QuestionDlgTitle=DAStudio.message('autosarstandard:ui:uiWizardQuestDlg');
        NoMetaModelMsg=DAStudio.message('autosarstandard:ui:uiWizardNoMetaModelMsg',...
        autosar.ui.configuration.PackageString.NoMetaModelOption1,...
        autosar.ui.configuration.PackageString.NoMetaModelOption2);
        SelectOption=DAStudio.message('RTW:autosar:selectERstr');
        Model='Model';
        MappingLink=DAStudio.message('RTW:autosar:MappingLink');
        ValAutosar=DAStudio.message('RTW:autosar:ValAutosar');
        ValModel=DAStudio.message('RTW:autosar:ValModel');
        WaitMsg=DAStudio.message('RTW:autosar:WaitMsg');
        ValidateSucceed=DAStudio.message('RTW:autosar:ValidateSucceed');
        ValidatePartialSucceed=DAStudio.message('RTW:autosar:ValidatePartialSucceedUI');
        ExportedFuncPrefix=DAStudio.message('coderdictionary:mapping:ExportedFuncPrefix');

        IconMap=containers.Map({
        'validate',...
        'sync',...
        'save',...
        'mapping',...
        'Simulink.MappingManager',...
        'Simulink.AutosarTarget.ModelMapping',...
        'Simulink.AutosarTarget.Component',...
        'Simulink.AutosarTarget.BlockMapping',...
        'Simulink.AutosarTarget.BlockMappingOutports',...
        'Simulink.AutosarTarget.Runnable',...
        'Simulink.AutosarTarget.PortOperation',...
        'mapping.Event',...
        'mapping.SLBlockMap',...
        'target',...
        'MatrixValueSpecification',...
        'title',...
        'TipIcon',...
        'Simulink.AutosarTarget.EntryPointMapping',...
        'mapping.SLPBlockMap',...
        'Simulink.AutosarTarget.InterRunnableVariableMapping',...
        'Simulink.AutosarTarget.LookupTableMapping'},{...
        fullfile(matlabroot,'toolbox','shared','dastudio','resources','Validate_16.png'),...
        fullfile(autosarroot,'resources','Refresh_16.png'),...
        fullfile(autosarroot,'resources','save.png'),...
        fullfile(autosarroot,'resources','Simulink_16.png'),...
        fullfile(autosarroot,'resources','Simulink_16.png'),...
        fullfile(autosarroot,'resources','SimModel_16.png'),...
        fullfile(autosarroot,'resources','component.png'),...
        fullfile(autosarroot,'resources','Inport_16.png'),...
        fullfile(autosarroot,'resources','Outport_16.png'),...
        fullfile(autosarroot,'resources','control_panel.png'),...
        fullfile(autosarroot,'resources','function_caller_16.png'),...
        fullfile(autosarroot,'resources','timeevent.png'),...
        fullfile(autosarroot,'resources','scp_clientserverport.png'),...
        fullfile(autosarroot,'resources','Workspace_16.png'),...
        fullfile(matlabroot,'toolbox','shared','dastudio','resources','MatlabArray.png'),...
        fullfile(autosarroot,'resources','AUTOSAR_16.png'),...
        fullfile(matlabroot,'toolbox','shared','dastudio','resources','info_suggestion.png'),...
        fullfile(autosarroot,'resources','Function_16.png'),...
        fullfile(autosarroot,'resources','timeevent.png'),...
        fullfile(autosarroot,'resources','DataTransfer_16.png'),...
        fullfile(matlabroot,'toolbox','shared','dastudio','resources','LookupTable_16.png')});

        ErrIconMap=containers.Map({
        'Simulink.AutosarTarget.BlockMapping',...
        'Simulink.AutosarTarget.BlockMappingOutports',...
        'Simulink.AutosarTarget.Runnable',...
        'Simulink.AutosarTarget.PortOperation',...
        'Default',...
        'DataTransferPlaceholder',...
        'Simulink.AutosarTarget.EntryPointMapping',...
        'Simulink.AutosarTarget.InterRunnableVariableMapping',...
        'Simulink.AutosarTarget.LookupTableMapping'},{...
        fullfile(autosarroot,'resources','InportError_16.png'),...
        fullfile(autosarroot,'resources','OutportError_16.png'),...
        fullfile(autosarroot,'resources','FunctionError_16.png'),...
        fullfile(autosarroot,'resources','function_caller_error_16.png'),...
        fullfile(autosarroot,'resources','error.png'),...
        fullfile(autosarroot,'resources','warning.png'),...
        fullfile(autosarroot,'resources','FunctionError_16.png'),...
        fullfile(autosarroot,'resources','DataTransferWarning_16.png'),...
        fullfile(matlabroot,'toolbox','shared','dastudio','resources','LookupTableError_16.png')});


        TipMap=containers.Map({
        'Simulink Mapping',...
        'MapModel',...
        'Inports',...
        'Outports',...
        'Entry Point Functions',...
        'Step Functions',...
        'Function Call Inports',...
        'Initialization Functions',...
        'XML Options',...
        'Data Transfers',...
        'Function Callers',...
        'Lookup Tables',...
        'Default'},{...
        DAStudio.message('autosarstandard:ui:uiMappingViewSLToAUTOSAR','models','components'),...
        DAStudio.message('autosarstandard:ui:uiMappingViewSLToAUTOSAR','model blocks','entities'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','inport','an AUTOSAR(AR) Port and an AUTOSAR(AR) Element'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','outport','an AUTOSAR(AR) Port and an AUTOSAR(AR) Element'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','entry point function','an AUTOSAR(AR) Runnable'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','step functions','runnables'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','output entry points','runnables'),...
        DAStudio.message('autosarstandard:ui:uiMappingViewSLToAUTOSAR','initialization entry point','runnable'),...
        DAStudio.message('autosarstandard:ui:uiMetamodelViewAndEdit'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','data transfer','an AUTOSAR(AR) interrunnable variable name (IrvName)'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','function caller block','an AUTOSAR(AR) ClientPort and an AUTOSAR(AR) Operation'),...
        DAStudio.message('RTW:autosar:uiMappingEditSLToAUTOSAR','lookup table','an AUTOSAR(AR) ParameterAccessMode'),...
        DAStudio.message('autosarstandard:ui:uiMetamodelViewAndEdit')});

        MappingObjWithRunnables={autosar.ui.configuration.PackageString.FcnCallInportsProperty,...
        autosar.ui.configuration.PackageString.ServerFunctionsProperty,...
        autosar.ui.configuration.PackageString.StepsProperty,...
        autosar.ui.configuration.PackageString.InitProperty,...
        autosar.ui.configuration.PackageString.ResetProperty,...
        autosar.ui.configuration.PackageString.TerminateProperty};
        InternalDataObjWithSwAddrMethods={'Signals','States','DataStores','SynthesizedDataStores','ModelScopedParameters'};

        AdaptivePortPropertyNames={'Port','Event'};
        AdaptiveEntryPointFunctionsPropertyNames={'ServiceProvidedPort','Method'};
        AdaptiveFunctionCallerPropertyNames={'ServiceRequiredPort','Method'};
    end
end




