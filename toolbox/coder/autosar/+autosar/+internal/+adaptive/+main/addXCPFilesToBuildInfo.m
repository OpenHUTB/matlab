function addXCPFilesToBuildInfo(buildInfo,xcpMode)




    if strcmp(xcpMode,'None')
        return;
    end

    xcpTargetPath=fullfile(matlabroot,'toolbox','coder','xcp','src','target');
    xcpProtocolSrcPath=fullfile(xcpTargetPath,'slave','protocol','src');
    xcpTransportSrcPath=fullfile(xcpTargetPath,'slave','transport','src');
    xcpDefaultPlatformSrcPath=fullfile(xcpTargetPath,'slave','platform','default');
    xcpCommonSrcPath=fullfile(xcpTargetPath,'slave','common');
    adapAutosarInclPath=fullfile(matlabroot,'toolbox','coder','autosar','adaptive_deployment','include');
    adapAutosarSrcPath=fullfile(matlabroot,'toolbox','coder','autosar','adaptive_deployment','src_util');

    incPaths={fullfile(xcpTargetPath,'slave','include'),...
    fullfile(xcpTargetPath,'slave','common'),...
    fullfile(xcpTargetPath,'slave','protocol','include'),...
    xcpProtocolSrcPath,...
    fullfile(xcpTargetPath,'slave','transport','include'),...
    xcpTransportSrcPath,...
    fullfile(xcpTargetPath,'slave','platform','include'),...
    xcpDefaultPlatformSrcPath,...
    fullfile(matlabroot,'simulink','include'),...
    fullfile(matlabroot,'toolbox','coder','rtiostream','src'),...
    adapAutosarInclPath};

    srcPaths={xcpProtocolSrcPath,...
    xcpTransportSrcPath,...
    xcpDefaultPlatformSrcPath,...
    adapAutosarSrcPath};

    srcFiles={'xcp.c',...
    'xcp_standard.c',...
    'xcp_daq.c',...
    'xcp_calibration.c',...
    'xcp_fifo.c',...
    'xcp_transport.c',...
    'xcp_mem_default.c',...
    'xcp_drv_rtiostream.c',...
    'xcp_platform_default.c',...
    'xcp_slave_default.c',...
    'xcp_utils.c'};

    srcFilePaths={xcpProtocolSrcPath,...
    xcpProtocolSrcPath,...
    xcpProtocolSrcPath,...
    xcpProtocolSrcPath,...
    xcpTransportSrcPath,...
    xcpTransportSrcPath,...
    xcpDefaultPlatformSrcPath,...
    xcpDefaultPlatformSrcPath,...
    xcpDefaultPlatformSrcPath,...
    adapAutosarSrcPath,...
    xcpCommonSrcPath};

    switch xcpMode
    case 'XCPOnTCPIP'

        srcFiles{end+1}='xcp_frame_tcp.c';
        srcFilePaths{end+1}=xcpTransportSrcPath;


        rtIOStreamSrcPath=fullfile(matlabroot,'toolbox','coder',...
        'rtiostream','src','rtiostreamtcpip');
        srcPaths{end+1}=rtIOStreamSrcPath;


        srcFiles{end+1}='rtiostream_tcpip.c';
        srcFilePaths{end+1}=rtIOStreamSrcPath;

    otherwise
    end


    buildInfo.addIncludePaths(incPaths);


    buildInfo.addSourcePaths(srcPaths);


    buildInfo.addSourceFiles(srcFiles,srcFilePaths);

    defines={'-DXCP_DAQ_SUPPORT',...
    '-DXCP_CALIBRATION_SUPPORT',...
    '-DXCP_TIMESTAMP_SUPPORT',...
    '-DXCP_SET_MTA_SUPPORT',...
    '-DXCP_RUN_BACKGROUND_FLUSH',...
    '-DXCP_CUSTOM_PLATFORM'};


    buildInfo.addDefines(defines);
end


