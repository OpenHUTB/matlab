function addRaccelInfo(buildInfo,lModelHandle,modelHasSFcnsWithNoSourceCode,...
    lMLSysLibPath,fullBuildDir,relativePathToAnchor)





    standardGroup=coder.make.internal.BuildInfoGroup.BiStandardGroup;
    legacyGroup=coder.make.internal.BuildInfoGroup.BiLegacyGroup;

    optDefines={'NRT','RSIM_PARAMETER_LOADING','RSIM_WITH_SL_SOLVER'};
    addTMFTokens(buildInfo,'|>MAT_FILE<|','1');

    argToks=rtwprivate('getRTWBuildArgTokens',get_param(lModelHandle,'RTWBuildArgs'));

    bArgs=regexprep(argToks,'^([^=]+)=.*','$1');
    bArgVals=regexprep(argToks,'^[^=]+=?(.*)$','$1');


    [tf,idx]=ismember('ENABLE_SLEXEC_SSBRIDGE',bArgs);

    optDefines{end+1}=['ENABLE_SLEXEC_SSBRIDGE=',bArgVals{idx}];
    mainFile='raccel_main.c';
    mainPath=fullfile(matlabroot,'rtw','c','raccel');
    execSysLib='mwslexec_simbridge';



    customDefines={'EXT_MODE'};


    customDefines{end+1}='IS_RAPID_ACCEL';


    parSet=rtwprivate('getRaccelParallelExecutionSettings',lModelHandle);
    if strcmp(parSet.ParallelExecution,'1')
        customDefines{end+1}='RACCEL_ENABLE_PARALLEL_EXECUTION';
        customDefines{end+1}=['RACCEL_PARALLEL_EXECUTION_NUM_THREADS='...
        ,parSet.NumThreads];
        customDefines{end+1}=['RACCEL_NUM_PARALLEL_NODES='...
        ,parSet.NumParNodes];
        customDefines{end+1}=['RACCEL_PARALLEL_SIMULATOR_TYPE='...
        ,parSet.ParallelSimulatorType];
        parSysLib='mwslexec_parallel';
    else
        parSysLib='';
    end

    addDefines(buildInfo,customDefines,coder.make.internal.BuildInfoGroup.DefinesCustomGroup);

    optDefines{end+1}=['MODEL_HAS_DYNAMICALLY_LOADED_SFCNS='...
    ,num2str(modelHasSFcnsWithNoSourceCode)];

    addDefines(buildInfo,optDefines,coder.make.internal.BuildInfoGroup.DefinesOptsGroup);

    incPaths={...
    fullfile(matlabroot,'rtw','c','src','rapid')...
    ,fullfile(matlabroot,'rtw','c','raccel')...
    ,fullfile(matlabroot,'rtw','c','src','ext_mode','common')...
    ,fullfile(matlabroot,'toolbox','coder','rtiostream','src')};

    incGroups={standardGroup,standardGroup,standardGroup,standardGroup};

    addIncludePaths(buildInfo,incPaths,incGroups);


    sysLibs=locGetRaccelSysLibs(modelHasSFcnsWithNoSourceCode,...
    execSysLib,parSysLib);
    sysLibPaths=repmat({lMLSysLibPath},1,length(sysLibs));
    sysLibGroups=repmat({standardGroup},1,length(sysLibs));

    addSysLibs(buildInfo,sysLibs,sysLibPaths,sysLibGroups);


    if strcmp(get_param(lModelHandle,'HasConcurrentBlocks'),'on')
        buildInfo.setCompilerRequirements('supportOpenMP',true);
    end

    i_addSourceFiles(buildInfo,modelHasSFcnsWithNoSourceCode,...
    mainFile,mainPath,legacyGroup)



    if slfeature('64BlockIO')
        compilerInfo=coder.make.internal.getMexCompilerInfo;
        if~isempty(compilerInfo)&&strcmp(compilerInfo.toolChain,'vcx64')
            addLinkFlags(buildInfo,'-LARGEADDRESSAWARE');
        elseif~ismac
            addCompileFlags(buildInfo,'-mcmodel=medium');
        end
    end

    if strcmp(computer('arch'),'glnxa64')

        addLinkFlags(buildInfo,'-Wl,--allow-shlib-undefined');
        sysDir=fullfile(matlabroot,'sys','os',computer('arch'));
        addLinkFlags(buildInfo,['-Wl,-rpath,',sysDir]);
    elseif strcmp(computer('arch'),'maci64')


        binDir=fullfile(matlabroot,'bin',computer('arch'));
        sysDir=fullfile(matlabroot,'sys','os',computer('arch'));
        addLinkFlags(buildInfo,['-Wl,-rpath,',binDir]);
        addLinkFlags(buildInfo,['-Wl,-rpath,',sysDir]);
        addLinkFlags(buildInfo,'-Wl,-rpath,@executable_path');
        addLinkFlags(buildInfo,['-Wl,-rpath,@executable_path/',relativePathToAnchor]);
        addLinkFlags(buildInfo,['-L',sysDir]);


        maci18nDir=fullfile(fullBuildDir,'Contents','Resources','Base.lproj');
        if~exist(maci18nDir,'dir')
            mkdir(maci18nDir);
        end
    end


    function sysLibs=locGetRaccelSysLibs(modelHasSFcnsWithNoSourceCode,...
        execSysLib,parSysLib)

        sysLibs={...
'mwipp'...
        ,'ut'...
        ,'mx'...
        ,'mex'...
        ,'mat'...
        ,'mwmathutil'...
        ,'mwslsa_sim'...
        ,execSysLib...
        ,'mwsl_fileio'...
        ,'mwsl_fileio'...
        ,'mwsigstream'...
        ,'mwsl_AsyncioQueue'...
        ,'mwsl_services'...
        ,'mwsdi_raccel'...
        ,'mwi18n'...
        ,'mwcoder_target_services'...
        ,'mwcoder_ParamTuningTgtAppSvc'...
        ,'mwslpointerutil'...
        };


        sysLibs=[sysLibs,'mwsl_simtarget_instrumentation'];

        if modelHasSFcnsWithNoSourceCode
            sysLibs=[sysLibs,'mwsl_sfcn_loader'];
        end


        if~isempty(parSysLib)
            sysLibs=[sysLibs,parSysLib];
        end


        sysLibs=[sysLibs,'fixedpoint','mwslexec_simlog'];

        if(slfeature('SLStringSupportRapidAccel')>0)
            sysLibs=[sysLibs,'mwstringutil'];
        end

        if isunix
            sysLibs=[sysLibs,'m','pthread'];

            sysLibs=[sysLibs,'dl'];
        end



        function i_addSourceFiles(buildInfo,modelHasSFcnsWithNoSourceCode,...
            mainFile,mainPath,legacyGroup)
            if modelHasSFcnsWithNoSourceCode
                noMdlRefFiles={mainFile...
                ,'raccel_sup.c'...
                ,'raccel_mat.c'...
                ,'simulink_solver_api.c'...
                ,'raccel_utils.c'...
                ,'common_utils.c'...
                ,'raccel_sfcn_utils.c'};
                noMdlRefFilePaths={mainPath...
                ,fullfile(matlabroot,'rtw','c','raccel'),...
                fullfile(matlabroot,'rtw','c','raccel'),...
                fullfile(matlabroot,'simulink','include'),...
                fullfile(matlabroot,'rtw','c','src','rapid'),...
                fullfile(matlabroot,'rtw','c','src','rapid'),...
                fullfile(matlabroot,'rtw','c','src','rapid')};
                noMdlRefFileGroups={legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup};

            else
                noMdlRefFiles={mainFile...
                ,'raccel_sup.c'...
                ,'raccel_mat.c'...
                ,'simulink_solver_api.c'...
                ,'raccel_utils.c'...
                ,'common_utils.c'};
                noMdlRefFilePaths={mainPath...
                ,fullfile(matlabroot,'rtw','c','raccel'),...
                fullfile(matlabroot,'rtw','c','raccel'),...
                fullfile(matlabroot,'simulink','include'),...
                fullfile(matlabroot,'rtw','c','src','rapid'),...
                fullfile(matlabroot,'rtw','c','src','rapid')};
                noMdlRefFileGroups={legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup...
                ,legacyGroup};
            end

            addSourceFiles(buildInfo,noMdlRefFiles,noMdlRefFilePaths,noMdlRefFileGroups);
