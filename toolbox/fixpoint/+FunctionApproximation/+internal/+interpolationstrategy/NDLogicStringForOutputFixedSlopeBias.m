classdef NDLogicStringForOutputFixedSlopeBias<handle




    methods(Static)
        function string=getInterpolationLogicString()

            oneDstring=['bpIdx1 = double(index-1) * stride'' + 1;',newline,...
            'k = 2;',newline,...
            'if bpIdx1 >= numel(tableValues)',newline,...
            'intermediateValue(1) = tableValues(end);',newline,...
            'else',newline,...
            'tmp = cast(tableValues(bpIdx1),''like'',tableValuesDelta);',newline,...
            'tableValuesDelta(1) = tableValues(bpIdx1 + 1);',newline,...
            'intermediateValue(1) = (frac(1) * (tableValuesDelta(1) - tmp)) + tmp;',newline,...
            'end',newline,newline];

            twoDString=['bpIdx2 = bpIdx1 + stride(2);',newline,...
            'if bpIdx2 >= numel(tableValues)',newline,...
            'intermediateValue(2) = tableValues(end);',newline,...
            'else',newline,...
            'tmp = cast(tableValues(bpIdx2),''like'',tableValuesDelta);',newline,...
            'tableValuesDelta(2) = tableValues(bpIdx2 + 1);',newline,...
            'intermediateValue(2) = (frac(1) * (tableValuesDelta(2) - tmp)) + tmp;',newline,...
            'end',newline,...
            'intermediateValue(2) = frac(2) * (intermediateValue(2) - intermediateValue(1)) + intermediateValue(1);',newline];

            nDString=['while(k <= nargin-1)',newline,...
            'bpIdx1 = bpIdx1 + stride(k+1);',newline,...
            'if bpIdx1 >= numel(tableValues)',newline,...
            'intermediateValue(1) = tableValues(end);',newline,...
            'else',newline,...
            'tmp = cast(tableValues(bpIdx1),''like'',tableValuesDelta);',newline,...
            'tableValuesDelta(1) = tableValues(bpIdx1 + 1);',newline,...
            'intermediateValue(1) = (frac(1) * (tableValuesDelta(1) - tmp)) + tmp;',newline,...
            'end',newline,newline,...
            'bpIdx2 = bpIdx1 + stride(k);',newline,...
            'if bpIdx2 >= numel(tableValues)',newline,...
            'intermediateValue(k+1) = tableValues(end);',newline,...
            'else',newline,...
            'tmp = cast(tableValues(bpIdx2),''like'',tableValuesDelta);',newline,...
            'tableValuesDelta(k+1) = tableValues(bpIdx2 + 1);',newline,...
            'intermediateValue(k+1) = (frac(1) * (tableValuesDelta(k+1) - tmp)) + tmp;',newline,...
            'end',newline,...
            'intermediateValue(k+1) = frac(k) * (intermediateValue(k+1) - intermediateValue(1)) + intermediateValue(1);',newline,...
            'intermediateValue(end) = frac(k+1) * (intermediateValue(k+1) - intermediateValue(k)) + intermediateValue(k);',newline,...
            'k = k+1;',newline,...
            'end',newline];

            string=[oneDstring,twoDString,nDString,newline,'output(i) = intermediateValue(end);'];
        end
    end
end



