function exportReport(view,waveformProp,compressionProp)



    sw=StringWriter;
    dateTimeStr=datestr(now);
    mlVer=ver('matlab');
    pstVer=ver('phased');
    add(sw,'% Radar Waveform Analyzer Report')
    addcr(sw)
    addcr(sw,'%')
    add(sw,'% Generated by MATLAB ')

    add(sw,mlVer.Version)
    add(sw,' and Phased Array System Toolbox ')
    add(sw,pstVer.Version)
    addcr(sw)
    addcr(sw,'%')
    add(sw,'% Generated on ')
    add(sw,dateTimeStr)
    addcr(sw)
    addcr(sw,'%')
    WaveformType=phased.apps.internal.WaveformViewer.getWaveformString(class(waveformProp));
    switch WaveformType
    case 'RectangularWaveform'

        addcr(sw,'% Waveform .............................................. Rectangular');
        addcr(sw,'%')
        add(sw,'% Sample Rate (Hz) .................................... ');
        add(sw,sprintf('%g',waveformProp.SampleRate))
        addcr(sw)
        if(view.Parameters.ElementDialog.PRFLabel.Value==1)
            add(sw,'% PRF (Hz) ............................................ ');
            add(sw,sprintf('%g',waveformProp.PRF))
        else
            add(sw,'% PRI (s) ............................................. ');
            add(sw,sprintf('%g',1/waveformProp.PRF))
        end
        addcr(sw)
        add(sw,'% Number of Pulses .................................... ');
        add(sw,sprintf('%d',waveformProp.NumPulses))
        addcr(sw)
        add(sw,'% Pulse Width (s) ..................................... ');
        add(sw,sprintf('%g',waveformProp.PulseWidth))
        addcr(sw)
        add(sw,'% Propagation Speed (m/s) ............................. ');
        add(sw,sprintf('%g',waveformProp.PropagationSpeed))
        addcr(sw)
        add(sw,'%Frequency Offset ......................................');
        add(sw,sprintf('%g',waveformProp.FrequencyOffset))
        addcr(sw)
    case 'LinearFMWaveform'

        addcr(sw,'% Waveform .............................................. Linear FM');
        addcr(sw,'%')
        add(sw,'% Sample Rate (Hz) .................................... ');
        add(sw,sprintf('%g',waveformProp.SampleRate))
        addcr(sw)
        if(view.Parameters.ElementDialog.PRFLabel.Value==1)
            add(sw,'% PRF (Hz) ............................................ ');
            add(sw,sprintf('%g',waveformProp.PRF))
        else
            add(sw,'% PRI (s) ............................................. ');
            add(sw,sprintf('%g',1/waveformProp.PRF))
        end
        addcr(sw)
        add(sw,'% Number of Pulses .................................... ');
        add(sw,sprintf('%d',waveformProp.NumPulses))
        addcr(sw)
        add(sw,'% Pulse Width (s) ..................................... ');
        add(sw,sprintf('%g',waveformProp.PulseWidth))
        addcr(sw)
        add(sw,'% Sweep Bandwidth (Hz) ................................ ');
        add(sw,sprintf('%g',waveformProp.SweepBandwidth))
        addcr(sw)
        add(sw,'% Sweep Direction ..................................... ');
        add(sw,sprintf('''%s''',waveformProp.SweepDirection))
        addcr(sw)
        add(sw,'% Sweep Interval ...................................... ');
        add(sw,sprintf('''%s''',waveformProp.SweepInterval))
        addcr(sw)
        add(sw,'% Envelope ............................................ ');
        add(sw,sprintf('''%s''',waveformProp.Envelope))
        addcr(sw)
        add(sw,'% Propagation Speed (m/s) ............................. ');
        add(sw,sprintf('%g',waveformProp.PropagationSpeed))
        addcr(sw)
        add(sw,'%Frequency Offset ......................................');
        add(sw,sprintf('%g',waveformProp.FrequencyOffset))
        addcr(sw)
    case 'SteppedFMWaveform'

        addcr(sw,'% Waveform .............................................. Stepped FM');
        addcr(sw,'%')
        add(sw,'% Sample Rate (Hz) .................................... ');
        add(sw,sprintf('%g',waveformProp.SampleRate))
        addcr(sw)
        if(view.Parameters.ElementDialog.PRFLabel.Value==1)
            add(sw,'% PRF (Hz) ............................................ ');
            add(sw,sprintf('%g',waveformProp.PRF))
        else
            add(sw,'% PRI (s) ............................................. ');
            add(sw,sprintf('%g',1/waveformProp.PRF))
        end
        addcr(sw)
        add(sw,'% Number of Pulses .................................... ');
        add(sw,sprintf('%d',waveformProp.NumPulses))
        addcr(sw)
        add(sw,'% Pulse Width (s) ..................................... ');
        add(sw,sprintf('%g',waveformProp.PulseWidth))
        addcr(sw)
        add(sw,'% Frequency Step (Hz) ................................. ');
        add(sw,sprintf('%g',waveformProp.FrequencyStep))
        addcr(sw)
        add(sw,'% Number of Steps ..................................... ');
        add(sw,sprintf('%d',waveformProp.NumSteps))
        addcr(sw)
        add(sw,'% Propagation Speed (m/s) ............................. ');
        add(sw,sprintf('%g',waveformProp.PropagationSpeed))
        addcr(sw)
        add(sw,'%Frequency Offset ......................................');
        add(sw,sprintf('%g',waveformProp.FrequencyOffset))
        addcr(sw)
    case 'PhaseCodedWaveform'

        addcr(sw,'% Waveform .............................................. Phase Coded');
        addcr(sw,'%')
        add(sw,'% Sample Rate (Hz) .................................... ');
        add(sw,sprintf('%g',waveformProp.SampleRate))
        addcr(sw)
        if(view.Parameters.ElementDialog.PRFLabel.Value==1)
            add(sw,'% PRF (Hz) ............................................ ');
            add(sw,sprintf('%g',waveformProp.PRF))
        else
            add(sw,'% PRI (s) ............................................. ');
            add(sw,sprintf('%g',1/waveformProp.PRF))
        end
        addcr(sw)
        add(sw,'% Number of Pulses .................................... ');
        add(sw,sprintf('%d',waveformProp.NumPulses))
        addcr(sw)
        add(sw,'% Code ................................................ ');
        add(sw,sprintf('''%s''',waveformProp.Code))
        addcr(sw)
        add(sw,'% Chip Width (s) ...................................... ');
        add(sw,sprintf('%g',waveformProp.ChipWidth))
        addcr(sw)
        numchips=str2double(waveformProp.NumChips);
        add(sw,'% Number of Chips ..................................... ');
        add(sw,sprintf('%d',numchips))
        addcr(sw)
        if strcmp(waveformProp.Code,'Zadoff-Chu')
            add(sw,'% Sequence Index .................................. ');
            add(sw,sprintf('%d',waveformProp.SequenceIndex))
            addcr(sw)
        end
        add(sw,'% Propagation Speed (m/s) ............................. ');
        add(sw,sprintf('%g',waveformProp.PropagationSpeed))
        addcr(sw)
        add(sw,'%Frequency Offset ......................................');
        add(sw,sprintf('%g',waveformProp.FrequencyOffset))
        addcr(sw)
    case 'FMCWWaveform'

        addcr(sw,'% Waveform .............................................. FMCW');
        addcr(sw,'%')
        add(sw,'% Sample Rate (Hz) .................................... ');
        add(sw,sprintf('%g',waveformProp.SampleRate))
        addcr(sw)
        add(sw,'% Sweep Time (s) ...................................... ');
        add(sw,sprintf('%g',waveformProp.SweepTime))
        addcr(sw)
        add(sw,'% Sweep Bandwidth (Hz) ................................ ');
        add(sw,sprintf('%g',waveformProp.SweepBandwidth))
        addcr(sw)
        add(sw,'% Sweep Direction ..................................... ');
        add(sw,sprintf('''%s''',waveformProp.SweepDirection))
        addcr(sw)
        add(sw,'% Sweep Interval ...................................... ');
        add(sw,sprintf('''%s''',waveformProp.SweepInterval))
        addcr(sw)
        add(sw,'% Number of Sweeps .................................... ');
        add(sw,sprintf('%d',waveformProp.NumSweeps))
        addcr(sw)
        add(sw,'% Propagation Speed (m/s) ............................. ');
        add(sw,sprintf('%g',waveformProp.PropagationSpeed))
        addcr(sw)
    end
    addcr(sw,'%')
    idx=view.Canvas.SelectIdx;
    add(sw,'% Range Resolution (m) ................................ ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,2};
    value(end)='';
    value(end)='';
    add(sw,sprintf('%g',str2double(value)*1000))
    addcr(sw)
    add(sw,'% Doppler Resolution (Hz) ............................. ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,3};
    value(end)='';value(end)='';value(end)='';
    add(sw,sprintf('%g',str2double(value)*1000))
    addcr(sw)
    add(sw,'% Minimum Unambiguous Range (m) ....................... ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,4};
    value(end)='';value(end)='';
    add(sw,sprintf('%g',str2double(value)*1000))
    addcr(sw)
    add(sw,'% Maximum Unambiguous Range (m) ....................... ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,5};
    value(end)='';value(end)='';
    add(sw,sprintf('%g',str2double(value)*1000))
    addcr(sw)
    add(sw,'% Maximum Doppler (Hz) ................................ ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,6};
    value(end)='';value(end)='';value(end)='';
    add(sw,sprintf('%g',str2double(value)*1000))
    addcr(sw)
    add(sw,'% Time Bandwidth Product .............................. ');
    value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,7};
    add(sw,sprintf('%s',value))
    addcr(sw)
    if~strcmp(WaveformType,'FMCWWaveform')
        add(sw,'% Duty Cycle (%) ...................................... ');
        value=view.Parameters.WaveformCharacteristics.characteristicsTable.Data{idx,8};
        value(end)='';
        add(sw,sprintf('%g',str2double(value)))
        addcr(sw)
    end

    CompressionType=phased.apps.internal.WaveformViewer.getWaveformString(class(compressionProp));
    addcr(sw)
    addcr(sw)
    switch CompressionType
    case 'MatchedFilter'
        addcr(sw,'% Compression ........................................... MatchedFilter');
        addcr(sw,'%')
        switch compressionProp.SpectrumWindow
        case 'None'
            add(sw,'% Spectrum Window ..................................... ');
            add(sw,sprintf('%s',compressionProp.SpectrumWindow))
            addcr(sw)
        case 'Taylor'
            add(sw,'% Spectrum Window ..................................... ');
            add(sw,sprintf('%s',compressionProp.SpectrumWindow))
            addcr(sw)
            add(sw,'% Spectrum Range ...................................... ');
            add(sw,sprintf('[%g %g]',compressionProp.SpectrumRange(1),compressionProp.SpectrumRange(2)))
            addcr(sw)
            add(sw,'% Sidelobe Attenuation ................................ ');
            add(sw,sprintf('%g',compressionProp.SideLobeAttenuation))
            addcr(sw)
            add(sw,'% Nbar ................................................ ');
            add(sw,sprintf('%g',compressionProp.Nbar))
        case 'Kaiser'
            add(sw,'% Spectrum Window ..................................... ');
            add(sw,sprintf('%s',compressionProp.SpectrumWindow))
            addcr(sw)
            add(sw,'% Spectrum Range ...................................... ');
            add(sw,sprintf('[%g %g]',compressionProp.SpectrumRange(1),compressionProp.SpectrumRange(2)))
            addcr(sw)
            add(sw,'% Beta ................................................ ');
            add(sw,sprintf('%g',compressionProp.Beta))
        case 'Chebyshev'
            add(sw,'% Spectrum Window ..................................... ');
            add(sw,sprintf('%s',compressionProp.SpectrumWindow))
            addcr(sw)
            add(sw,'% Spectrum Range ...................................... ');
            add(sw,sprintf('[%g %g]',compressionProp.SpectrumRange(1),compressionProp.SpectrumRange(2)))
            addcr(sw)
            add(sw,'% Sidelobe Attenuation ................................ ');
            add(sw,sprintf('%g',compressionProp.SideLobeAttenuation))
        otherwise
            add(sw,'% Spectrum Window ..................................... ');
            add(sw,sprintf('%s',compressionProp.SpectrumWindow))
            addcr(sw)
            add(sw,'% Spectrum Range ...................................... ');
            add(sw,sprintf('[%g %g]',compressionProp.SpectrumRange(1),compressionProp.SpectrumRange(2)))
        end
    case 'StretchProcessor'
        addcr(sw,'% Compression ........................................... StretchProcessor');
        addcr(sw,'%')
        add(sw,'% Reference Range ..................................... ');
        add(sw,sprintf('%g',compressionProp.ReferenceRange))
        addcr(sw)
        add(sw,'% Range Span .......................................... ');
        add(sw,sprintf('%g',compressionProp.RangeSpan))
        addcr(sw);
        add(sw,'% RangeFFTLength ...................................... ');
        add(sw,sprintf('%g',compressionProp.RangeFFTLength));
        addcr(sw);
        add(sw,'% Range Window ........................................ ');
        add(sw,sprintf('%s',compressionProp.RangeWindow))
        addcr(sw);
        switch compressionProp.RangeWindow
        case 'Chebyshev'
            add(sw,'% Sidelobe Attenuation ................................ ');
            addcr(sw,sprintf('%g',compressionProp.SideLobeAttenuation));
        case 'Kaiser'
            add(sw,'% Beta ................................................ ');
            addcr(sw,sprintf('%g',compressionProp.Beta));
        case 'Taylor'
            add(sw,'% Sidelobe Attenuation ................................ ');
            addcr(sw,sprintf('%g',compressionProp.SideLobeAttenuation));
            add(sw,'% Nbar ................................................ ');
            addcr(sw,sprintf('%g',compressionProp.Nbar));
        end
    case 'Dechirp'
        addcr(sw,'% Compression .................................... Dechirp');
        addcr(sw)
    end
    newDoc=matlab.desktop.editor.newDocument(sw.string);
    newDoc.smartIndentContents;
end
