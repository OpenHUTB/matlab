



classdef SldvTaskManager<Sldv.Tasking.TaskManager

    properties(Constant,Access=protected)
        mRegisteredEvents=[...
        Sldv.Tasking.SldvEvents.AnalysisInit,...
        Sldv.Tasking.SldvEvents.AsyncAnalysisLaunched,...
        Sldv.Tasking.SldvEvents.AsyncAnalysisUpdate,...
        Sldv.Tasking.SldvEvents.AsyncAnalysisDone,...
        Sldv.Tasking.SldvEvents.SyncAnalysisDone,...
        Sldv.Tasking.SldvEvents.AnalysisWrap,...
        Sldv.Tasking.SldvEvents.CheckForMatlabTask,...
        Sldv.Tasking.SldvEvents.ResultsPoll,...
        ];

        mRegisteredCriticalEvents=[...
        ];

        mRegisteredChannels=[...
        Sldv.Tasking.SldvChannels.ProcessedTestCases,...
        Sldv.Tasking.SldvChannels.ProcessedGoals,...
        Sldv.Tasking.SldvChannels.ValidatedTestCases,...
        Sldv.Tasking.SldvChannels.ValidatedGoals
        ];
    end

    methods

        function obj=SldvTaskManager(aPeriod,aTimeOut)

            obj=obj@Sldv.Tasking.TaskManager(aPeriod,aTimeOut);
        end
    end

end
