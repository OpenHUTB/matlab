classdef ShortcutsList<handle




    methods(Static)




        function list=commonShortcuts(tooltype)


            list(1).sectionTitle=getString(message('vision:labeler:LabelDefinitionsTitle'));
            list(1).data={getString(message('vision:labeler:UpDownTask')),getString(message('vision:labeler:UpDownAction'));...
            getString(message('vision:labeler:AltUpDownTask')),getString(message('vision:labeler:AltUpDownAction'));...
            getString(message('vision:labeler:ClickDragLabelTask')),getString(message('vision:labeler:ClickDragLabelAction'));...
            getString(message('vision:labeler:ClickDragGroupTask')),getString(message('vision:labeler:ClickDragGroupAction'))};



            list(2).sectionTitle=getString(message('vision:labeler:LabelingTitle'));
            if tooltype~=vision.internal.toolType.LidarLabeler
                if ismac
                    actions={getString(message('vision:labeler:CmdZAction'));...
                    getString(message('vision:labeler:CmdYAction'));...
                    getString(message('vision:labeler:CmdAAction'));...
                    getString(message('vision:labeler:CmdClickROIAction'));...
                    getString(message('vision:labeler:CmdXAction'));...
                    getString(message('vision:labeler:CmdCAction'));...
                    getString(message('vision:labeler:CmdVAction'));...
                    getString(message('vision:labeler:DeleteAction'));...
                    getString(message('vision:labeler:CmdShiftXAction'));...
                    getString(message('vision:labeler:CmdShiftCAction'));...
                    getString(message('vision:labeler:CmdShiftVAction'));...
                    getString(message('vision:labeler:ShiftClickAction'));...
                    getString(message('vision:labeler:TabActionInFrame'));...
                    getString(message('vision:labeler:ShiftTabAction'));...
                    getString(message('vision:labeler:CmdArrowAction'));...
                    getString(message('vision:labeler:CmdScaleUpAction'));...
                    getString(message('vision:labeler:CmdScaleDownAction'))};
                else
                    actions={getString(message('vision:labeler:CtrlZAction'));...
                    getString(message('vision:labeler:CtrlYAction'));...
                    getString(message('vision:labeler:CtrlAAction'));...
                    getString(message('vision:labeler:CtrlClickROIAction'));...
                    getString(message('vision:labeler:CtrlXAction'));...
                    getString(message('vision:labeler:CtrlCAction'));...
                    getString(message('vision:labeler:CtrlVAction'));...
                    getString(message('vision:labeler:DeleteAction'));...
                    getString(message('vision:labeler:CtrlShiftXAction'));...
                    getString(message('vision:labeler:CtrlShiftCAction'));...
                    getString(message('vision:labeler:CtrlShiftVAction'));...
                    getString(message('vision:labeler:ShiftClickAction'));...
                    getString(message('vision:labeler:TabActionInFrame'));...
                    getString(message('vision:labeler:ShiftTabAction'));...
                    getString(message('vision:labeler:CtrlArrowAction'));...
                    getString(message('vision:labeler:CtrlScaleUpAction'));...
                    getString(message('vision:labeler:CtrlScaleDownAction'))};
                end
                tasks={getString(message('vision:labeler:CtrlZTask'));...
                getString(message('vision:labeler:CtrlYTask'));...
                getString(message('vision:labeler:CtrlATask'));...
                getString(message('vision:labeler:CtrlClickROITask'));...
                getString(message('vision:labeler:CtrlXTask'));...
                getString(message('vision:labeler:CtrlCTask'));...
                getString(message('vision:labeler:CtrlVTask'));...
                getString(message('vision:labeler:DeleteTask'));...
                getString(message('vision:labeler:CtrlShiftXTask'));...
                getString(message('vision:labeler:CtrlShiftCTask'));...
                getString(message('vision:labeler:CtrlShiftVTask'));...
                getString(message('vision:labeler:ShiftClickTask'));...
                getString(message('vision:labeler:TabTaskInFrame'));...
                getString(message('vision:labeler:ShiftTabTask'));...
                getString(message('vision:labeler:CtrlArrowTask'));...
                getString(message('vision:labeler:CtrlScaleUpTask'));...
                getString(message('vision:labeler:CtrlScaleDownTask'))};
            else
                if ismac
                    actions={getString(message('vision:labeler:CmdZAction'));...
                    getString(message('vision:labeler:CmdYAction'));...
                    getString(message('vision:labeler:CmdAAction'));...
                    getString(message('vision:labeler:CmdClickROIAction'));...
                    getString(message('vision:labeler:CmdXAction'));...
                    getString(message('vision:labeler:CmdCAction'));...
                    getString(message('vision:labeler:CmdVAction'));...
                    getString(message('vision:labeler:DeleteAction'))};
                else
                    actions={getString(message('vision:labeler:CtrlZAction'));...
                    getString(message('vision:labeler:CtrlYAction'));...
                    getString(message('vision:labeler:CtrlAAction'));...
                    getString(message('vision:labeler:CtrlClickROIAction'));...
                    getString(message('vision:labeler:CtrlXAction'));...
                    getString(message('vision:labeler:CtrlCAction'));...
                    getString(message('vision:labeler:CtrlVAction'));...
                    getString(message('vision:labeler:DeleteAction'))};
                end
                tasks={getString(message('vision:labeler:CtrlZTask'));...
                getString(message('vision:labeler:CtrlYTask'));...
                getString(message('lidar:labeler:CtrlATask'));...
                getString(message('lidar:labeler:CtrlClickROITask'));...
                getString(message('lidar:labeler:CtrlXTask'));...
                getString(message('lidar:labeler:CtrlCTask'));...
                getString(message('lidar:labeler:CtrlVTask'));...
                getString(message('lidar:labeler:DeleteTask'))};
            end
            list(2).data=[tasks,actions];


            list(3).sectionTitle=getString(message('vision:labeler:AppSessionsTitle'));
            if ismac
                actions={getString(message('vision:labeler:CmdSAction'))};
            else
                actions={getString(message('vision:labeler:CtrlSAction'))};
            end
            tasks={getString(message('vision:labeler:CtrlSTask'))};
            list(3).data=[tasks,actions];

        end




        function list=getImageLabelerShortcuts()


            list(1).sectionTitle=getString(message('vision:labeler:ImageBrowsingSelectionTitle'));
            if ismac
                actions={getString(message('vision:labeler:LeftRightArrowAction'));...
                getString(message('vision:labeler:FnUpDownArrowAction'));...
                getString(message('vision:labeler:FnLeftAction'));...
                getString(message('vision:labeler:FnRightAction'));...
                getString(message('vision:labeler:FnShiftLeftAction'));...
                getString(message('vision:labeler:FnShiftLeftAction'));...
                getString(message('vision:labeler:ShiftImageClickTask'));...
                getString(message('vision:labeler:CmdImageClickAction'))};
            else
                actions={getString(message('vision:labeler:LeftRightArrowAction'));...
                getString(message('vision:labeler:PgUpDownAction'));...
                getString(message('vision:labeler:HomeAction'));...
                getString(message('vision:labeler:EndAction'));...
                getString(message('vision:labeler:ShiftHomeAction'));...
                getString(message('vision:labeler:ShiftEndAction'));...
                getString(message('vision:labeler:ShiftImageClickAction'));...
                getString(message('vision:labeler:CtrlImageClickAction'))};

            end
            tasks={getString(message('vision:labeler:LeftRightArrowImageTask'));...
            getString(message('vision:labeler:PgUpDownTask'));...
            getString(message('vision:labeler:HomeTask'));...
            getString(message('vision:labeler:EndTask'));...
            getString(message('vision:labeler:ShiftHomeTask'));...
            getString(message('vision:labeler:ShiftEndTask'));...
            getString(message('vision:labeler:ShiftImageClickTask'));...
            getString(message('vision:labeler:CtrlImageClickTask'))};
            list(1).data=[tasks,actions];


            list(2)=vision.internal.labeler.tool.ShortcutsList.getPolylineDrawShortcuts();


            list(3).sectionTitle=getString(message('vision:labeler:ZoomingTitle'));
            list(3).data={getString(message('vision:labeler:ScrollUpDownImageTask')),getString(message('vision:labeler:ScrollUpDownAction'));...
            getString(message('vision:labeler:ZoomButtonImageTask')),getString(message('vision:labeler:ZoomButtonImageAction'))};


            list(4)=vision.internal.labeler.tool.ShortcutsList.getPanShortcuts();
        end




        function list=getVideoLabelerShortcuts()


            list(1)=vision.internal.labeler.tool.ShortcutsList.getFrameNavigationShortcuts();


            list(2)=vision.internal.labeler.tool.ShortcutsList.getPolylineDrawShortcuts();


            list(3).sectionTitle=getString(message('vision:labeler:ZoomingTitle'));
            list(3).data={getString(message('vision:labeler:ScrollUpDownImageTask')),getString(message('vision:labeler:ScrollUpDownAction'));...
            getString(message('vision:labeler:ZoomButtonImageTask')),getString(message('vision:labeler:ZoomButtonImageAction'))};


            list(4)=vision.internal.labeler.tool.ShortcutsList.getPanShortcuts();
        end




        function list=getGroundTruthLabelerShortcuts()


            list(1)=vision.internal.labeler.tool.ShortcutsList.getFrameNavigationShortcuts();


            list(2)=vision.internal.labeler.tool.ShortcutsList.getPolylineDrawShortcuts();


            list(3)=vision.internal.labeler.tool.ShortcutsList.getCuboidDrawShortcuts();


            list(4).sectionTitle=getString(message('vision:labeler:ZoomingTitle'));
            list(4).data={getString(message('vision:labeler:ScrollUpDownImageFrameTask')),getString(message('vision:labeler:ScrollUpDownAction'));...
            getString(message('vision:labeler:ZoomButtonImageFrameTask')),getString(message('vision:labeler:ZoomButtonImageAction'));...
            getString(message('vision:labeler:ScrollUpDownPointCloudTask')),getString(message('vision:labeler:ScrollUpDownAction'));...
            getString(message('vision:labeler:ZoomButtonPointCloudTask')),getString(message('vision:labeler:ZoomButtonPointCloudAction'))};


            list(5)=vision.internal.labeler.tool.ShortcutsList.getLidarPanShortcuts();

        end




        function list=getLidarLabelerShortcuts()


            list(1)=vision.internal.labeler.tool.ShortcutsList.getFrameNavigationShortcuts();


            list(2)=vision.internal.labeler.tool.ShortcutsList.getCuboidDrawShortcuts();


            list(3).sectionTitle=getString(message('vision:labeler:ZoomingTitle'));
            list(3).data={getString(message('vision:labeler:ScrollUpDownPointCloudTask')),getString(message('vision:labeler:ScrollUpDownAction'));...
            getString(message('vision:labeler:ZoomButtonPointCloudTask')),getString(message('vision:labeler:ZoomButtonPointCloudAction'))};


            list(4)=vision.internal.labeler.tool.ShortcutsList.getLidarPanShortcuts();

        end




        function list=getFrameNavigationShortcuts()

            list.sectionTitle=getString(message('vision:labeler:FrameNavigationTimeTitle'));
            if ismac
                actions={getString(message('vision:labeler:LeftRightArrowAction'));...
                getString(message('vision:labeler:FnLeftAction'));...
                getString(message('vision:labeler:FnRightAction'));...
                getString(message('vision:labeler:TabAction'));...
                getString(message('vision:labeler:EnterAction'))};
            else
                actions={getString(message('vision:labeler:LeftRightArrowAction'));...
                getString(message('vision:labeler:HomeAction'));...
                getString(message('vision:labeler:EndAction'));...
                getString(message('vision:labeler:TabAction'));...
                getString(message('vision:labeler:EnterAction'))};
            end
            tasks={getString(message('vision:labeler:LeftRightArrowFrameTask'));...
            getString(message('vision:labeler:HomeTask'));...
            getString(message('vision:labeler:EndTask'));...
            getString(message('vision:labeler:TabTask'));...
            getString(message('vision:labeler:EnterTask'))};
            list.data=[tasks,actions];

        end




        function list=getCuboidDrawShortcuts()

            list.sectionTitle=getString(message('vision:labeler:CuboidDrawingTitle'));
            list.data={getString(message('vision:labeler:AScrollUpDownTask')),getString(message('vision:labeler:AScrollUpDownAction'));...
            getString(message('vision:labeler:XScrollUpDownTask')),getString(message('vision:labeler:XScrollUpDownAction'));...
            getString(message('vision:labeler:YScrollUpDownTask')),getString(message('vision:labeler:YScrollUpDownAction'));...
            getString(message('vision:labeler:ZScrollUpDownTask')),getString(message('vision:labeler:ZScrollUpDownAction'));...
            getString(message('vision:labeler:ClickDragFaceTask')),getString(message('vision:labeler:ClickDragFaceAction'));...
            getString(message('vision:labeler:ShiftClickDragFaceTask')),getString(message('vision:labeler:ShiftClickDragFaceAction'));...
            getString(message('vision:labeler:RClickDragDisplayTask')),getString(message('vision:labeler:RClickDragDisplayAction'))};

        end




        function list=getPanShortcuts()

            list.sectionTitle=getString(message('vision:labeler:PanTitle'));
            list.data={getString(message('vision:labeler:PanRightTask')),getString(message('vision:labeler:PanRightAction'));...
            getString(message('vision:labeler:PanLeftTask')),getString(message('vision:labeler:PanLeftAction'));...
            getString(message('vision:labeler:PanUpTask')),getString(message('vision:labeler:PanUpAction'));...
            getString(message('vision:labeler:PanDownTask')),getString(message('vision:labeler:PanDownAction'))};

        end




        function list=getLidarPanShortcuts()

            list.sectionTitle=getString(message('vision:labeler:PanTitle'));
            list.data={getString(message('vision:labeler:PanRightTask')),getString(message('vision:labeler:LidarPanRightAction'));...
            getString(message('vision:labeler:PanLeftTask')),getString(message('vision:labeler:LidarPanLeftAction'));...
            getString(message('vision:labeler:PanUpTask')),getString(message('vision:labeler:LidarPanUpAction'));...
            getString(message('vision:labeler:PanDownTask')),getString(message('vision:labeler:LidarPanDownAction'))};

        end




        function list=getPolylineDrawShortcuts()
            list.sectionTitle=getString(message('vision:labeler:PolyLinePolygonTitle'));
            list.data={getString(message('vision:labeler:EnterRightClickTask')),getString(message('vision:labeler:EnterRightClickAction'));...
            getString(message('vision:labeler:DoubleClickTask')),getString(message('vision:labeler:DoubleClickAction'));...
            getString(message('vision:labeler:BackspaceTask')),getString(message('vision:labeler:BackspaceAction'));...
            getString(message('vision:labeler:EscapeTask')),getString(message('vision:labeler:EscapeAction'))};
        end



    end

end

