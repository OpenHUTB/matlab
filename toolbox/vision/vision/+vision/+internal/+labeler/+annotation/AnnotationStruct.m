classdef AnnotationStruct < handle
properties ( Access = protected )
AnnotationStruct_ = struct(  );
SignalName


Cache
end 

properties 
NumImages
end 

methods 



function this = AnnotationStruct( signalName, numImages )
this.SignalName = signalName;
this.NumImages = numImages;
end 

function sFrame = getAnnotationStructPerFrame( this, frameIdx )
sFrame = this.AnnotationStruct_( frameIdx );
end 

function annoS = getAnnotationStruct( this )
annoS = this.AnnotationStruct_;
end 





function repeatLastAnnotationStruct( this, numImages, defaultValue )

numberToAppend = numImages - this.NumImages;

structToAppend = structfun( @( x )defaultValue, this.AnnotationStruct_( end  ), 'UniformOutput', false );
this.AnnotationStruct_ = [ this.AnnotationStruct_;repmat( structToAppend, numberToAppend, 1 ) ];
end 

function replaceAnnotationStruct( this, annotationStruct )
this.AnnotationStruct_ = annotationStruct;
end 





function cache( this )

this.Cache.AnnotationStruct_ = this.AnnotationStruct_;
end 






function uncache( this )

if isempty( this.Cache )
initialize( this );
else 
this.AnnotationStruct_ = this.Cache.AnnotationStruct_;
end 
end 


function tf = hasSameName( this, name )
tf = strcmp( this.SignalName, name );
end 
end 












































methods 




function addLabel( this, labelName, scalarV )









[ this.AnnotationStruct_( 1:end  ).( labelName ) ] = deal( scalarV );
end 

function removeLabel( this, labelName )
if isfield( this.AnnotationStruct_, labelName )
this.AnnotationStruct_ = rmfield( this.AnnotationStruct_, labelName );
end 
end 

function setSignalName( this, name )
this.SignalName = name;
end 
end 
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
end 
% Decoded using De-pcode utility v1.2 from file /tmp/tmpqgfakK.p.
% Please follow local copyright laws when handling this file.

