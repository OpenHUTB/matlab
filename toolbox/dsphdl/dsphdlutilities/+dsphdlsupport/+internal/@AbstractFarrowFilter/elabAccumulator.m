function accumNet=elabAccumulator(~,topNet,blockInfo,dataRate,...
    din,addin,vldIn,...
    tapout,...
    DATA_WORDLENGTH,DATA_FRACTIONLENGTH,...
    COEF_WORDLENGTH,COEF_FRACTIONLENGTH,...
    OUTPUT_WORDLENGTH,OUTPUT_FRACTIONLENGTH)






    if blockInfo.inMode(2)
        InportNames={din.Name,addin.Name,vldIn.Name,'syncReset'};
        InportTypes=[din.Type,addin.Type,vldIn.Type,pir_boolean_t];
        InportRates=[dataRate;dataRate;dataRate;dataRate];
    else
        InportNames={din.Name,addin.Name,vldIn.Name};
        InportTypes=[din.Type,addin.Type,vldIn.Type];
        InportRates=[dataRate;dataRate;dataRate];
    end



    OutportNames={tapout.Name};
    OutportTypes=[tapout.Type];

    accumNet=pirelab.createNewNetwork(...
    'Network',topNet,...
    'Name','PhaseAccumulator',...
    'InportNames',InportNames,...
    'InportTypes',InportTypes,...
    'InportRates',InportRates,...
    'OutportNames',OutportNames,...
    'OutportTypes',OutportTypes...
    );

    inputPort=accumNet.PirInputSignals;
    outputPort=accumNet.PirOutputSignals;
    din=inputPort(1);
    addin=inputPort(2);
    vldIn=inputPort(3);
    if blockInfo.inMode(2)
        syncReset=inputPort(4);
    else
        syncReset='';
    end
    tapout=outputPort(1);




    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFarrowFilter','cgireml','Accumulator.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='PhaseAccumulator';

    tap=accumNet.addComponent2(...
    'kind','cgireml',...
    'Name','fTap',...
    'InputSignals',[din,addin,vldIn],...
    'OutputSignals',[tapout],...
    'EMLFileName','Accumulator',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{DATA_WORDLENGTH,DATA_FRACTIONLENGTH...
    ,COEF_WORDLENGTH,COEF_FRACTIONLENGTH,...
    OUTPUT_WORDLENGTH,OUTPUT_FRACTIONLENGTH,blockInfo.synthesisTool},...
    'ExternalSynchronousResetSignal',syncReset,...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    tap.runConcurrencyMaximizer(0);
    if blockInfo.HDLGlobalReset
        tap.resetNone(false);
    else
        tap.resetNone(true);
    end

end
