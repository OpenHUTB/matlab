function stageG=elabRADIX2FFT_KernelG(this,topNet,blockInfo,stageNum,dataRate,stageIn,twiddle_re,twiddle_im,din_re,din_im,din_vld,softReset,stageOut,twiddleAddr,dout_re,dout_im,dout_vld)





    FFTLENGTH=blockInfo.actualFFTLength;
    TOTALSTAGES=log2(FFTLENGTH);
    SIGNED=din_re.Type.Signed;
    WORDLENGTH=din_re.Type.WordLength;
    FRACTIONLENGTH=din_re.Type.FractionLength;
    TWDL_WORDLENGTH=blockInfo.TWDL_WORDLENGTH;
    TWDL_FRACTIONLENGTH=-blockInfo.TWDL_FRACTIONLENGTH;

    ADDRWIDTH=log2(blockInfo.actualFFTLength)-stageNum;
    ADDRRANGE=blockInfo.actualFFTLength/2^stageNum;
    OVERFLOWACTION=blockInfo.OverflowAction;
    ROUNDINGMETHOD=blockInfo.RoundingMethod;
    NORMALIZE=blockInfo.Normalize;


    InportNames={stageIn.Name,twiddle_re.Name,twiddle_im.Name,din_re.Name,din_im.Name,din_vld.Name,softReset.Name};
    InportTypes=[stageIn.Type;twiddle_re.Type;twiddle_im.Type;din_re.Type;din_im.Type;din_vld.Type;softReset.Type];
    InportRates=[dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate];

    stageG=pirelab.createNewNetwork(...
    'Network',topNet,...
    'Name','RADIX2FFT_KernelG',...
    'InportNames',InportNames,...
    'InportTypes',InportTypes,...
    'InportRates',InportRates,...
    'OutportNames',{stageOut.Name,twiddleAddr.Name,dout_re.Name,dout_im.Name,dout_vld.Name},...
    'OutportTypes',[stageOut.Type;twiddleAddr.Type;dout_re.Type;dout_im.Type;dout_vld.Type]...
    );

    inputPort=stageG.PirInputSignals;
    outputPort=stageG.PirOutputSignals;

    stageIn=inputPort(1);
    twiddle_re=inputPort(2);
    twiddle_im=inputPort(3);
    din_re=inputPort(4);
    din_im=inputPort(5);
    din_vld=inputPort(6);

    HASRESETPORT=blockInfo.inMode(2);
    if HASRESETPORT
        softReset=inputPort(7);
    else
        softReset='';
    end

    stageOut=outputPort(1);
    twiddleAddr=outputPort(2);
    dout_re=outputPort(3);
    dout_im=outputPort(4);
    dout_vld=outputPort(5);

    x_re=stageG.addSignal2('Type',din_re.Type,'Name','x_re');
    x_re.SimulinkRate=dataRate;
    x_im=stageG.addSignal2('Type',din_im.Type,'Name','x_im');
    x_im.SimulinkRate=dataRate;
    wrEnb=stageG.addSignal2('Type',pir_boolean_t,'Name','WrEnb');
    wrEnb.SimulinkRate=dataRate;
    wrAddr=stageG.addSignal2('Type',pir_ufixpt_t(ADDRWIDTH,0),'Name','wrAddr');
    wrAddr.SimulinkRate=dataRate;
    dataRdEnb=stageG.addSignal2('Type',pir_boolean_t(),'Name','dataRdEnb');
    dataRdEnb.SimulinkRate=dataRate;
    twdlRdEnb=stageG.addSignal2('Type',pir_boolean_t(),'Name','twdlRdEnb');
    twdlRdEnb.SimulinkRate=dataRate;
    rdAddr=stageG.addSignal2('Type',pir_ufixpt_t(ADDRWIDTH,0),'Name','rdAddr');
    rdAddr.SimulinkRate=dataRate;
    dataVld_re=stageG.addSignal2('Type',pir_boolean_t(),'Name','dataVld_re');
    dataVld_re.SimulinkRate=dataRate;
    MemDoVld=stageG.addSignal2('Type',pir_boolean_t(),'Name','MemDoVld');
    MemDoVld.SimulinkRate=dataRate;
    holdData=stageG.addSignal2('Type',pir_boolean_t(),'Name','holdData');
    holdData.SimulinkRate=dataRate;
    useDlyData=stageG.addSignal2('Type',pir_boolean_t(),'Name','useDlyData');
    useDlyData.SimulinkRate=dataRate;
    twdlDly=stageG.addSignal2('Type',pir_boolean_t(),'Name','twdlDly');
    twdlDly.SimulinkRate=dataRate;
    procEnb=stageG.addSignal2('Type',pir_boolean_t(),'Name','procEnb');
    procEnb.SimulinkRate=dataRate;


    if wrAddr.Type.WordLength==1

        fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
        '+dsphdlsupport','+internal','@AbstractFFT','cgireml','twoLocationReg.m'),'r');
        fcnBody=fread(fid,Inf,'char=>char')';
        fclose(fid);

        desc='twoLocationReg';

        twoLocationReg=stageG.addComponent2(...
        'kind','cgireml',...
        'Name','twoLocationReg',...
        'InputSignals',[din_re,din_im,wrAddr,wrEnb,rdAddr],...
        'OutputSignals',[x_re,x_im],...
        'ExternalSynchronousResetSignal',softReset,...
        'EMLFileName','twoLocationReg',...
        'EMLFileBody',fcnBody,...
        'EMLParams',{WORDLENGTH,FRACTIONLENGTH},...
        'EMLFlag_TreatInputIntsAsFixpt',true,...
        'EMLFlag_SaturateOnIntOverflow',false,...
        'EMLFlag_TreatInputBoolsAsUfix1',false,...
        'BlockComment',desc);

        twoLocationReg.runConcurrencyMaximizer(0);
    else
        pirelab.getSimpleDualPortRamComp(stageG,[din_re,wrAddr,wrEnb,rdAddr],x_re,'dataMEM_re');
        pirelab.getSimpleDualPortRamComp(stageG,[din_im,wrAddr,wrEnb,rdAddr],x_im,'dataMEM_im');
    end




    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','wrStateMachineG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='wrStateMachineG';

    wrStateMachineG=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','wrStateMachineG',...
    'InputSignals',[din_vld],...
    'OutputSignals',[wrEnb,wrAddr],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','wrStateMachineG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{ADDRWIDTH,ADDRRANGE},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    wrStateMachineG.runConcurrencyMaximizer(0);


    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','rdStateMachineG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='rdStateMachineG';

    rdStateMachineG=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','rdStateMachineG',...
    'InputSignals',[din_vld,wrAddr],...
    'OutputSignals',[rdAddr,MemDoVld,dataVld_re,dataRdEnb,twdlRdEnb,useDlyData,twdlDly,procEnb,holdData],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','rdStateMachineG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{FFTLENGTH,ADDRWIDTH,ADDRRANGE},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    rdStateMachineG.runConcurrencyMaximizer(0);


    din_re_dly1=stageG.addSignal2('Type',din_re.Type,'Name','din_re_dly1');
    din_re_dly1.SimulinkRate=dataRate;
    din_im_dly1=stageG.addSignal2('Type',din_re.Type,'Name','din_im_dly1');
    din_im_dly1.SimulinkRate=dataRate;
    din_re_dly2=stageG.addSignal2('Type',din_re.Type,'Name','din_re_dly2');
    din_re_dly2.SimulinkRate=dataRate;
    din_im_dly2=stageG.addSignal2('Type',din_re.Type,'Name','din_im_dly2');
    din_im_dly2.SimulinkRate=dataRate;
    x_reS=stageG.addSignal2('Type',din_re.Type,'Name','x_reS');
    x_reS.SimulinkRate=dataRate;
    x_imS=stageG.addSignal2('Type',din_re.Type,'Name','x_imS');
    x_imS.SimulinkRate=dataRate;
    x_re_dly1=stageG.addSignal2('Type',din_re.Type,'Name','x_re_dly1');
    x_re_dly1.SimulinkRate=dataRate;
    x_im_dly1=stageG.addSignal2('Type',din_re.Type,'Name','x_im_dly1');
    x_im_dly1.SimulinkRate=dataRate;
    x_re_dly2=stageG.addSignal2('Type',din_re.Type,'Name','x_re_dly2');
    x_re_dly2.SimulinkRate=dataRate;
    x_im_dly2=stageG.addSignal2('Type',din_re.Type,'Name','x_im_dly2');
    x_im_dly2.SimulinkRate=dataRate;

    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','delayBlockG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='delayBlockG';

    delayBlockG=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','delayBlockG',...
    'InputSignals',[holdData,MemDoVld,useDlyData,procEnb,x_re,x_im,din_re,din_im,din_vld],...
    'OutputSignals',[x_reS,x_imS,x_re_dly1,x_im_dly1,x_re_dly2,x_im_dly2,...
    din_re_dly1,din_im_dly1,din_re_dly2,din_im_dly2],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','delayBlockG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{FFTLENGTH,SIGNED,WORDLENGTH,FRACTIONLENGTH},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    delayBlockG.runConcurrencyMaximizer(0);


    x_u_in=stageG.addSignal2('Type',din_re.Type,'Name','x_u_in');
    x_u_in.SimulinkRate=dataRate;
    y_v_in=stageG.addSignal2('Type',din_re.Type,'Name','y_v_in');
    y_v_in.SimulinkRate=dataRate;
    v_y_in=stageG.addSignal2('Type',din_re.Type,'Name','v_y_in');
    v_y_in.SimulinkRate=dataRate;
    extended_dvld=stageG.addSignal2('Type',pir_boolean_t(),'Name','extended_dvld');
    extended_dvld.SimulinkRate=dataRate;
    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','commutatorG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='CommutatorG';

    commuatorG=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','commutatorG',...
    'InputSignals',[procEnb,useDlyData,...
    din_re,din_im,din_re_dly1,din_im_dly1,din_re_dly2,din_im_dly2,...
    x_reS,x_imS,x_re_dly1,x_im_dly1,x_re_dly2,x_im_dly2],...
    'OutputSignals',[x_u_in,y_v_in,v_y_in,extended_dvld],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','commutatorG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{ADDRRANGE,SIGNED,WORDLENGTH,FRACTIONLENGTH},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    commuatorG.runConcurrencyMaximizer(0);


    twdl_re=stageG.addSignal2('Type',pir_sfixpt_t(TWDL_WORDLENGTH,TWDL_FRACTIONLENGTH),'Name','twdl_re');
    twdl_re.SimulinkRate=dataRate;
    twdl_im=stageG.addSignal2('Type',pir_sfixpt_t(TWDL_WORDLENGTH,TWDL_FRACTIONLENGTH),'Name','twdl_im');
    twdl_im.SimulinkRate=dataRate;
    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities','+dsphdlsupport','+internal',...
    '@AbstractFFT','cgireml','twiddleAddrG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='twiddleAddrG';

    twiddleAddrG=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','twiddleAddrG',...
    'InputSignals',[twdlRdEnb,twiddle_re,twiddle_im,twdlDly,procEnb],...
    'OutputSignals',[twiddleAddr,twdl_re,twdl_im],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','twiddleAddrG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{TOTALSTAGES,stageNum,TWDL_WORDLENGTH,TWDL_FRACTIONLENGTH},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    twiddleAddrG.runConcurrencyMaximizer(0);


    x_out=stageG.addSignal2('Type',pir_sfixpt_t(WORDLENGTH+TWDL_WORDLENGTH+2,FRACTIONLENGTH+TWDL_FRACTIONLENGTH),'Name','x_out');
    x_out.SimulinkRate=dataRate;
    y_out=stageG.addSignal2('Type',pir_sfixpt_t(WORDLENGTH+TWDL_WORDLENGTH+2,FRACTIONLENGTH+TWDL_FRACTIONLENGTH),'Name','y_out');
    y_out.SimulinkRate=dataRate;
    u_out=stageG.addSignal2('Type',pir_sfixpt_t(WORDLENGTH+TWDL_WORDLENGTH+2,FRACTIONLENGTH+TWDL_FRACTIONLENGTH),'Name','u_out');
    u_out.SimulinkRate=dataRate;
    v_out=stageG.addSignal2('Type',pir_sfixpt_t(WORDLENGTH+TWDL_WORDLENGTH+2,FRACTIONLENGTH+TWDL_FRACTIONLENGTH),'Name','v_out');
    v_out.SimulinkRate=dataRate;
    realOut_dvld=stageG.addSignal2('Type',pir_boolean_t(),'Name','realOut_dvld');
    realOut_dvld.SimulinkRate=dataRate;
    doutVld=stageG.addSignal2('Type',pir_boolean_t(),'Name','doutVld');
    doutVld.SimulinkRate=dataRate;

    softReset_Parent=inputPort(7);
    ButterFlyG=this.elabRADIX2ButterflyG(stageG,TOTALSTAGES,WORDLENGTH,FRACTIONLENGTH,blockInfo,dataRate,stageIn,...
    procEnb,twdl_re,twdl_im,x_u_in,y_v_in,v_y_in,extended_dvld,softReset_Parent,stageOut,x_out,u_out,y_out,v_out,realOut_dvld,doutVld);

    pirelab.instantiateNetwork(stageG,ButterFlyG,[stageIn,procEnb,twdl_re,twdl_im,x_u_in,y_v_in,v_y_in,extended_dvld,softReset_Parent],...
    [stageOut,x_out,u_out,y_out,v_out,realOut_dvld,doutVld],'ButterflyG');




    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','outputMuxG.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='outputMuxG';

    outMux=stageG.addComponent2(...
    'kind','cgireml',...
    'Name','outputMuxG',...
    'InputSignals',[doutVld,realOut_dvld,x_out,y_out,u_out,v_out],...
    'OutputSignals',[dout_re,dout_im,dout_vld],...
    'ExternalSynchronousResetSignal',softReset,...
    'EMLFileName','outputMuxG',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{SIGNED,dout_re.Type.WordLength,dout_re.Type.FractionLength,OVERFLOWACTION,ROUNDINGMETHOD,NORMALIZE},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    outMux.runConcurrencyMaximizer(0);

end
