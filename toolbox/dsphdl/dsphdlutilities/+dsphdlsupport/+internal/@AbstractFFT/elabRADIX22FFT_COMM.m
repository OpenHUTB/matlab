function commutator=elabRADIX22FFT_COMM(this,topNet,blockInfo,R2StageNum,MEMSIZE,dataRate,DATA_WORDLENGTH,DATA_FRACTIONLENGTH,...
    din_vld,...
    xf_re,xf_im,xf_vld,...
    dinf_re,dinf_im,dinf_vld,...
    btf1_re,btf1_im,btf2_re,btf2_im,btf_vld,softReset,...
    wrData_re,wrData_im,wrAddr,wrEnb,...
    dout_re,dout_im,dout_vld)





    InportNames={din_vld.Name,xf_re.Name,xf_im.Name,xf_vld.Name,dinf_re.Name,dinf_im.Name,dinf_vld.Name,btf1_re.Name,btf1_im.Name,btf2_re.Name,btf2_im.Name,btf_vld.Name,softReset.Name};
    InportTypes=[din_vld.Type;xf_re.Type;xf_im.Type;xf_vld.Type;dinf_re.Type;dinf_im.Type;dinf_vld.Type;btf1_re.Type;btf1_im.Type;btf2_re.Type;btf2_im.Type;btf_vld.Type;softReset.Type];
    InportRates=[dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate;dataRate];
    OutportNames={wrData_re.Name,wrData_im.Name,wrAddr.Name,wrEnb.Name,dout_re.Name,dout_im.Name,dout_vld.Name};
    OutportTypes=[wrData_re.Type;wrData_im.Type;wrAddr.Type;wrEnb.Type;dout_re.Type;dout_im.Type;dout_vld.Type];

    commutator=pirelab.createNewNetwork(...
    'Network',topNet,...
    'Name',['SDFCommutator',num2str(R2StageNum)],...
    'InportNames',InportNames,...
    'InportTypes',InportTypes,...
    'InportRates',InportRates,...
    'OutportNames',OutportNames,...
    'OutportTypes',OutportTypes);

    inputPort=commutator.PirInputSignals;
    outputPort=commutator.PirOutputSignals;

    din_vld=inputPort(1);
    xf_re=inputPort(2);
    xf_im=inputPort(3);
    xf_vld=inputPort(4);
    dinf_re=inputPort(5);
    dinf_im=inputPort(6);
    dinf_vld=inputPort(7);
    btf1_re=inputPort(8);
    btf1_im=inputPort(9);
    btf2_re=inputPort(10);
    btf2_im=inputPort(11);
    btf_vld=inputPort(12);
    softReset=inputPort(13);

    HASRESETPORT=blockInfo.inMode(2);
    if HASRESETPORT
        syncReset=softReset;
    else
        syncReset='';
    end
    wrData_re=outputPort(1);
    wrData_im=outputPort(2);
    wrAddr=outputPort(3);
    wrEnb=outputPort(4);
    dout_re=outputPort(5);
    dout_im=outputPort(6);
    dout_vld=outputPort(7);


    wrXData_re=commutator.addSignal2('Type',dout_re.Type,'Name','xData_re');
    wrXData_re.SimulinkRate=dataRate;
    wrXData_im=commutator.addSignal2('Type',dout_re.Type,'Name','xData_im');
    wrXData_im.SimulinkRate=dataRate;
    wrXAddr=commutator.addSignal2('Type',pir_fixpt_t(0,3,0),'Name','wrXAddr');
    wrXAddr.SimulinkRate=dataRate;
    rdXAddr=commutator.addSignal2('Type',pir_fixpt_t(0,3,0),'Name','rdXAddr');
    rdXAddr.SimulinkRate=dataRate;
    wrXEnb=commutator.addSignal2('Type',pir_boolean_t,'Name','wrXEnb');
    wrXEnb.SimulinkRate=dataRate;
    xX_re=commutator.addSignal2('Type',dout_re.Type,'Name','xX_re');
    xX_re.SimulinkRate=dataRate;
    xX_im=commutator.addSignal2('Type',dout_re.Type,'Name','xX_im');
    xX_im.SimulinkRate=dataRate;
    xX_vld=commutator.addSignal2('Type',pir_boolean_t,'Name','xX_vld');
    xX_vld.SimulinkRate=dataRate;
    pirelab.getSimpleDualPortRamComp(commutator,[wrXData_re,wrXAddr,wrXEnb,rdXAddr],xX_re,['dataXMEM_re_0_',num2str(R2StageNum)]);
    pirelab.getSimpleDualPortRamComp(commutator,[wrXData_im,wrXAddr,wrXEnb,rdXAddr],xX_im,['dataXMEM_im_0_',num2str(R2StageNum)]);

    dout0_re=commutator.addSignal2('Type',dout_re.Type,'Name','dout0_re');
    dout0_re.SimulinkRate=dataRate;
    dout0_im=commutator.addSignal2('Type',dout_re.Type,'Name','dout0_im');
    dout0_im.SimulinkRate=dataRate;
    dout0_vld=commutator.addSignal2('Type',pir_boolean_t,'Name','dout0_vld');
    dout0_vld.SimulinkRate=dataRate;
    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities','+dsphdlsupport','+internal',...
    '@AbstractFFT','cgireml','SDFCummutator.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='SDFCummutator';

    SDFCummutator=commutator.addComponent2(...
    'kind','cgireml',...
    'Name','SDFCummutator',...
    'InputSignals',[din_vld,xf_re,xf_im,xf_vld,dinf_re,dinf_im,dinf_vld,btf1_re,btf1_im,btf2_re,btf2_im,btf_vld],...
    'OutputSignals',[wrData_re,wrData_im,wrAddr,wrEnb,...
    wrXData_re,wrXData_im,wrXAddr,wrXEnb,rdXAddr,xX_vld,...
    dout0_re,dout0_im,dout0_vld],...
    'ExternalSynchronousResetSignal',syncReset,...
    'EMLFileName','SDFCummutator',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{DATA_WORDLENGTH,DATA_FRACTIONLENGTH,MEMSIZE},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    SDFCummutator.runConcurrencyMaximizer(0);


    fid=fopen(fullfile(matlabroot,'toolbox','dsphdl','dsphdlutilities',...
    '+dsphdlsupport','+internal','@AbstractFFT','cgireml','SDFOutmux.m'),'r');
    fcnBody=fread(fid,Inf,'char=>char')';
    fclose(fid);

    desc='SDFOutmux';

    SDFOutmux=commutator.addComponent2(...
    'kind','cgireml',...
    'Name','SDFOutmux',...
    'InputSignals',[dout0_re,dout0_im,dout0_vld,xX_re,xX_im,xX_vld],...
    'OutputSignals',[dout_re,dout_im,dout_vld],...
    'ExternalSynchronousResetSignal',syncReset,...
    'EMLFileName','SDFOutmux',...
    'EMLFileBody',fcnBody,...
    'EMLParams',{DATA_WORDLENGTH,DATA_FRACTIONLENGTH},...
    'EMLFlag_TreatInputIntsAsFixpt',true,...
    'EMLFlag_SaturateOnIntOverflow',false,...
    'EMLFlag_TreatInputBoolsAsUfix1',false,...
    'BlockComment',desc);

    SDFOutmux.runConcurrencyMaximizer(0);
