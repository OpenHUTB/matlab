
function wrEnbGaussJordan(~,hN,WrEnbLTInSigs,WrEnbLTOutSigs,...
    hBoolT,hCounterT,slRate,blockInfo)





    hWrEnbLTN=pirelab.createNewNetwork(...
    'Name','wrEnbGaussJordan',...
    'InportNames',{'rowCountOut','processingEnb','nonDiagValidOut','diagValidOut',...
    'swapEnb','swapEnableOut'},...
    'InportTypes',[hCounterT,hBoolT,hBoolT,hBoolT,hBoolT,hBoolT],...
    'InportRates',slRate*ones(1,6),...
    'OutportNames',{'wrEnbGJ'},...
    'OutportTypes',pirelab.createPirArrayType(hBoolT,[blockInfo.RowSize*2,0]));

    hWrEnbLTN.setTargetCompReplacementCandidate(true);

    for ii=1:numel(hWrEnbLTN.PirOutputSignals)
        hWrEnbLTN.PirOutputSignals(ii).SimulinkRate=slRate;
    end



    hWrEnbLTNinSigs=hWrEnbLTN.PirInputSignals;
    hWrEnbLTNoutSigs=hWrEnbLTN.PirOutputSignals;

    rowCountOut=hWrEnbLTNinSigs(1);
    processingEnb=hWrEnbLTNinSigs(2);
    nonDiagValidOut=hWrEnbLTNinSigs(3);
    diagValidOut=hWrEnbLTNinSigs(4);
    swapEnb=hWrEnbLTNinSigs(5);
    swapEnableOut=hWrEnbLTNinSigs(6);

    wrEnbGJ=hWrEnbLTNoutSigs(1);



    pirTyp2=pir_boolean_t;
    pirTyp3=pir_unsigned_t(8);

    if blockInfo.MatrixSize==1
        hArrayT=pirTyp2;
    else
        hArrayT=pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize,0]);
    end


    Assignment_out1_s6=l_addSignal(hWrEnbLTN,'Assignment_out1',hArrayT,slRate);
    Assignment1_out1_s7=l_addSignal(hWrEnbLTN,'Assignment1_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);
    Constant_out1_s8=l_addSignal(hWrEnbLTN,'Constant_out1',hArrayT,slRate);
    Constant1_out1_s9=l_addSignal(hWrEnbLTN,'Constant1_out1',pirTyp2,slRate);
    Constant2_out1_s10=l_addSignal(hWrEnbLTN,'Constant2_out1',hArrayT,slRate);
    Constant3_out1_s11=l_addSignal(hWrEnbLTN,'Constant3_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);
    DataTypeConversion_out1_s12=l_addSignal(hWrEnbLTN,'Data Type Conversion_out1',pirTyp3,slRate);
    LogicalOperator_out1_s13=l_addSignal(hWrEnbLTN,sprintf('Logical\nOperator_out1'),pirTyp2,slRate);
    LogicalOperator1_out1_s14=l_addSignal(hWrEnbLTN,sprintf('Logical\nOperator1_out1'),pirTyp2,slRate);
    Switch1_out1_s16=l_addSignal(hWrEnbLTN,'Switch1_out1',hArrayT,slRate);
    VectorConcatenate4_out1_s17=l_addSignal(hWrEnbLTN,sprintf('Vector\nConcatenate4_out1'),pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);


    pirelab.getConstComp(hWrEnbLTN,...
    Constant_out1_s8,...
    zeros(1,blockInfo.MatrixSize),...
    'Constant','on',1,'','','');



    pirelab.getConstComp(hWrEnbLTN,...
    Constant1_out1_s9,...
    1,...
    'Constant1','on',0,'','','');



    pirelab.getConstComp(hWrEnbLTN,...
    Constant2_out1_s10,...
    zeros(1,blockInfo.MatrixSize),...
    'Constant2','on',1,'','','');



    pirelab.getConstComp(hWrEnbLTN,...
    Constant3_out1_s11,...
    zeros(1,blockInfo.MatrixSize*2),...
    'Constant3','on',1,'','','');

    if blockInfo.MatrixSize==1
        pirelab.getWireComp(hWrEnbLTN,Constant1_out1_s9,Assignment_out1_s6,'AssignmentOut');

    else
        pirelab.getAssignmentComp(hWrEnbLTN,...
        [Constant_out1_s8,Constant1_out1_s9,DataTypeConversion_out1_s12],...
        Assignment_out1_s6,...
        'One-based',{'Index vector (port)'},...
        {1},...
        {'1'},'1',...
        'Assignment');
    end

    pirelab.getAssignmentComp(hWrEnbLTN,...
    [Constant3_out1_s11,swapEnableOut],...
    Assignment1_out1_s7,...
    'One-based',{'Assign all'},...
    {1},...
    {'1'},'1',...
    'Assignment1');




    pirelab.getDTCComp(hWrEnbLTN,...
    rowCountOut,...
    DataTypeConversion_out1_s12,...
    'Floor','Wrap','RWV','Data Type Conversion');



    pirelab.getLogicComp(hWrEnbLTN,...
    [nonDiagValidOut,diagValidOut],...
    LogicalOperator_out1_s13,...
    'or',sprintf('Logical\nOperator'));



    pirelab.getLogicComp(hWrEnbLTN,...
    [processingEnb,LogicalOperator_out1_s13],...
    LogicalOperator1_out1_s14,...
    'and',sprintf('Logical\nOperator1'));



    pirelab.getSwitchComp(hWrEnbLTN,...
    [Assignment1_out1_s7,VectorConcatenate4_out1_s17],...
    wrEnbGJ,...
    swapEnb,'Switch',...
    '~=',0,'Floor','Wrap');




    pirelab.getSwitchComp(hWrEnbLTN,...
    [Assignment_out1_s6,Constant2_out1_s10],...
    Switch1_out1_s16,...
    LogicalOperator1_out1_s14,'Switch1',...
    '~=',0,'Floor','Wrap');



    pirelab.getMuxComp(hWrEnbLTN,...
    [Switch1_out1_s16,Switch1_out1_s16],...
    VectorConcatenate4_out1_s17,...
    'concatenate');




    pirelab.instantiateNetwork(hN,hWrEnbLTN,WrEnbLTInSigs,WrEnbLTOutSigs,...
    [hWrEnbLTN.Name,'_inst']);
end


function hS=l_addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=-1;
    hS.SimulinkRate=simulinkRate;
end


