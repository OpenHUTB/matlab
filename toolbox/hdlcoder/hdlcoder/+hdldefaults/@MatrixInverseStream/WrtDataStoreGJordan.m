
function WrtDataStoreGJordan(~,hN,WrtDataStoreInSigs,WrtDataStoreOutSigs,...
    slRate,blockInfo)




    hWrtDataStoreN=pirelab.createNewNetwork(...
    'Name','WrtDataStoreGJordan',...
    'InportNames',{'validIn','dataIn','rowCount','colCount'},...
    'InportTypes',[WrtDataStoreInSigs(1).Type,WrtDataStoreInSigs(2).Type,...
    WrtDataStoreInSigs(3).Type,WrtDataStoreInSigs(4).Type],...
    'InportRates',slRate*ones(1,4),...
    'OutportNames',{'wrtDataStore'},...
    'OutportTypes',WrtDataStoreOutSigs(1).Type);

    hWrtDataStoreN.setTargetCompReplacementCandidate(true);


    for ii=1:numel(hWrtDataStoreN.PirOutputSignals)
        hWrtDataStoreN.PirOutputSignals(ii).SimulinkRate=slRate;
    end

    hWrtDataStoreNinSigs=hWrtDataStoreN.PirInputSignals;
    hWrtDataStoreNoutSigs=hWrtDataStoreN.PirOutputSignals;


    validRdy=hWrtDataStoreNinSigs(1);
    dataIn=hWrtDataStoreNinSigs(2);
    rowCount=hWrtDataStoreNinSigs(3);
    colCount=hWrtDataStoreNinSigs(4);

    wrtDataStore=hWrtDataStoreNoutSigs(1);


    pirTyp1=pir_boolean_t;

    pirTyp4=WrtDataStoreInSigs(2).Type;
    if blockInfo.MatrixSize==1
        hArrayT=pirTyp4;
    else
        hArrayT=pirelab.createPirArrayType(pirTyp4,[blockInfo.MatrixSize,0]);
    end


    Assignment_out1_s4=l_addSignal(hWrtDataStoreN,'Assignment_out1',hArrayT,slRate);
    Assignment1_out1_s5=l_addSignal(hWrtDataStoreN,'Assignment1_out1',hArrayT,slRate);
    Constant_out1_s6=l_addSignal(hWrtDataStoreN,'Constant_out1',pirTyp4,slRate);
    Constant1_out1_s7=l_addSignal(hWrtDataStoreN,'Constant1_out1',pirTyp4,slRate);
    Constant2_out1_s8=l_addSignal(hWrtDataStoreN,'Constant2_out1',hArrayT,slRate);
    RelationalOperator_out1_s9=l_addSignal(hWrtDataStoreN,sprintf('Relational\nOperator_out1'),pirTyp1,slRate);
    Switch_out1_s10=l_addSignal(hWrtDataStoreN,'Switch_out1',pirTyp4,slRate);
    Switch1_out1_s11=l_addSignal(hWrtDataStoreN,'Switch1_out1',pirTyp4,slRate);



    pirelab.getConstComp(hWrtDataStoreN,...
    Constant_out1_s6,...
    0,...
    'Constant','on',1,'','','');




    pirelab.getConstComp(hWrtDataStoreN,...
    Constant1_out1_s7,...
    1,...
    'Constant1','on',0,'','','');




    pirelab.getConstComp(hWrtDataStoreN,...
    Constant2_out1_s8,...
    zeros(1,blockInfo.MatrixSize),...
    'Constant2','on',1,'','','');




    if blockInfo.MatrixSize==1
        pirelab.getWireComp(hWrtDataStoreN,Switch_out1_s10,Assignment_out1_s4,'AssignmentDataOut');
        pirelab.getWireComp(hWrtDataStoreN,Switch1_out1_s11,Assignment1_out1_s5,'AssignmentDataOut1');
    else
        pirelab.getAssignmentComp(hWrtDataStoreN,...
        [Constant2_out1_s8,Switch_out1_s10],...
        Assignment_out1_s4,...
        'One-based',{'Assign all'},...
        {1},...
        {'1'},'1',...
        'Assignment');

        pirelab.getAssignmentComp(hWrtDataStoreN,...
        [Constant2_out1_s8,Switch1_out1_s11],...
        Assignment1_out1_s5,...
        'One-based',{'Assign all'},...
        {1},...
        {'1'},'1',...
        'Assignment1');
    end

    pirelab.getRelOpComp(hWrtDataStoreN,...
    [rowCount,colCount],...
    RelationalOperator_out1_s9,...
    '==',0,sprintf('Relational\nOperator'));




    pirelab.getSwitchComp(hWrtDataStoreN,...
    [dataIn,Constant_out1_s6],...
    Switch_out1_s10,...
    validRdy,'Switch',...
    '~=',0,'Floor','Wrap');



    pirelab.getSwitchComp(hWrtDataStoreN,...
    [Constant1_out1_s7,Constant_out1_s6],...
    Switch1_out1_s11,...
    RelationalOperator_out1_s9,'Switch1',...
    '~=',0,'Floor','Wrap');


    pirelab.getMuxComp(hWrtDataStoreN,...
    [Assignment_out1_s4,Assignment1_out1_s5],...
    wrtDataStore,...
    'concatenate');

    pirelab.instantiateNetwork(hN,hWrtDataStoreN,WrtDataStoreInSigs,...
    WrtDataStoreOutSigs,[hWrtDataStoreN.Name,'_inst']);
end


function hS=l_addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=-1;
    hS.SimulinkRate=simulinkRate;
end


