

function RdAddrGeneratorGaussJordan(~,hN,RdAddrGenInSigs,RdAddrGenOutSigs,hBoolT,hAddrT,...
    slRate,blockInfo)




    hRdAddrGenN=pirelab.createNewNetwork(...
    'Name','RdAddrGeneratorGaussJordan',...
    'InportNames',{'processingEnb','rdAddrOut'...
    ,'rdAddrLT','outStreamEnb'},...
    'InportTypes',[hBoolT,hAddrT,...
    RdAddrGenInSigs(3).Type,...
    hBoolT],...
    'InportRates',slRate*ones(1,4),...
    'OutportNames',{'rdAddr'},...
    'OutportTypes',pirelab.createPirArrayType(hAddrT,[blockInfo.RowSize*2,0]));

    hRdAddrGenN.setTargetCompReplacementCandidate(true);

    for ii=1:numel(hRdAddrGenN.PirOutputSignals)
        hRdAddrGenN.PirOutputSignals(ii).SimulinkRate=slRate;
    end

    hRdAddrGenNinSigs=hRdAddrGenN.PirInputSignals;
    hRdAddrGenNoutSigs=hRdAddrGenN.PirOutputSignals;

    processingEnb=hRdAddrGenNinSigs(1);
    rdAddrOut=hRdAddrGenNinSigs(2);
    rdAddrLT=hRdAddrGenNinSigs(3);
    outStreamEnb=hRdAddrGenNinSigs(4);

    rdAddr=hRdAddrGenNoutSigs(1);

    if blockInfo.MatrixSize==1
        pirTyp2=pir_ufixpt_t(1,0);
    else
        pirTyp2=pir_ufixpt_t(ceil(log2(blockInfo.MatrixSize)),0);
    end

    Assignment_out1_s4=l_addSignal(hRdAddrGenN,'Assignment_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);
    Constant_out1_s5=l_addSignal(hRdAddrGenN,'Constant_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);
    Constant1_out1_s6=l_addSignal(hRdAddrGenN,'Constant1_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);
    Switch1_out1_s8=l_addSignal(hRdAddrGenN,'Switch1_out1',pirelab.createPirArrayType(pirTyp2,[blockInfo.MatrixSize*2,0]),slRate);


    pirelab.getConstComp(hRdAddrGenN,...
    Constant_out1_s5,...
    0,...
    'Constant','on',1,'','','');




    pirelab.getConstComp(hRdAddrGenN,...
    Constant1_out1_s6,...
    zeros(1,blockInfo.MatrixSize*2),...
    'Constant1','on',1,'','','');




    pirelab.getAssignmentComp(hRdAddrGenN,...
    [Constant1_out1_s6,rdAddrOut],...
    Assignment_out1_s4,...
    'One-based',{'Assign all'},...
    {1},...
    {'1'},'1',...
    'Assignment');




    pirelab.getSwitchComp(hRdAddrGenN,...
    [Assignment_out1_s4,Switch1_out1_s8],...
    rdAddr,...
    outStreamEnb,'Switch',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hRdAddrGenN,...
    [rdAddrLT,Constant_out1_s5],...
    Switch1_out1_s8,...
    processingEnb,'Switch1',...
    '~=',0,'Floor','Wrap');

    pirelab.instantiateNetwork(hN,hRdAddrGenN,RdAddrGenInSigs,RdAddrGenOutSigs,...
    [hRdAddrGenN.Name,'_inst']);


end


function hS=l_addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=-1;
    hS.SimulinkRate=simulinkRate;
end
