function hRACtlN=memoryReadAddressControl(this,hMemCtlN,hInSigs,hOutSigs,slRate,blockInfo,latency)



    hBoolT=pir_boolean_t;
    bCol=blockInfo.bColumnSize;
    hbColCounterT=pir_fixpt_t(false,ceil(log2(blockInfo.bColumnSize))+1,0);

    hindexCounterT=pir_fixpt_t(false,ceil(log2(blockInfo.aColumnSize/blockInfo.dotProductSize))+1,0);

    hRACtlN=pirelab.createNewNetwork(...
    'Name','memoryReadAddressControl',...
    'InportNames',{'aRowStoreDone','bStoreDone','cReady','cRowDone','indexEnb','cMatDone'},...
    'InportTypes',[hBoolT,hBoolT,hBoolT,hBoolT,hBoolT,hBoolT],...
    'InportRates',slRate*ones(1,6),...
    'OutportNames',{'aRdAddr','rdAddrValid','bRdAddr'},...
    'OutportTypes',[hindexCounterT,hBoolT,hbColCounterT]);
    hRACtlN.setTargetCompReplacementCandidate(true);
    for ii=1:numel(hRACtlN.PirOutputSignals)
        hRACtlN.PirOutputSignals(ii).SimulinkRate=slRate;
    end

    pirelab.instantiateNetwork(hMemCtlN,hRACtlN,hInSigs,hOutSigs,...
    [hRACtlN.Name,'_inst']);

    aRowStoreDoneS=hRACtlN.PirInputSignals(1);
    bStoreDoneS=hRACtlN.PirInputSignals(2);
    cReadyS=hRACtlN.PirInputSignals(3);
    cRowDoneS=hRACtlN.PirInputSignals(4);
    indexEnbS=hRACtlN.PirInputSignals(5);
    cMatDoneS=hRACtlN.PirInputSignals(6);
    aRdAddrS=hRACtlN.PirOutputSignals(1);
    rdAddrValidDelayS=hRACtlN.PirOutputSignals(2);
    bRdAddrS=hRACtlN.PirOutputSignals(3);

    addressLimitS=l_addSignal(hRACtlN,'addressLimit',hBoolT,slRate);
    bRdAddrValidS=l_addSignal(hRACtlN,'bMemoryReadAddressValid',hBoolT,slRate);
    logicalZeroS=l_addSignal(hRACtlN,'logicalZeroS',hBoolT,slRate);
    logicalOneS=l_addSignal(hRACtlN,'logicalOneS',hBoolT,slRate);
    delay1S=l_addSignal(hRACtlN,'delay1',hBoolT,slRate);
    delay2S=l_addSignal(hRACtlN,'delay2',hBoolT,slRate);
    delay3S=l_addSignal(hRACtlN,'delay3',hBoolT,slRate);
    rdAddrValidS=l_addSignal(hRACtlN,'rdAddrValid',hBoolT,slRate);
    switchS=l_addSignal(hRACtlN,'switchS',hBoolT,slRate);
    Switch1S=l_addSignal(hRACtlN,'Switch1S',hBoolT,slRate);
    Switch2S=l_addSignal(hRACtlN,'Switch2S',hBoolT,slRate);
    Switch3S=l_addSignal(hRACtlN,'Switch3S',hBoolT,slRate);
    Switch4S=l_addSignal(hRACtlN,'Switch4S',hBoolT,slRate);
    addressCompareFlagS=l_addSignal(hRACtlN,'addressCompareFlag',hBoolT,slRate);
    Delay1ivS=l_addSignal(hRACtlN,'Delay1ivS',hBoolT,slRate);
    Delay1delOutS=l_addSignal(hRACtlN,'Delay1delOut',hBoolT,slRate);
    Delay1toDelS=l_addSignal(hRACtlN,'Delay1toDel',hBoolT,slRate);
    AmemRdInSigs=[rdAddrValidS,indexEnbS];
    AmemRdOutSigs=aRdAddrS;
    BmemRdInSigs=[rdAddrValidS,indexEnbS,aRdAddrS];
    BmemRdOutSigs=[bRdAddrS,bRdAddrValidS];
    hRdValidInSigs=[delay2S,delay3S,cReadyS,cRowDoneS,switchS];
    hRdValidOutSigs=rdAddrValidS;

    this.matrixAMemoryReadAddress(hRACtlN,AmemRdInSigs,AmemRdOutSigs,slRate,blockInfo);

    this.matrixBMemoryReadAddress(hRACtlN,BmemRdInSigs,BmemRdOutSigs,slRate,blockInfo);

    this.readAddressValid(hRACtlN,hRdValidInSigs,hRdValidOutSigs,slRate,latency,blockInfo);

    pirelab.getConstComp(hRACtlN,...
    logicalZeroS,...
    0,...
    'Constant','on',1,'','','');

    pirelab.getConstComp(hRACtlN,...
    logicalOneS,...
    1,...
    'Constant1','on',0,'','','');

    pirelab.getIntDelayComp(hRACtlN,...
    rdAddrValidS,...
    rdAddrValidDelayS,...
    1,'Delay',...
    false,...
    0,0,[],0,0);

    pirelab.getIntDelayComp(hRACtlN,...
    Switch1S,...
    delay2S,...
    1,'Delay4',...
    false,...
    0,0,[],0,0);

    pirelab.getIntDelayComp(hRACtlN,...
    Switch3S,...
    delay3S,...
    1,'Delay5',...
    false,...
    0,0,[],0,0);

    pirelab.getConstComp(hRACtlN,...
    Delay1ivS,...
    false,...
    'Initial_Val','on',0,'','','');

    pirelab.getSwitchComp(hRACtlN,...
    [Delay1ivS,switchS],...
    Delay1toDelS,...
    cRowDoneS,'reset_in',...
    '~=',0,'Floor','Wrap');

    pirelab.getIntDelayComp(hRACtlN,...
    Delay1toDelS,...
    Delay1delOutS,...
    1,'Delay1_lowered',...
    false,...
    0,0,[],0,0);

    pirelab.getSwitchComp(hRACtlN,...
    [Delay1ivS,Delay1delOutS],...
    delay1S,...
    cRowDoneS,'reset_out',...
    '~=',0,'Floor','Wrap');

    pirelab.getLogicComp(hRACtlN,...
    [addressCompareFlagS,bRdAddrValidS],...
    addressLimitS,...
    'and','AddressLimit');

    pirelab.getSwitchComp(hRACtlN,...
    [logicalOneS,delay1S],...
    switchS,...
    addressLimitS,'Switch',...
    '~=',0,'Floor','Wrap');

    pirelab.getSwitchComp(hRACtlN,...
    [logicalZeroS,Switch2S],...
    Switch1S,...
    cRowDoneS,'Switch1',...
    '~=',0,'Floor','Wrap');

    pirelab.getSwitchComp(hRACtlN,...
    [logicalOneS,delay2S],...
    Switch2S,...
    aRowStoreDoneS,'Switch2',...
    '~=',0,'Floor','Wrap');

    pirelab.getSwitchComp(hRACtlN,...
    [logicalZeroS,Switch4S],...
    Switch3S,...
    cMatDoneS,'Switch3',...
    '~=',0,'Floor','Wrap');

    pirelab.getSwitchComp(hRACtlN,...
    [logicalOneS,delay3S],...
    Switch4S,...
    bStoreDoneS,'Switch4',...
    '~=',0,'Floor','Wrap');

    pirelab.getCompareToValueComp(hRACtlN,...
    bRdAddrS,...
    addressCompareFlagS,...
    '==',bCol-1,...
    'addressCompare',0);

end

function hS=l_addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=-1;
    hS.SimulinkRate=simulinkRate;
end


