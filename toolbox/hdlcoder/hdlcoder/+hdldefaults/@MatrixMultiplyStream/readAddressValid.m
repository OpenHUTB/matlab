function hRdAdValN=readAddressValid(~,hRACtlN,hInSigs,hOutSigs,slRate,latency,blockInfo)



    hBoolT=pir_boolean_t;
    hReadCounterT=pir_fixpt_t(false,4,0);



    hRdAdValN=pirelab.createNewNetwork(...
    'Name','readAddressValid',...
    'InportNames',{'aRowDone','bStoreDone','cReady','cRowDone','AddressLimitValid'},...
    'InportTypes',[hBoolT,hBoolT,hBoolT,hBoolT,hBoolT],...
    'InportRates',slRate*ones(1,5),...
    'OutportNames',{'rdAddrValid'},...
    'OutportTypes',hBoolT);
    hRdAdValN.setTargetCompReplacementCandidate(true);
    for ii=1:numel(hRdAdValN.PirOutputSignals)
        hRdAdValN.PirOutputSignals(ii).SimulinkRate=slRate;
    end

    pirelab.instantiateNetwork(hRACtlN,hRdAdValN,hInSigs,hOutSigs,...
    [hRdAdValN.Name,'_inst']);

    aRowDoneS=hRdAdValN.PirInputSignals(1);
    bStoreDoneS=hRdAdValN.PirInputSignals(2);
    cReadyS=hRdAdValN.PirInputSignals(3);
    cRowDoneS=hRdAdValN.PirInputSignals(4);
    AddressLimitValidS=hRdAdValN.PirInputSignals(5);
    rdAddrValidS=hRdAdValN.PirOutputSignals(1);

    logicalAndFlagS=l_addSignal(hRdAdValN,'logicalAndFlagS',hBoolT,slRate);
    negAddressLimitValidS=l_addSignal(hRdAdValN,'negAddressLimitValidS',hBoolT,slRate);
    negCRowDoneS=l_addSignal(hRdAdValN,'negCRowDoneS',hBoolT,slRate);


    if(latency==0||((blockInfo.aColumnSize==blockInfo.dotProductSize)))
        pirelab.getIntDelayComp(hRdAdValN,...
        logicalAndFlagS,...
        rdAddrValidS,...
        1,'Delay',...
        false,...
        0,0,[],0,0);
    else
        maxCount=latency+1;
        counterEnable=l_addSignal(hRdAdValN,'counterEnable',hBoolT,slRate);
        readCountS=l_addSignal(hRdAdValN,'readCounter',hReadCounterT,slRate);
        compareToConstantS=l_addSignal(hRdAdValN,'compareToConstantS',hBoolT,slRate);

        pirelab.getCounterComp(hRdAdValN,...
        counterEnable,...
        readCountS,...
        'Count limited',1,1,maxCount,0,0,1,0,'readCounter',1);

        pirelab.getLogicComp(hRdAdValN,...
        [logicalAndFlagS,compareToConstantS],...
        counterEnable,...
        'or',sprintf('Logical\nOperator'));

        pirelab.getCompareToValueComp(hRdAdValN,...
        readCountS,...
        compareToConstantS,...
        '>',1,...
        'CompareToOne',0);

        pirelab.getCompareToValueComp(hRdAdValN,...
        readCountS,...
        rdAddrValidS,...
        '==',maxCount,...
        'CompareToMax',0);

    end


    pirelab.getLogicComp(hRdAdValN,...
    [aRowDoneS,bStoreDoneS,cReadyS,negAddressLimitValidS,negCRowDoneS],...
    logicalAndFlagS,...
    'and',sprintf('Logical\nOperator'));

    pirelab.getLogicComp(hRdAdValN,...
    AddressLimitValidS,...
    negAddressLimitValidS,...
    'not',sprintf('Logical\nOperator4'));

    pirelab.getLogicComp(hRdAdValN,...
    cRowDoneS,...
    negCRowDoneS,...
    'not',sprintf('Logical\nOperator6'));

end

function hS=l_addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=-1;
    hS.SimulinkRate=simulinkRate;
end


