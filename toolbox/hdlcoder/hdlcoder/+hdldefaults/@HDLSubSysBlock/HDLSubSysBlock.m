classdef HDLSubSysBlock<hdlimplbase.HDLRecurseIntoSubsystem




    properties
    end


    methods
        function this=HDLSubSysBlock(block)


            this.SuppressValidation=true;


            supportedBlocks={...
            ['simulink/Signal',newline,'Attributes/Data Type',newline,'Conversion',newline,'Inherited'],...
            ['simulink/Sources/Repeating',newline,'Sequence',newline,'Stair'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect',newline,'Increase'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect',newline,'Decrease'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect',newline,'Change'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect Rise',newline,'Positive'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect Rise',newline,'Nonnegative'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect Fall',newline,'Negative'],...
            ['simulink/Logic and Bit',newline,'Operations/Detect Fall',newline,'Nonpositive'],...
            ['simulink/Logic and Bit',newline,'Operations/Interval Test',newline,'Dynamic'],...
'simulink/Discrete/Difference'...
            };
            supportedBlocks=[...
            supportedBlocks,...
            {'hdlsllib/Logic and Bit Operations/Interval Test'},...
            ];



            supportedBlocks=[...
            supportedBlocks,...
            {'hdlmdlgenlib/AssertEq',...
            'hdlmdlgenlib/AssertEqComplex',...
            'hdlmdlgenlib/AssertEqComplexIDC',...
            'hdlmdlgenlib/AssertEqIDC',...
            'hdlmdlgenlib/AssertRelEq',...
            'hdlmdlgenlib/AssertRelEqComplex',...
            'hdlmdlgenlib/AssertRelEqComplexIDC',...
            'hdlmdlgenlib/AssertRelEqIDC',...
            'hdlmdlgenlib/AssertStrEq',...
            'hdlmdlgenlib/AssertULPEq',...
            'hdlmdlgenlib/AssertULPEqComplex',...
            'hdlmdlgenlib/AssertULPEqComplexIDC',...
            'hdlmdlgenlib/AssertULPEqIDC',...
            'hdlmdlgenlib/Bit Concat1',...
            'hdlmdlgenlib/Bit Concat2',...
            'hdlmdlgenlib/Buffer',...
            'hdlmdlgenlib/DelayRT',...
            'hdlmdlgenlib/RTDelay',...
            }];


            supportedBlocks=[...
            supportedBlocks,...
            {'hdlcoderNFPCast/PackFloat',...
            'hdlcoderNFPCast/UnpackFloat',...
            }];


            supportedBlocks=[...
            supportedBlocks,...
            {'hdlstreaminglib/DataBuffer',...
            'hdlstreaminglib/DataBuffer_dsp',...
            'hdlstreaminglib/DataUnbuffer',...
            'hdlstreaminglib/DataUnbuffer_scalar',...
            'hdlstreaminglib/Rate Transition2',...
            }];


            supportedBlocks=[...
            supportedBlocks,...
            {'floatFocUtils/Saturate_Output_Detailed',...
            }];

            if nargin==0
                block='';
            end

            this.init('SupportedBlocks',supportedBlocks,...
            'Block',block,...
            'ArchitectureNames','default');
        end

    end

    methods
    end

    methods
        v_settings=block_validate_settings(this,hC)
        validateNetworkPostConstruction(~,hChildNetwork,~,hdlDriver)
    end


    methods(Hidden)
        v=validateBlock(~,~)
    end

end


