function utilDiodeLogic(voltagePortName,currentPortName,SinPortName,JOutName,SOutName,subsystemName,values,hdlAlgorithmDataType,UinName)




    if nargin<9
        UinName=[];
    end

    Vf=values.Vf;
    Ron=values.Ron;
    Goff=values.Goff;
    Rs=values.Rs;



    VfStr=strcat(hdlAlgorithmDataType,'(',num2str(Vf,17),')');
    I_addStr=strcat(hdlAlgorithmDataType,'(',num2str(Vf*(1-Ron*Goff)/Rs,17),')');
    I_GainStr=strcat(hdlAlgorithmDataType,'(',num2str((Ron-Rs)/Rs,17),')');
    V_GainStr=strcat(hdlAlgorithmDataType,'(',num2str(Goff*(1/Goff-Rs)/Rs,17),')');
    I_fStr=strcat(hdlAlgorithmDataType,'(',num2str(Vf*Goff,17),')');


    hCurrentGain=add_block('simulink/Math Operations/Gain',strcat(subsystemName,'/Gain'),...
    'MakeNameUnique','on',...
    'Gain',I_GainStr,...
    'Position',[-26,-330,24,-290]);
    hCurrentSum=add_block('simulink/Math Operations/Sum',strcat(subsystemName,'/Sum'),...
    'MakeNameUnique','on',...
    'Position',[65,-325,95,-295]);

    hCurrentConst=add_block('simulink/Sources/Constant',strcat(subsystemName,'/Constant'),...
    'MakeNameUnique','on',...
    'SampleTime','-1',...
    'Value',I_addStr,...
    'Position',[-16,-273,24,-247]);
    hVoltageGain=add_block('simulink/Math Operations/Gain',strcat(subsystemName,'/Gain1'),...
    'MakeNameUnique','on',...
    'Gain',V_GainStr,...
    'Position',[134,-83,189,-37]);
    hSwitch=add_block('simulink/Signal Routing/Switch',strcat(subsystemName,'/Switch'),...
    'MakeNameUnique','on',...
    'Criteria','u2 > Threshold',...
    'Threshold','0',...
    'Position',[239,-315,289,-275]);
    hCurrentConstCompare=add_block('simulink/Sources/Constant',strcat(subsystemName,'/Constant1'),...
    'MakeNameUnique','on',...
    'SampleTime','-1',...
    'Value',I_fStr,...
    'Position',[-126,-225,-96,-195]);
    hVoltageConstCompare=add_block('simulink/Sources/Constant',strcat(subsystemName,'/Constant2'),...
    'MakeNameUnique','on',...
    'SampleTime','-1',...
    'Value',VfStr,...
    'Position',[-126,-45,-96,-15]);

    hCurrentGt=add_block('simulink/Logic and Bit Operations/Relational Operator',strcat(subsystemName,'/Relational Operator'),...
    'MakeNameUnique','on',...
    'Operator','>',...
    'Position',[-23,-233,7,-202]);
    hVoltageGt=add_block('simulink/Logic and Bit Operations/Relational Operator',strcat(subsystemName,'/Relational Operator1'),...
    'MakeNameUnique','on',...
    'Operator','>',...
    'Position',[-23,-168,7,-137]);
    hCurrentAnd=add_block('simulink/Logic and Bit Operations/Logical Operator',strcat(subsystemName,'/Logical Operator'),...
    'MakeNameUnique','on',...
    'Operator','AND',...
    'Position',[65,-223,95,-192]);
    hVoltageAnd=add_block('simulink/Logic and Bit Operations/Logical Operator',strcat(subsystemName,'/Logical Operator1'),...
    'MakeNameUnique','on',...
    'Operator','AND',...
    'Position',[65,-158,95,-127]);
    hNot=add_block('simulink/Logic and Bit Operations/Logical Operator',strcat(subsystemName,'/Logical Operator2'),...
    'MakeNameUnique','on',...
    'Operator','NOT',...
    'Position',[-20,-100,10,-70]);
    hOr=add_block('simulink/Logic and Bit Operations/Logical Operator',strcat(subsystemName,'/Logical Operator3'),...
    'MakeNameUnique','on',...
    'Operator','OR',...
    'Position',[140,-213,170,-182]);
    if UinName

        VthStr=strcat(hdlAlgorithmDataType,'(',num2str(values.Vt,17),')');
        hVtAnd=add_block('simulink/Logic and Bit Operations/Logical Operator',strcat(subsystemName,'/Logical Operator1'),...
        'MakeNameUnique','on',...
        'Operator','AND',...
        'Position',[295,-203,325,-172]);
        hVtGt=add_block('simulink/Logic and Bit Operations/Relational Operator',strcat(subsystemName,'/Relational Operator'),...
        'MakeNameUnique','on',...
        'Operator','>',...
        'Position',[225,-163,255,-132]);
        hVtConstCompare=add_block('simulink/Sources/Constant',strcat(subsystemName,'/Constant3'),...
        'MakeNameUnique','on',...
        'Value',VthStr,...
        'SampleTime','-1',...
        'Position',[140,-125,170,-95]);


    end



    portNames={
    currentPortName,strcat(get_param(hCurrentGain,'name'),'/1');...
    strcat(get_param(hCurrentGain,'name'),'/1'),strcat(get_param(hCurrentSum,'name'),'/1');...
    strcat(get_param(hCurrentConst,'name'),'/1'),strcat(get_param(hCurrentSum,'name'),'/2');...
    strcat(get_param(hCurrentSum,'name'),'/1'),strcat(get_param(hSwitch,'name'),'/1');...
    voltagePortName,strcat(get_param(hVoltageGain,'name'),'/1');...
    strcat(get_param(hVoltageGain,'name'),'/1'),strcat(get_param(hSwitch,'name'),'/3');...
    currentPortName,strcat(get_param(hCurrentGt,'name'),'/1');...
    strcat(get_param(hCurrentConstCompare,'name'),'/1'),strcat(get_param(hCurrentGt,'name'),'/2');...
    strcat(get_param(hCurrentGt,'name'),'/1'),strcat(get_param(hCurrentAnd,'name'),'/1');...
    SinPortName,strcat(get_param(hCurrentAnd,'name'),'/2');...
    strcat(get_param(hCurrentAnd,'name'),'/1'),strcat(get_param(hOr,'name'),'/1');...
    voltagePortName,strcat(get_param(hVoltageGt,'name'),'/1');...
    strcat(get_param(hVoltageConstCompare,'name'),'/1'),strcat(get_param(hVoltageGt,'name'),'/2');...
    strcat(get_param(hVoltageGt,'name'),'/1'),strcat(get_param(hVoltageAnd,'name'),'/1');...
    SinPortName,strcat(get_param(hNot,'name'),'/1');...
    strcat(get_param(hNot,'name'),'/1'),strcat(get_param(hVoltageAnd,'name'),'/2');...
    strcat(get_param(hVoltageAnd,'name'),'/1'),strcat(get_param(hOr,'name'),'/2');...
    strcat(get_param(hSwitch,'name'),'/1'),JOutName};

    if UinName
        portNames=[portNames;

        {strcat(get_param(hOr,'name'),'/1'),strcat(get_param(hVtAnd,'name'),'/1');...
        strcat(get_param(hVtConstCompare,'name'),'/1'),strcat(get_param(hVtGt,'name'),'/2');...
        UinName,strcat(get_param(hVtGt,'name'),'/1');...
        strcat(get_param(hVtGt,'name'),'/1'),strcat(get_param(hVtAnd,'name'),'/2');...
        strcat(get_param(hVtAnd,'name'),'/1'),strcat(get_param(hSwitch,'name'),'/2');...
        strcat(get_param(hVtAnd,'name'),'/1'),SOutName}];

    else
        portNames=[portNames;
        {strcat(get_param(hOr,'name'),'/1'),strcat(get_param(hSwitch,'name'),'/2');...
        strcat(get_param(hOr,'name'),'/1'),SOutName}];
    end
    add_line(subsystemName,portNames(:,1),portNames(:,2),'AutoRouting','smart')

end


