function drawSolver(obj)





    clockPos=[1710,1497,1760,1543];
    hTsub=utilAddClock(obj.SampleTime,obj.LocationToDraw,obj.EqnData.GlobalData.dataType,clockPos);

    if obj.EqnData.GlobalData.TotalIters>1
        hrateTransition=add_block('hdlsllib/Signal Attributes/Rate Transition',strcat(obj.LocationToDraw,'/Rate Transition'),...
        'MakeNameUnique','on',...
        'Position',[1790,1504,1845,1536],...
        'OutPortSampleTimeOpt','Multiple of input port sample time',...
        'OutPortSampleTimeMultiple',strcat('1/',num2str(obj.EqnData.GlobalData.TotalIters)),...
        'Integrity','off');

        hCounter=add_block('hdlsllib/Sources/Counter Limited',strcat(obj.LocationToDraw,'/Valid Out Counter'),...
        'MakeNameUnique','on',...
        'tsamp',compactButAccurateNum2Str(obj.EqnData.GlobalData.sampleTime),...
        'uplimit',num2str(obj.EqnData.GlobalData.TotalIters-1),...
        'Position',[0,160,30,190]);



        hCompareToConst=add_block('simulink/Logic and Bit Operations/Compare To Zero',strcat(obj.LocationToDraw,'/Compare To Zero'),...
        'MakeNameUnique','on',...
        'relop','==',...
        'Position',[80,160,110,190]);
    end


    stateUpdatePos=[1865,1378,1925,1442];
    [hStateUpdate,stateUpdateLatency]=utilAddStateUpdate(obj.LocationToDraw,obj.EqnData,obj.EqnName,stateUpdatePos,obj.latencyStrategy);

    fModechart=matlab.internal.feature("SSC2HDLModechart");

    if(fModechart)


        if~isempty(obj.EqnData.QFcn)

            [hUpdateMF,hdataTypeConversionBlk,updateLatency]=utilAddUpdateSubsystem(obj.LocationToDraw,obj.EqnData.QFcn,[45,161,180,229],...
            obj.EqnData.GlobalData.dataType,obj.EqnData.GlobalData.sampleTime,obj.latencyStrategy,obj.EqnData.GlobalData);

        end



        if~isempty(obj.EqnData.CacheFcn)


            [hCacheMF,hdataTypeConversionBlkCache,cacheLatency]=utilAddUpdateSubsystem(obj.LocationToDraw,obj.EqnData.CacheFcn,[45,161,180,229],...
            obj.EqnData.GlobalData.dataType,obj.EqnData.GlobalData.sampleTime,obj.latencyStrategy,obj.EqnData.GlobalData);
        else
            cacheLatency=0;
        end

    end


    [hOutput,~]=utilAddOutput(obj.LocationToDraw,[2090,1380,2150,1440],...
    obj.EqnData.Y,obj.EqnData.GlobalData,obj.latencyStrategy);

    obj.systemLatency=stateUpdateLatency;
    if(fModechart&&~isempty(obj.EqnData.QFcn))
        obj.systemLatency=obj.systemLatency+max(cacheLatency,updateLatency);
    end

    if isempty(obj.hOut)
        obj.hOut=add_block('hdlsllib/Sinks/Terminator',strcat(obj.LocationToDraw,'/Valid Out'),...
        'MakeNameUnique','on');
    end
    if isempty(obj.hIn)
        obj.hIn=add_block('hdlsllib/Sources/Constant',strcat(obj.LocationToDraw,'/Input'),...
        'MakeNameUnique','on',...
        'Value','1',...
        'OutDataTypeStr',obj.EqnData.GlobalData.dataType,...
        'SampleTime',compactButAccurateNum2Str(obj.SampleTime/obj.EqnData.GlobalData.TotalIters),...
        'Position',[70,25,100,55]);

    end



    hInputDelay=add_block('hdlsllib/Discrete/Delay',strcat(obj.LocationToDraw,'/Input Delay'),...
    'MakeNameUnique','on',...
    'DelayLength','1',...
    'Position',[290,378,325,412]);
    hTimeDelay=add_block('hdlsllib/Discrete/Delay',strcat(obj.LocationToDraw,'/t Delay'),...
    'MakeNameUnique','on',...
    'DelayLength','1',...
    'Position',[290,378,325,412]);

    if isempty(obj.hIn)
        obj.hIn=add_block('hdlsllib/Sources/Constant',strcat(obj.LocationToDraw,'/Default input'),...
        'MakeNameUnique','on',...
        'Value',strcat(obj.EqnData.GlobalData.dataType,'(0)'),...
        'SampleTime',compactButAccurateNum2Str(obj.EqnData.GlobalData.sampleTime),...
        'Position',[250,266,310,304]);
    end



    if obj.EqnData.GlobalData.TotalIters>1

        counterInport=3;
        if(fModechart&&obj.EqnData.GlobalData.numQs>0)
            counterInport=5;
        end

        outPorts={strcat(get_param(hTsub,'name'),'/1'),...
        strcat(get_param(hrateTransition,'name'),'/1'),...
        strcat(get_param(hrateTransition,'name'),'/1'),...
        strcat(get_param(hTimeDelay,'name'),'/1'),...
        strcat(get_param(hCounter,'name'),'/1'),...
        strcat(get_param(hCompareToConst,'name'),'/1'),...
        strcat(get_param(hCounter,'name'),'/1')};

        inPorts={strcat(get_param(hrateTransition,'name'),'/1'),...
        strcat(get_param(hStateUpdate,'name'),'/2'),...
        strcat(get_param(hTimeDelay,'name'),'/1'),...
        strcat(get_param(hOutput,'name'),'/3'),...
        strcat(get_param(hCompareToConst,'name'),'/1'),...
        strcat(get_param(obj.hValidOut,'name'),'/1'),...
        strcat(get_param(hStateUpdate,'name'),'/',int2str(counterInport))};
    else

        outPorts={strcat(get_param(hTsub,'name'),'/1'),...
        strcat(get_param(hTsub,'name'),'/1'),...
        strcat(get_param(hTimeDelay,'name'),'/1')};


        inPorts={strcat(get_param(hStateUpdate,'name'),'/2'),...
        strcat(get_param(hTimeDelay,'name'),'/1'),...
        strcat(get_param(hOutput,'name'),'/3')};

    end

    outPorts=[outPorts,{strcat(get_param(obj.hIn,'name'),'/1'),...
    strcat(get_param(obj.hIn,'name'),'/1'),...
    strcat(get_param(hInputDelay,'name'),'/1'),...
    strcat(get_param(hStateUpdate,'name'),'/1'),...
    strcat(get_param(hStateUpdate,'name'),'/2'),...
    strcat(get_param(hOutput,'name'),'/1')}];


    inPorts=[inPorts,{strcat(get_param(hStateUpdate,'name'),'/1'),...
    strcat(get_param(hInputDelay,'name'),'/1'),...
    strcat(get_param(hOutput,'name'),'/1'),...
    strcat(get_param(hOutput,'name'),'/2'),...
    strcat(get_param(hOutput,'name'),'/4'),...
    strcat(get_param(obj.hOut,'name'),'/1')}];

    if(fModechart)

        timesource=hTsub;
        if obj.EqnData.GlobalData.TotalIters>1
            timesource=hrateTransition;
        end

        if~isempty(obj.EqnData.CacheFcn)
            outPorts=[outPorts,{strcat(get_param(hStateUpdate,'name'),'/5'),...
            strcat(get_param(obj.hIn,'name'),'/1'),...
            strcat(get_param(timesource,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/6'),...
            strcat(get_param(hStateUpdate,'name'),'/3'),...
            strcat(get_param(hStateUpdate,'name'),'/4'),...
            strcat(get_param(hCacheMF,'name'),'/1'),...
            strcat(get_param(hdataTypeConversionBlkCache,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/4')}];

            inPorts=[inPorts,{strcat(get_param(hCacheMF,'name'),'/1'),...
            strcat(get_param(hCacheMF,'name'),'/2'),...
            strcat(get_param(hCacheMF,'name'),'/3'),...
            strcat(get_param(hCacheMF,'name'),'/4'),...
            strcat(get_param(hCacheMF,'name'),'/5'),...
            strcat(get_param(hCacheMF,'name'),'/6'),...
            strcat(get_param(hdataTypeConversionBlkCache,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/4'),...
            strcat(get_param(hOutput,'name'),'/6')}];

        elseif(~isempty(obj.EqnData.QFcn))
            outPorts=[outPorts,{strcat(get_param(hStateUpdate,'name'),'/4'),...
            strcat(get_param(hStateUpdate,'name'),'/4')}];

            inPorts=[inPorts,{strcat(get_param(hStateUpdate,'name'),'/4'),...
            strcat(get_param(hOutput,'name'),'/6')}];
        end

        if~isempty(obj.EqnData.QFcn)
            outPorts=[outPorts,{strcat(get_param(hStateUpdate,'name'),'/5'),...
            strcat(get_param(obj.hIn,'name'),'/1'),...
            strcat(get_param(timesource,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/6'),...
            strcat(get_param(hStateUpdate,'name'),'/3'),...
            strcat(get_param(hStateUpdate,'name'),'/4'),...
            strcat(get_param(hUpdateMF,'name'),'/1'),...
            strcat(get_param(hdataTypeConversionBlk,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/3')}];

            inPorts=[inPorts,{strcat(get_param(hUpdateMF,'name'),'/1'),...
            strcat(get_param(hUpdateMF,'name'),'/2'),...
            strcat(get_param(hUpdateMF,'name'),'/3'),...
            strcat(get_param(hUpdateMF,'name'),'/4'),...
            strcat(get_param(hUpdateMF,'name'),'/5'),...
            strcat(get_param(hUpdateMF,'name'),'/6'),...
            strcat(get_param(hdataTypeConversionBlk,'name'),'/1'),...
            strcat(get_param(hStateUpdate,'name'),'/3'),...
            strcat(get_param(hOutput,'name'),'/5')}];

        end
    end

    add_line(obj.LocationToDraw,outPorts,inPorts,'AutoRouting','smart')

    Simulink.BlockDiagram.arrangeSystem(obj.LocationToDraw,'FullLayout','True','Animation','False');

end


