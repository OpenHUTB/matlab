function hXinLoop=utilAddXinLoop(parent,position,startIter,name,dataType)





    hXinLoop=utilAddSubsystem(parent,[name,' In'],position);

    XinName=getfullname(hXinLoop);



    hInX=add_block('hdlsllib/Sources/In1',strcat(XinName,['/',name]),...
    'MakeNameUnique','on',...
    'Position',[80,128,110,142]);
    hInCounter=add_block('hdlsllib/Sources/In1',strcat(XinName,'/Counter'),...
    'MakeNameUnique','on',...
    'Position',[80,128,110,142]);

    hOut=add_block('hdlsllib/Sinks/Out1',strcat(XinName,['/Last ',name]),...
    'MakeNameUnique','on',...
    'Position',[370,188,400,202]);



    hCompare=add_block('simulink/Logic and Bit Operations/Compare To Constant',strcat(XinName,'/Mode Vector In'),...
    'MakeNameUnique','on',...
    'relop','==',...
    'const',num2str(startIter),...
    'Position',[80,160,110,190]);

    hstateSwitchBlk=add_block('hdlsllib/Signal Routing/Switch',strcat(XinName,'/Switch'),...
    'MakeNameUnique','on',...
    'Position',[160,155,210,195],...
    'OutDataTypeStr',dataType,...
    'Criteria','u2 ~= 0');


    hStateDelay=add_block('hdlsllib/Discrete/Delay',strcat(XinName,'/Delay'),...
    'MakeNameUnique','on',...
    'DelayLength','1',...
    'Position',[260,203,295,237]);


    linePorts=cell(6,2);
    linePorts(1,:)={strcat(get_param(hInX,'name'),'/1'),...
    strcat(get_param(hstateSwitchBlk,'name'),'/1')};

    linePorts(2,:)={strcat(get_param(hStateDelay,'name'),'/1'),...
    strcat(get_param(hstateSwitchBlk,'name'),'/3')};

    linePorts(3,:)={strcat(get_param(hInCounter,'name'),'/1'),...
    strcat(get_param(hCompare,'name'),'/1')};

    linePorts(4,:)={strcat(get_param(hCompare,'name'),'/1'),...
    strcat(get_param(hstateSwitchBlk,'name'),'/2')};

    linePorts(5,:)={strcat(get_param(hstateSwitchBlk,'name'),'/1'),...
    strcat(get_param(hStateDelay,'name'),'/1')};

    linePorts(6,:)={strcat(get_param(hstateSwitchBlk,'name'),'/1'),...
    strcat(get_param(hOut,'name'),'/1')};



    add_line(XinName,linePorts(:,1),linePorts(:,2),'AutoRouting','smart')







end
