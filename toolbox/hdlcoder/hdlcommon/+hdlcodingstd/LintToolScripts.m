


classdef LintToolScripts
    methods(Static,Access=public)
        function Lint_spyglass(fid,HDLLintCmd,HDLLintInit,HDLLintTerm,hdlFiles,subsysName)
            if(nargin<1)
                fid=1;
            end
            fprintf(fid,HDLLintInit);
            fprintf(fid,'\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'# Auto-generated project file for SpyGlass tools, from HDL Coder. Manual changes will be over written.\n');
            fprintf(fid,'# (C) 2012-2013 The Mathworks, Inc.\n');
            fprintf(fid,'# Generated by MATLAB ');
            fprintf(fid,'%s',getfield(ver('MATLAB'),'Version'));
            fprintf(fid,' and HDL Coder ');
            fprintf(fid,'%s',getfield(ver('hdlcoder'),'Version'));
            fprintf(fid,' on ');
            fprintf(fid,'%s',datestr(now()));
            fprintf(fid,'\n');
            fprintf(fid,'#\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'\n');
            fprintf(fid,'##Data Import Section\n');
            fprintf(fid,'');
            for itr=1:length(hdlFiles)
                fprintf(fid,HDLLintCmd,hdlFiles{itr});
            end
            fprintf(fid,'\n');
            fprintf(fid,'\n');
            fprintf(fid,'set_option top ');
            fprintf(fid,'%s',subsysName);
            fprintf(fid,'\n');
            fprintf(fid,'\n');
            fprintf(fid,'');
            fprintf(fid,HDLLintTerm);
            fprintf(fid,'\n');
            fprintf(fid,'');
        end

        function Lint_ascentlint(fid,HDLLintCmd,HDLLintInit,HDLLintTerm,hdlFiles,subsysName,target_language,work_dir)
            if(nargin<1)
                fid=1;
            end

            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'# Auto-generated project file for Ascent Lint tools, from HDL Coder. Manual changes will be over written.\n');
            fprintf(fid,'# (C) 2012 The Mathworks, Inc.\n');
            fprintf(fid,'# Generated by MATLAB ');
            fprintf(fid,'%s',getfield(ver('MATLAB'),'Version'));
            fprintf(fid,' and HDL Coder ');
            fprintf(fid,'%s',getfield(ver('hdlcoder'),'Version'));
            fprintf(fid,' on ');
            fprintf(fid,'%s',datestr(now()));
            fprintf(fid,'\n');
            fprintf(fid,'#\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'#  ---------------Ascent Lint Init Section---------------\n');
            fprintf(fid,HDLLintInit);
            fprintf(fid,'\n');
            fprintf(fid,'#  ---------------Ascent Lint Analysis Section-----------\n');
            for itr=1:length(hdlFiles)
                fprintf(fid,HDLLintCmd,work_dir,target_language,hdlFiles{itr});
            end
            fprintf(fid,'\n');
            fprintf(fid,HDLLintTerm,work_dir,subsysName,subsysName,subsysName);
            fprintf(fid,'\n');
            fprintf(fid,'');
        end


        function Lint_hdldesigner(fid,HDLLintCmd,HDLLintInit,HDLLintTerm,hdlFiles,subsysName,target_language,work_dir)%#ok<INUSD>
            if(nargin<1)
                fid=1;
            end

            fprintf(fid,'#  -----------------------------------------------------\n');
            fprintf(fid,'# Auto-generated project file for HDLDesigner Series tools, from HDL Coder. Manual changes will be over written.\n');
            fprintf(fid,'# (C) 2013 The Mathworks, Inc.\n');
            fprintf(fid,'# Generated by MATLAB ');
            fprintf(fid,'%s',getfield(ver('MATLAB'),'Version'));
            fprintf(fid,' and HDL Coder ');
            fprintf(fid,'%s',getfield(ver('hdlcoder'),'Version'));
            fprintf(fid,' on ');
            fprintf(fid,'%s',datestr(now()));
            fprintf(fid,'\n');
            fprintf(fid,'#\n');
            fprintf(fid,'#  ------------------------------------------------------\n');
            fprintf(fid,'#  ---------------HDLDesigner Init Section---------------\n');
            fprintf(fid,HDLLintInit,subsysName,subsysName,subsysName);
            fprintf(fid,'\n');
            fprintf(fid,'#  ---------------HDLDesigner Command Section------------\n');
            for itr=1:length(hdlFiles)
                fprintf(fid,HDLLintCmd,hdlFiles{itr});
            end
            fprintf(fid,'\n');
            fprintf(fid,'#  ---------------HDLDesigner Termination Section--------\n');
            subsysLibName=['lib',(subsysName)];
            fprintf(fid,HDLLintTerm,subsysLibName,subsysLibName,subsysName);
            fprintf(fid,'');
        end

        function Lint_Default(fid,HDLLintCmd,HDLLintInit,HDLLintTerm,hdlFiles,subsysName,target_language)
            if(nargin<1)
                fid=1;
            end
            fprintf(fid,HDLLintInit);
            fprintf(fid,'\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'# Auto-generated project file for generic Lint tools, from HDL Coder. Manual changes will be over written.\n');
            fprintf(fid,'# (C) 2012 The Mathworks, Inc.\n');
            fprintf(fid,'# Generated by MATLAB ');
            fprintf(fid,'%s',getfield(ver('MATLAB'),'Version'));
            fprintf(fid,' and HDL Coder ');
            fprintf(fid,'%s',getfield(ver('hdlcoder'),'Version'));
            fprintf(fid,' on ');
            fprintf(fid,'%s',datestr(now()));
            fprintf(fid,'\n');
            fprintf(fid,'#\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'\n');
            fprintf(fid,'# Set RTL language\n');
            fprintf(fid,'setenv  hdl_lang        "');
            fprintf(fid,'%s',target_language);
            fprintf(fid,'"\n');
            fprintf(fid,'\n');
            fprintf(fid,'# Set top_module name\n');
            fprintf(fid,'setenv  mod_name        "');
            fprintf(fid,'%s',subsysName);
            fprintf(fid,'"\n');
            fprintf(fid,'\n');
            fprintf(fid,'# Script main\n');
            fprintf(fid,'');
            for itr=1:length(hdlFiles)
                fprintf(fid,HDLLintCmd,hdlFiles{itr});
            end
            fprintf(fid,'\n');
            fprintf(fid,'\n');
            fprintf(fid,'');
            fprintf(fid,HDLLintTerm);
            fprintf(fid,'\n');
            fprintf(fid,'');
        end


        function Lint_LEDA(fid,HDLLintInit,HDLLintTerm,subsysName,target_language)
            if(nargin<1)
                fid=1;
            end
            fprintf(fid,'\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'# Auto-generated project file for LEDA tools, from HDL Coder. Manual changes will be over written.\n');
            fprintf(fid,'# (C) 2012 The Mathworks, Inc.\n');
            fprintf(fid,'# Generated by MATLAB ');
            fprintf(fid,'%s',getfield(ver('MATLAB'),'Version'));
            fprintf(fid,' and HDL Coder ');
            fprintf(fid,'%s',getfield(ver('hdlcoder'),'Version'));
            fprintf(fid,' on ');
            fprintf(fid,'%s',datestr(now()));
            fprintf(fid,'\n');
            fprintf(fid,'#\n');
            fprintf(fid,'#  -------------------------------------------------------------------\n');
            fprintf(fid,'\n');
            fprintf(fid,HDLLintInit);
            fprintf(fid,'\n');
            fprintf(fid,'# Set RTL language\n');
            fprintf(fid,'setenv  hdl_lang        "');
            fprintf(fid,'%s',target_language);
            fprintf(fid,'"\n');
            fprintf(fid,'\n');
            fprintf(fid,'# Set top_module name\n');
            fprintf(fid,'setenv  mod_name        "');
            fprintf(fid,'%s',subsysName);
            fprintf(fid,'"\n');
            fprintf(fid,'\n');
            fprintf(fid,'# Script main \n');
            fprintf(fid,HDLLintTerm);
            fprintf(fid,'\n');
            fprintf(fid,'');
        end
    end
end
