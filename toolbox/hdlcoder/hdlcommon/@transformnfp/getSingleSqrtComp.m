function hTopN = getSingleSqrtComp( hN, latency, slRate, denormal )




p = pir( hN.getCtxName );
hTopN = addNetworks( p, denormal );

pipestage = zeros( 1, 28 );
switch latency
case 0
pipestage = zeros( 1, 28 );
case 1
pipestage( 14 ) = 1;
case 2
pipestage( 9 ) = 1;pipestage( 18 ) = 1;
case 3
pipestage( 7 ) = 1;pipestage( 14 ) = 1;
pipestage( 21 ) = 1;
case 4
longItr = [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ];
pipestage = [ 0, 0, 0, longItr, 1 ];
case 5
longItr = [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 ];
pipestage = [ 0, 0, 1, longItr, 1 ];
case 6
longItr = [ 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 ];
pipestage = [ 1, 0, 0, longItr, 1 ];
case 7
longItr = [ 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 ];
pipestage = [ 1, 0, 0, longItr, 1 ];
case 8
longItr = [ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0 ];
pipestage = [ 0, 1, 0, longItr, 1 ];
case 9
longItr = [ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 10
longItr = [ 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 11
longItr = [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 12
longItr = [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 13
longItr = [ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0 ];
pipestage = [ 0, 1, 0, longItr, 1 ];
case 14
longItr = [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 15
longItr = [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 16
longItr = [ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0 ];
pipestage = [ 1, 1, 0, longItr, 1 ];
case 17
longItr = [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 18
longItr = [ 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 19
longItr = [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1 ];
pipestage = [ 1, 0, 1, longItr, 1 ];
case 20
longItr = [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 21
longItr = [ 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 22
longItr = [ 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 23
longItr = [ 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 24
longItr = [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 25
longItr = [ 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 26
longItr = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 27
longItr = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
case 28
longItr = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
otherwise 
longItr = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];
pipestage = [ 1, 1, 1, longItr, 1 ];
assert( false, [ 'Floating-point RSqrt: Illegal latency = ', num2str( latency ) ] );
end 
createNetworks( p, denormal, pipestage, latency, slRate );
end 

function hTopN = addNetworks( p, denormal )
hN = p.addNetwork;
hN.Name = 'SQRT_Single';
hN.FullPath = 'SQRT_Single';
hTopN = hN;
hN = p.addNetwork;
hN.Name = 'InitCycles';
hN.FullPath = 'SQRT_Single/InitCycles';
hN = p.addNetwork;
hN.Name = 'InitCycles';
hN.FullPath = 'SQRT_Single/InitCycles/InitCycles';
hN = p.addNetwork;
hN.Name = 'appendMantissaAndCorrectExponent';
hN.FullPath = 'SQRT_Single/appendMantissaAndCorrectExponent';
hN = p.addNetwork;
hN.Name = 'sqrt_Inf_or_NaN';
hN.FullPath = 'SQRT_Single/sqrt_Inf_or_NaN';
hN = p.addNetwork;
hN.Name = 'sqrt_Long';
hN.FullPath = 'SQRT_Single/sqrt_Long';
hN = p.addNetwork;
hN.Name = 'Rounding';
hN.FullPath = 'SQRT_Single/sqrt_Long/Rounding';
hN = p.addNetwork;
hN.Name = 'Subsystem';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem';
hN = p.addNetwork;
hN.Name = 'Subsystem1';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem1';
hN = p.addNetwork;
hN.Name = 'Subsystem2';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem2';
hN = p.addNetwork;
hN.Name = 'Subsystem3';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem3';
hN = p.addNetwork;
hN.Name = 'Subsystem4';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem4';
hN = p.addNetwork;
hN.Name = 'Subsystem5';
hN.FullPath = 'SQRT_Single/sqrt_Long/Subsystem5';
hN = p.addNetwork;
hN.Name = 'sqrt_Long_get_digit';
hN.FullPath = 'SQRT_Single/sqrt_Long/sqrt_Long_get_digit';
hN = p.addNetwork;
hN.Name = 'sqrt_Normalize';
hN.FullPath = 'SQRT_Single/sqrt_Long/sqrt_Normalize';
if ( denormal )
hN = p.addNetwork;
hN.Name = 'sqrt_Normalize_Denormals';
hN.FullPath = 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Denormals';
else 
hN = p.addNetwork;
hN.Name = 'sqrt_Normalize_Normals';
hN.FullPath = 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Normals';
end 
end 

function createNetworks( p, denormal, pipestage, latency, slRate )
if ( denormal )
hN_n38 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Denormals' );
createNetwork_n38_denorm( p, hN_n38, pipestage, slRate );
hN_n38.addComment( 'handling denormalized signals' );
else 
hN_n38 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Normals' );
createNetwork_n38( p, hN_n38, pipestage, slRate );
end 
hN_n37 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize' );
createNetwork_n37( p, hN_n37, denormal, slRate );
hN_n36 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Long_get_digit' );
createNetwork_n36( p, hN_n36, slRate );
hN_n32 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem5' );
createNetwork_n32( p, hN_n32, pipestage, slRate );
hN_n27 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem4' );
createNetwork_n27( p, hN_n27, pipestage, slRate );
hN_n22 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem3' );
createNetwork_n22( p, hN_n22, pipestage, slRate );
hN_n17 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem2' );
createNetwork_n17( p, hN_n17, pipestage, slRate );
hN_n12 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem1' );
createNetwork_n12( p, hN_n12, pipestage, slRate );
hN_n7 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem' );
createNetwork_n7( p, hN_n7, pipestage, slRate );
hN_n6 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Rounding' );
createNetwork_n6( p, hN_n6, pipestage, slRate );
hN_n5 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long' );
createNetwork_n5( p, hN_n5, pipestage, slRate );
hN_n4 = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Inf_or_NaN' );
createNetwork_n4( p, hN_n4, slRate );
hN_n3 = p.findNetwork( 'fullname', 'SQRT_Single/appendMantissaAndCorrectExponent' );
createNetwork_n3( p, hN_n3, slRate );
hN_n2 = p.findNetwork( 'fullname', 'SQRT_Single/InitCycles/InitCycles' );
createNetwork_n2( p, hN_n2, latency, slRate );
hN_n1 = p.findNetwork( 'fullname', 'SQRT_Single/InitCycles' );
createNetwork_n1( p, hN_n1, slRate );
hN_n0 = p.findNetwork( 'fullname', 'SQRT_Single' );
createNetwork_n0( p, hN_n0, denormal, pipestage, slRate );
end 

function hN = createNetwork_n38_denorm( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_sfixpt_t( 28, 0 );
pirTyp12 = pir_sfixpt_t( 32, 0 );
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 2, 0 );
pirTyp9 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp6 = pir_ufixpt_t( 25, 0 );
pirTyp8 = pir_ufixpt_t( 28, 0 );
pirTyp13 = pir_ufixpt_t( 32, 0 );
pirTyp7 = pir_ufixpt_t( 4, 0 );
pirTyp14 = pir_ufixpt_t( 8, 0 );
pirTyp10 = pir_ufixpt_t( 9, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 1, 0 );
nt3 = numerictype( 0, 2, 0 );
nt4 = numerictype( 0, 24, 0 );
nt5 = numerictype( 0, 25, 0 );
nt1 = numerictype( 0, 8, 0 );




hN.addInputPort( 'exp_a_cor' );
exp_a_cor_s0 = addSignal( hN, 'exp_a_cor', pirTyp1, slRate1 );
exp_a_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_a_cor' );
mant_a_cor_s1 = addSignal( hN, 'mant_a_cor', pirTyp2, slRate1 );
mant_a_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Exponent' );
Delay1_out1_s18 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay1_out1_s18.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_a_norm' );
reinterpretcast_mant_a_tmp1_N_____out1_s29 = addSignal( hN, 'reinterpretcast(mant_a_tmp1, n... : _out1', pirTyp3, slRate1 );
reinterpretcast_mant_a_tmp1_N_____out1_s29.addReceiver( hN, 1 );

x0_out1_s2 = addSignal( hN, '0_out1', pirTyp4, slRate1 );
x1_out1_s3 = addSignal( hN, '1_out1', pirTyp4, slRate1 );
x2_out1_s4 = addSignal( hN, '2_out1', pirTyp5, slRate1 );
Add_out1_s5 = addSignal( hN, 'Add_out1', pirTyp5, slRate1 );
BitConcat_out1_s6 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitConcat1_out1_s7 = addSignal( hN, 'Bit Concat1_out1', pirTyp2, slRate1 );
BitConcat2_out1_s8 = addSignal( hN, 'Bit Concat2_out1', pirTyp7, slRate1 );
BitConcat3_out1_s9 = addSignal( hN, 'Bit Concat3_out1', pirTyp8, slRate1 );
BitSlice_out1_s10 = addSignal( hN, 'Bit Slice_out1', pirTyp5, slRate1 );
BitSlice1_out1_s11 = addSignal( hN, 'Bit Slice1_out1', pirTyp9, slRate1 );
BitSlice2_out1_s12 = addSignal( hN, 'Bit Slice2_out1', pirTyp4, slRate1 );
BitSlice3_out1_s13 = addSignal( hN, 'Bit Slice3_out1', pirTyp4, slRate1 );
BitSlice1_out1_s14 = addSignal( hN, 'BitSlice1_out1', pirTyp1, slRate1 );
C_out1_s15 = addSignal( hN, 'C_out1', pirTyp1, slRate1 );
Constant_out1_s16 = addSignal( hN, 'Constant_out1', pirTyp5, slRate1 );
DTC_out1_s17 = addSignal( hN, 'DTC_out1', pirTyp10, slRate1 );
Delay2_out1_s19 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay29_out1_s20 = addSignal( hN, 'Delay29_out1', pirTyp1, slRate1 );
Delay3_out1_s21 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
Delay30_out1_s22 = addSignal( hN, 'Delay30_out1', pirTyp6, slRate1 );
FindFirst1_out1_s23 = addSignal( hN, 'FindFirst1_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s24 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
bitsll_mant_a_tmp_Shift_lengt____out1_s25 = addSignal( hN, 'bitsll(mant_a_tmp, shift_lengt..._out1', pirTyp6, slRate1 );
exp_a_cor_CfType_ExponentBia____out1_s26 = addSignal( hN, 'exp_a_cor + cfType.ExponentBia..._out1', pirTyp10, slRate1 );
exp_a_cor_CfType_ExponentBia____out1_s27 = addSignal( hN, 'exp_a_cor + cfType.ExponentBia... _out1', pirTyp10, slRate1 );
ifBitget_exp_a_norm_1__out1_s28 = addSignal( hN, 'if bitget(exp_a_norm, 1)_out1', pirTyp1, slRate1 );
shift_length_Uint8_1__out1_s30 = addSignal( hN, 'shift_length + uint8(1)_out1', pirTyp1, slRate1 );
uint8_1__out1_s31 = addSignal( hN, 'uint8(1) _out1', pirTyp1, slRate1 );
BitSlice1_out1_s33 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s34 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
BitSlice4_out1_s35 = addSignal( hN, 'Bit Slice4_out1', pirTyp1, slRate1 );
Bottom8Bits_out1_s36 = addSignal( hN, 'Bottom 8 bits_out1', pirTyp1, slRate1 );
Middle8Bits_out1_s37 = addSignal( hN, 'Middle 8 bits_out1', pirTyp1, slRate1 );
Middle8Bits_out2_s38 = addSignal( hN, 'Middle 8 bits_out2', pirTyp11, slRate1 );
Switch33_out1_s39 = addSignal( hN, 'Switch33_out1', pirTyp1, slRate1 );
Switch34_out1_s40 = addSignal( hN, 'Switch34_out1', pirTyp1, slRate1 );
Top8Bits_out1_s41 = addSignal( hN, 'Top 8 bits_out1', pirTyp1, slRate1 );
Top8Bits_out2_s42 = addSignal( hN, 'Top 8 bits_out2', pirTyp11, slRate1 );
BitSlice_out1_s43 = addSignal( hN, 'Bit Slice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s44 = addSignal( hN, 'Bit Slice1_out1', pirTyp4, slRate1 );
BitSlice2_out1_s45 = addSignal( hN, 'Bit Slice2_out1', pirTyp4, slRate1 );
BitSlice3_out1_s46 = addSignal( hN, 'Bit Slice3_out1', pirTyp4, slRate1 );
BitSlice5_out1_s47 = addSignal( hN, 'Bit Slice5_out1', pirTyp4, slRate1 );
BitSlice6_out1_s48 = addSignal( hN, 'Bit Slice6_out1', pirTyp4, slRate1 );
BitSlice7_out1_s49 = addSignal( hN, 'Bit Slice7_out1', pirTyp4, slRate1 );
BitSlice8_out1_s50 = addSignal( hN, 'Bit Slice8_out1', pirTyp4, slRate1 );
Constant_out1_s51 = addSignal( hN, 'Constant_out1', pirTyp1, slRate1 );
Constant1_out1_s52 = addSignal( hN, 'Constant1_out1', pirTyp1, slRate1 );
Constant2_out1_s53 = addSignal( hN, 'Constant2_out1', pirTyp1, slRate1 );
Constant3_out1_s54 = addSignal( hN, 'Constant3_out1', pirTyp1, slRate1 );
Constant4_out1_s55 = addSignal( hN, 'Constant4_out1', pirTyp1, slRate1 );
Constant5_out1_s56 = addSignal( hN, 'Constant5_out1', pirTyp1, slRate1 );
Constant6_out1_s57 = addSignal( hN, 'Constant6_out1', pirTyp1, slRate1 );
Constant7_out1_s58 = addSignal( hN, 'Constant7_out1', pirTyp1, slRate1 );
Constant8_out1_s59 = addSignal( hN, 'Constant8_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s60 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
LogicalOperator1_out1_s61 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp11, slRate1 );
LogicalOperator2_out1_s62 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp11, slRate1 );
LogicalOperator3_out1_s63 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp11, slRate1 );
Switch_out1_s64 = addSignal( hN, 'Switch_out1', pirTyp1, slRate1 );
Switch1_out1_s65 = addSignal( hN, 'Switch1_out1', pirTyp1, slRate1 );
Switch10_out1_s66 = addSignal( hN, 'Switch10_out1', pirTyp1, slRate1 );
Switch2_out1_s67 = addSignal( hN, 'Switch2_out1', pirTyp1, slRate1 );
Switch3_out1_s68 = addSignal( hN, 'Switch3_out1', pirTyp1, slRate1 );
Switch4_out1_s69 = addSignal( hN, 'Switch4_out1', pirTyp1, slRate1 );
Switch5_out1_s70 = addSignal( hN, 'Switch5_out1', pirTyp1, slRate1 );
Switch6_out1_s71 = addSignal( hN, 'Switch6_out1', pirTyp1, slRate1 );
Switch7_out1_s72 = addSignal( hN, 'Switch7_out1', pirTyp1, slRate1 );
Switch8_out1_s73 = addSignal( hN, 'Switch8_out1', pirTyp1, slRate1 );
Switch9_out1_s74 = addSignal( hN, 'Switch9_out1', pirTyp1, slRate1 );
BitSlice10_out1_s75 = addSignal( hN, 'Bit Slice10_out1', pirTyp4, slRate1 );
BitSlice11_out1_s76 = addSignal( hN, 'Bit Slice11_out1', pirTyp4, slRate1 );
BitSlice12_out1_s77 = addSignal( hN, 'Bit Slice12_out1', pirTyp4, slRate1 );
BitSlice13_out1_s78 = addSignal( hN, 'Bit Slice13_out1', pirTyp4, slRate1 );
BitSlice14_out1_s79 = addSignal( hN, 'Bit Slice14_out1', pirTyp4, slRate1 );
BitSlice15_out1_s80 = addSignal( hN, 'Bit Slice15_out1', pirTyp4, slRate1 );
BitSlice16_out1_s81 = addSignal( hN, 'Bit Slice16_out1', pirTyp4, slRate1 );
BitSlice9_out1_s82 = addSignal( hN, 'Bit Slice9_out1', pirTyp4, slRate1 );
Constant_out1_s83 = addSignal( hN, 'Constant_out1', pirTyp1, slRate1 );
Constant10_out1_s84 = addSignal( hN, 'Constant10_out1', pirTyp1, slRate1 );
Constant11_out1_s85 = addSignal( hN, 'Constant11_out1', pirTyp1, slRate1 );
Constant12_out1_s86 = addSignal( hN, 'Constant12_out1', pirTyp1, slRate1 );
Constant13_out1_s87 = addSignal( hN, 'Constant13_out1', pirTyp1, slRate1 );
Constant14_out1_s88 = addSignal( hN, 'Constant14_out1', pirTyp1, slRate1 );
Constant15_out1_s89 = addSignal( hN, 'Constant15_out1', pirTyp1, slRate1 );
Constant16_out1_s90 = addSignal( hN, 'Constant16_out1', pirTyp1, slRate1 );
Constant9_out1_s91 = addSignal( hN, 'Constant9_out1', pirTyp1, slRate1 );
LogicalOperator12_out1_s92 = addSignal( hN, sprintf( 'Logical\nOperator12_out1' ), pirTyp11, slRate1 );
LogicalOperator13_out1_s93 = addSignal( hN, sprintf( 'Logical\nOperator13_out1' ), pirTyp11, slRate1 );
LogicalOperator14_out1_s94 = addSignal( hN, sprintf( 'Logical\nOperator14_out1' ), pirTyp11, slRate1 );
LogicalOperator4_out1_s95 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp11, slRate1 );
LogicalOperator5_out1_s96 = addSignal( hN, sprintf( 'Logical\nOperator5_out1' ), pirTyp11, slRate1 );
LogicalOperator6_out1_s97 = addSignal( hN, sprintf( 'Logical\nOperator6_out1' ), pirTyp11, slRate1 );
LogicalOperator7_out1_s98 = addSignal( hN, sprintf( 'Logical\nOperator7_out1' ), pirTyp11, slRate1 );
Switch11_out1_s99 = addSignal( hN, 'Switch11_out1', pirTyp1, slRate1 );
Switch12_out1_s100 = addSignal( hN, 'Switch12_out1', pirTyp1, slRate1 );
Switch13_out1_s101 = addSignal( hN, 'Switch13_out1', pirTyp1, slRate1 );
Switch14_out1_s102 = addSignal( hN, 'Switch14_out1', pirTyp1, slRate1 );
Switch15_out1_s103 = addSignal( hN, 'Switch15_out1', pirTyp1, slRate1 );
Switch16_out1_s104 = addSignal( hN, 'Switch16_out1', pirTyp1, slRate1 );
Switch17_out1_s105 = addSignal( hN, 'Switch17_out1', pirTyp1, slRate1 );
Switch18_out1_s106 = addSignal( hN, 'Switch18_out1', pirTyp1, slRate1 );
Switch19_out1_s107 = addSignal( hN, 'Switch19_out1', pirTyp1, slRate1 );
Switch20_out1_s108 = addSignal( hN, 'Switch20_out1', pirTyp1, slRate1 );
Switch21_out1_s109 = addSignal( hN, 'Switch21_out1', pirTyp1, slRate1 );
BitSlice10_out1_s110 = addSignal( hN, 'Bit Slice10_out1', pirTyp4, slRate1 );
BitSlice11_out1_s111 = addSignal( hN, 'Bit Slice11_out1', pirTyp4, slRate1 );
BitSlice12_out1_s112 = addSignal( hN, 'Bit Slice12_out1', pirTyp4, slRate1 );
BitSlice13_out1_s113 = addSignal( hN, 'Bit Slice13_out1', pirTyp4, slRate1 );
BitSlice14_out1_s114 = addSignal( hN, 'Bit Slice14_out1', pirTyp4, slRate1 );
BitSlice15_out1_s115 = addSignal( hN, 'Bit Slice15_out1', pirTyp4, slRate1 );
BitSlice16_out1_s116 = addSignal( hN, 'Bit Slice16_out1', pirTyp4, slRate1 );
BitSlice9_out1_s117 = addSignal( hN, 'Bit Slice9_out1', pirTyp4, slRate1 );
Constant_out1_s118 = addSignal( hN, 'Constant_out1', pirTyp1, slRate1 );
Constant10_out1_s119 = addSignal( hN, 'Constant10_out1', pirTyp1, slRate1 );
Constant11_out1_s120 = addSignal( hN, 'Constant11_out1', pirTyp1, slRate1 );
Constant12_out1_s121 = addSignal( hN, 'Constant12_out1', pirTyp1, slRate1 );
Constant13_out1_s122 = addSignal( hN, 'Constant13_out1', pirTyp1, slRate1 );
Constant14_out1_s123 = addSignal( hN, 'Constant14_out1', pirTyp1, slRate1 );
Constant15_out1_s124 = addSignal( hN, 'Constant15_out1', pirTyp1, slRate1 );
Constant16_out1_s125 = addSignal( hN, 'Constant16_out1', pirTyp1, slRate1 );
Constant9_out1_s126 = addSignal( hN, 'Constant9_out1', pirTyp1, slRate1 );
LogicalOperator12_out1_s127 = addSignal( hN, sprintf( 'Logical\nOperator12_out1' ), pirTyp11, slRate1 );
LogicalOperator13_out1_s128 = addSignal( hN, sprintf( 'Logical\nOperator13_out1' ), pirTyp11, slRate1 );
LogicalOperator14_out1_s129 = addSignal( hN, sprintf( 'Logical\nOperator14_out1' ), pirTyp11, slRate1 );
LogicalOperator4_out1_s130 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp11, slRate1 );
LogicalOperator5_out1_s131 = addSignal( hN, sprintf( 'Logical\nOperator5_out1' ), pirTyp11, slRate1 );
LogicalOperator6_out1_s132 = addSignal( hN, sprintf( 'Logical\nOperator6_out1' ), pirTyp11, slRate1 );
LogicalOperator7_out1_s133 = addSignal( hN, sprintf( 'Logical\nOperator7_out1' ), pirTyp11, slRate1 );
Switch11_out1_s134 = addSignal( hN, 'Switch11_out1', pirTyp1, slRate1 );
Switch12_out1_s135 = addSignal( hN, 'Switch12_out1', pirTyp1, slRate1 );
Switch13_out1_s136 = addSignal( hN, 'Switch13_out1', pirTyp1, slRate1 );
Switch14_out1_s137 = addSignal( hN, 'Switch14_out1', pirTyp1, slRate1 );
Switch15_out1_s138 = addSignal( hN, 'Switch15_out1', pirTyp1, slRate1 );
Switch16_out1_s139 = addSignal( hN, 'Switch16_out1', pirTyp1, slRate1 );
Switch17_out1_s140 = addSignal( hN, 'Switch17_out1', pirTyp1, slRate1 );
Switch18_out1_s141 = addSignal( hN, 'Switch18_out1', pirTyp1, slRate1 );
Switch19_out1_s142 = addSignal( hN, 'Switch19_out1', pirTyp1, slRate1 );
Switch20_out1_s143 = addSignal( hN, 'Switch20_out1', pirTyp1, slRate1 );
Switch21_out1_s144 = addSignal( hN, 'Switch21_out1', pirTyp1, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s51,  ...
fi( 0, nt1, fiMath1, 'hex', '18' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s52,  ...
fi( 0, nt1, fiMath1, 'hex', '17' ),  ...
'Constant1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant2_out1_s53,  ...
fi( 0, nt1, fiMath1, 'hex', '16' ),  ...
'Constant2', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant3_out1_s54,  ...
fi( 0, nt1, fiMath1, 'hex', '15' ),  ...
'Constant3', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant4_out1_s55,  ...
fi( 0, nt1, fiMath1, 'hex', '14' ),  ...
'Constant4', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant5_out1_s56,  ...
fi( 0, nt1, fiMath1, 'hex', '13' ),  ...
'Constant5', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant6_out1_s57,  ...
fi( 0, nt1, fiMath1, 'hex', '12' ),  ...
'Constant6', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant7_out1_s58,  ...
fi( 0, nt1, fiMath1, 'hex', '11' ),  ...
'Constant7', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant8_out1_s59,  ...
fi( 0, nt1, fiMath1, 'hex', '10' ),  ...
'Constant8', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s83,  ...
fi( 0, nt1, fiMath1, 'hex', '18' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant10_out1_s84,  ...
fi( 0, nt1, fiMath1, 'hex', '0e' ),  ...
'Constant10', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant11_out1_s85,  ...
fi( 0, nt1, fiMath1, 'hex', '0d' ),  ...
'Constant11', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant12_out1_s86,  ...
fi( 0, nt1, fiMath1, 'hex', '0c' ),  ...
'Constant12', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant13_out1_s87,  ...
fi( 0, nt1, fiMath1, 'hex', '0b' ),  ...
'Constant13', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant14_out1_s88,  ...
fi( 0, nt1, fiMath1, 'hex', '0a' ),  ...
'Constant14', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant15_out1_s89,  ...
fi( 0, nt1, fiMath1, 'hex', '09' ),  ...
'Constant15', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant16_out1_s90,  ...
fi( 0, nt1, fiMath1, 'hex', '08' ),  ...
'Constant16', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant9_out1_s91,  ...
fi( 0, nt1, fiMath1, 'hex', '0f' ),  ...
'Constant9', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s118,  ...
fi( 0, nt1, fiMath1, 'hex', '18' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant10_out1_s119,  ...
fi( 0, nt1, fiMath1, 'hex', '06' ),  ...
'Constant10', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant11_out1_s120,  ...
fi( 0, nt1, fiMath1, 'hex', '05' ),  ...
'Constant11', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant12_out1_s121,  ...
fi( 0, nt1, fiMath1, 'hex', '04' ),  ...
'Constant12', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant13_out1_s122,  ...
fi( 0, nt1, fiMath1, 'hex', '03' ),  ...
'Constant13', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant14_out1_s123,  ...
fi( 0, nt1, fiMath1, 'hex', '02' ),  ...
'Constant14', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant15_out1_s124,  ...
fi( 0, nt1, fiMath1, 'hex', '01' ),  ...
'Constant15', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant16_out1_s125,  ...
fi( 0, nt1, fiMath1, 'hex', '00' ),  ...
'Constant16', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant9_out1_s126,  ...
fi( 0, nt1, fiMath1, 'hex', '07' ),  ...
'Constant9', 'on', 0, '', '', '' );

pirelab.getWireComp( hN,  ...
Switch10_out1_s66,  ...
Bottom8Bits_out1_s36,  ...
'Bottom 8 bits_out1' );

pirelab.getWireComp( hN,  ...
Switch13_out1_s101,  ...
Middle8Bits_out1_s37,  ...
'Middle 8 bits_out1' );

pirelab.getWireComp( hN,  ...
LogicalOperator12_out1_s92,  ...
Middle8Bits_out2_s38,  ...
'Middle 8 bits_out2' );

pirelab.getWireComp( hN,  ...
Switch13_out1_s136,  ...
Top8Bits_out1_s41,  ...
'Top 8 bits_out1' );

pirelab.getWireComp( hN,  ...
LogicalOperator12_out1_s127,  ...
Top8Bits_out2_s42,  ...
'Top 8 bits_out2' );


pirelab.getConstComp( hN,  ...
x0_out1_s2,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s3,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x2_out1_s4,  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
'2', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s15,  ...
fi( 0, nt1, fiMath1, 'hex', '7f' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s16,  ...
fi( 0, nt3, fiMath1, 'hex', '1' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
BitSlice1_out1_s14,  ...
Delay1_out1_s18,  ...
pipestage( 3 ), 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_a_cor_s1,  ...
Delay2_out1_s19,  ...
pipestage( 2 ), 'Delay2',  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
ifBitget_exp_a_norm_1__out1_s28,  ...
Delay29_out1_s20,  ...
pipestage( 3 ), 'Delay29',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_a_cor_s0,  ...
Delay3_out1_s21,  ...
pipestage( 2 ), 'Delay3',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
BitConcat_out1_s6,  ...
Delay30_out1_s22,  ...
pipestage( 3 ), 'Delay30',  ...
fi( 0, nt5, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getConstComp( hN,  ...
uint8_1__out1_s31,  ...
fi( 0, nt1, fiMath1, 'hex', '01' ),  ...
'uint8(1) ', 'on', 0, '', '', '' );

pirelab.getWireComp( hN,  ...
Switch34_out1_s40,  ...
FindFirst1_out1_s23,  ...
'FindFirst1_out1' );


pirelab.getAddComp( hN,  ...
[ BitSlice_out1_s10, Constant_out1_s16 ],  ...
Add_out1_s5,  ...
'Floor', 'Wrap', 'Add', pirTyp12, '+-' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s2, Delay2_out1_s19 ],  ...
BitConcat_out1_s6,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ BitSlice1_out1_s11, x1_out1_s3 ],  ...
BitConcat1_out1_s7,  ...
'Bit Concat1' );


pirelab.getBitConcatComp( hN,  ...
[ x2_out1_s4, Add_out1_s5 ],  ...
BitConcat2_out1_s8,  ...
'Bit Concat2' );


pirelab.getBitConcatComp( hN,  ...
[ BitConcat2_out1_s8, BitConcat1_out1_s7 ],  ...
BitConcat3_out1_s9,  ...
'Bit Concat3' );


pirelab.getBitSliceComp( hN,  ...
bitsll_mant_a_tmp_Shift_lengt____out1_s25,  ...
BitSlice_out1_s10,  ...
24, 23, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_mant_a_tmp_Shift_lengt____out1_s25,  ...
BitSlice1_out1_s11,  ...
22, 0, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Delay3_out1_s21,  ...
BitSlice2_out1_s12,  ...
0, 0, 'Bit Slice2' );


pirelab.getBitSliceComp( hN,  ...
FindFirst1_out1_s23,  ...
BitSlice3_out1_s13,  ...
0, 0, 'Bit Slice3' );


pirelab.getBitSliceComp( hN,  ...
DTC_out1_s17,  ...
BitSlice1_out1_s14,  ...
8, 1, 'BitSlice1' );


pirelab.getDTCComp( hN,  ...
exp_a_cor_CfType_ExponentBia____out1_s27,  ...
DTC_out1_s17,  ...
'Floor', 'Wrap', 'RWV', 'DTC' );


pirelab.getBitSliceComp( hN,  ...
Delay2_out1_s19,  ...
BitSlice1_out1_s33,  ...
15, 8, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Delay2_out1_s19,  ...
BitSlice2_out1_s34,  ...
23, 16, 'Bit Slice2' );


pirelab.getBitSliceComp( hN,  ...
Delay2_out1_s19,  ...
BitSlice4_out1_s35,  ...
7, 0, 'Bit Slice4' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice_out1_s43,  ...
0, 0, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice1_out1_s44,  ...
1, 1, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice2_out1_s45,  ...
2, 2, 'Bit Slice2' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice3_out1_s46,  ...
3, 3, 'Bit Slice3' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice5_out1_s47,  ...
4, 4, 'Bit Slice5' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice6_out1_s48,  ...
5, 5, 'Bit Slice6' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice7_out1_s49,  ...
6, 6, 'Bit Slice7' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s35,  ...
BitSlice8_out1_s50,  ...
7, 7, 'Bit Slice8' );


pirelab.getLogicComp( hN,  ...
[ BitSlice3_out1_s46, BitSlice2_out1_s45 ],  ...
LogicalOperator_out1_s60,  ...
'or', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice8_out1_s50, BitSlice7_out1_s49 ],  ...
LogicalOperator1_out1_s61,  ...
'or', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s61, LogicalOperator3_out1_s63 ],  ...
LogicalOperator2_out1_s62,  ...
'or', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice6_out1_s48, BitSlice5_out1_s47 ],  ...
LogicalOperator3_out1_s63,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getSwitchComp( hN,  ...
[ Constant1_out1_s52, Constant_out1_s51 ],  ...
Switch_out1_s64,  ...
BitSlice_out1_s43, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant2_out1_s53, Switch_out1_s64 ],  ...
Switch1_out1_s65,  ...
BitSlice1_out1_s44, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch9_out1_s74, Switch4_out1_s69 ],  ...
Switch10_out1_s66,  ...
LogicalOperator2_out1_s62, 'Switch10',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant3_out1_s54, Constant_out1_s51 ],  ...
Switch2_out1_s67,  ...
BitSlice2_out1_s45, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant4_out1_s55, Switch2_out1_s67 ],  ...
Switch3_out1_s68,  ...
BitSlice3_out1_s46, 'Switch3',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch3_out1_s68, Switch1_out1_s65 ],  ...
Switch4_out1_s69,  ...
LogicalOperator_out1_s60, 'Switch4',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant5_out1_s56, Constant_out1_s51 ],  ...
Switch5_out1_s70,  ...
BitSlice5_out1_s47, 'Switch5',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant6_out1_s57, Switch5_out1_s70 ],  ...
Switch6_out1_s71,  ...
BitSlice6_out1_s48, 'Switch6',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant7_out1_s58, Constant_out1_s51 ],  ...
Switch7_out1_s72,  ...
BitSlice7_out1_s49, 'Switch7',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant8_out1_s59, Switch7_out1_s72 ],  ...
Switch8_out1_s73,  ...
BitSlice8_out1_s50, 'Switch8',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch8_out1_s73, Switch6_out1_s71 ],  ...
Switch9_out1_s74,  ...
LogicalOperator1_out1_s61, 'Switch9',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice10_out1_s75,  ...
1, 1, 'Bit Slice10' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice11_out1_s76,  ...
2, 2, 'Bit Slice11' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice12_out1_s77,  ...
3, 3, 'Bit Slice12' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice13_out1_s78,  ...
4, 4, 'Bit Slice13' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice14_out1_s79,  ...
5, 5, 'Bit Slice14' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice15_out1_s80,  ...
6, 6, 'Bit Slice15' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice16_out1_s81,  ...
7, 7, 'Bit Slice16' );


pirelab.getBitSliceComp( hN,  ...
BitSlice1_out1_s33,  ...
BitSlice9_out1_s82,  ...
0, 0, 'Bit Slice9' );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator6_out1_s97, LogicalOperator13_out1_s93 ],  ...
LogicalOperator12_out1_s92,  ...
'or', sprintf( 'Logical\nOperator12' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s95, LogicalOperator14_out1_s94 ],  ...
LogicalOperator13_out1_s93,  ...
'or', sprintf( 'Logical\nOperator13' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice10_out1_s75, BitSlice9_out1_s82 ],  ...
LogicalOperator14_out1_s94,  ...
'or', sprintf( 'Logical\nOperator14' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice12_out1_s77, BitSlice11_out1_s76 ],  ...
LogicalOperator4_out1_s95,  ...
'or', sprintf( 'Logical\nOperator4' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice16_out1_s81, BitSlice15_out1_s80 ],  ...
LogicalOperator5_out1_s96,  ...
'or', sprintf( 'Logical\nOperator5' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator5_out1_s96, LogicalOperator7_out1_s98 ],  ...
LogicalOperator6_out1_s97,  ...
'or', sprintf( 'Logical\nOperator6' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice14_out1_s79, BitSlice13_out1_s78 ],  ...
LogicalOperator7_out1_s98,  ...
'or', sprintf( 'Logical\nOperator7' ) );


pirelab.getSwitchComp( hN,  ...
[ Constant9_out1_s91, Constant_out1_s83 ],  ...
Switch11_out1_s99,  ...
BitSlice9_out1_s82, 'Switch11',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant10_out1_s84, Switch11_out1_s99 ],  ...
Switch12_out1_s100,  ...
BitSlice10_out1_s75, 'Switch12',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch21_out1_s109, Switch16_out1_s104 ],  ...
Switch13_out1_s101,  ...
LogicalOperator6_out1_s97, 'Switch13',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant11_out1_s85, Constant_out1_s83 ],  ...
Switch14_out1_s102,  ...
BitSlice11_out1_s76, 'Switch14',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant12_out1_s86, Switch14_out1_s102 ],  ...
Switch15_out1_s103,  ...
BitSlice12_out1_s77, 'Switch15',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch15_out1_s103, Switch12_out1_s100 ],  ...
Switch16_out1_s104,  ...
LogicalOperator4_out1_s95, 'Switch16',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant13_out1_s87, Constant_out1_s83 ],  ...
Switch17_out1_s105,  ...
BitSlice13_out1_s78, 'Switch17',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant14_out1_s88, Switch17_out1_s105 ],  ...
Switch18_out1_s106,  ...
BitSlice14_out1_s79, 'Switch18',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant15_out1_s89, Constant_out1_s83 ],  ...
Switch19_out1_s107,  ...
BitSlice15_out1_s80, 'Switch19',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant16_out1_s90, Switch19_out1_s107 ],  ...
Switch20_out1_s108,  ...
BitSlice16_out1_s81, 'Switch20',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch20_out1_s108, Switch18_out1_s106 ],  ...
Switch21_out1_s109,  ...
LogicalOperator5_out1_s96, 'Switch21',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Middle8Bits_out1_s37, Bottom8Bits_out1_s36 ],  ...
Switch33_out1_s39,  ...
Middle8Bits_out2_s38, 'Switch33',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Top8Bits_out1_s41, Switch33_out1_s39 ],  ...
Switch34_out1_s40,  ...
Top8Bits_out2_s42, 'Switch34',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice10_out1_s110,  ...
1, 1, 'Bit Slice10' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice11_out1_s111,  ...
2, 2, 'Bit Slice11' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice12_out1_s112,  ...
3, 3, 'Bit Slice12' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice13_out1_s113,  ...
4, 4, 'Bit Slice13' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice14_out1_s114,  ...
5, 5, 'Bit Slice14' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice15_out1_s115,  ...
6, 6, 'Bit Slice15' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice16_out1_s116,  ...
7, 7, 'Bit Slice16' );


pirelab.getBitSliceComp( hN,  ...
BitSlice2_out1_s34,  ...
BitSlice9_out1_s117,  ...
0, 0, 'Bit Slice9' );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator6_out1_s132, LogicalOperator13_out1_s128 ],  ...
LogicalOperator12_out1_s127,  ...
'or', sprintf( 'Logical\nOperator12' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s130, LogicalOperator14_out1_s129 ],  ...
LogicalOperator13_out1_s128,  ...
'or', sprintf( 'Logical\nOperator13' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice10_out1_s110, BitSlice9_out1_s117 ],  ...
LogicalOperator14_out1_s129,  ...
'or', sprintf( 'Logical\nOperator14' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice12_out1_s112, BitSlice11_out1_s111 ],  ...
LogicalOperator4_out1_s130,  ...
'or', sprintf( 'Logical\nOperator4' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice16_out1_s116, BitSlice15_out1_s115 ],  ...
LogicalOperator5_out1_s131,  ...
'or', sprintf( 'Logical\nOperator5' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator5_out1_s131, LogicalOperator7_out1_s133 ],  ...
LogicalOperator6_out1_s132,  ...
'or', sprintf( 'Logical\nOperator6' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice14_out1_s114, BitSlice13_out1_s113 ],  ...
LogicalOperator7_out1_s133,  ...
'or', sprintf( 'Logical\nOperator7' ) );


pirelab.getSwitchComp( hN,  ...
[ Constant9_out1_s126, Constant_out1_s118 ],  ...
Switch11_out1_s134,  ...
BitSlice9_out1_s117, 'Switch11',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant10_out1_s119, Switch11_out1_s134 ],  ...
Switch12_out1_s135,  ...
BitSlice10_out1_s110, 'Switch12',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch21_out1_s144, Switch16_out1_s139 ],  ...
Switch13_out1_s136,  ...
LogicalOperator6_out1_s132, 'Switch13',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant11_out1_s120, Constant_out1_s118 ],  ...
Switch14_out1_s137,  ...
BitSlice11_out1_s111, 'Switch14',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant12_out1_s121, Switch14_out1_s137 ],  ...
Switch15_out1_s138,  ...
BitSlice12_out1_s112, 'Switch15',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch15_out1_s138, Switch12_out1_s135 ],  ...
Switch16_out1_s139,  ...
LogicalOperator4_out1_s130, 'Switch16',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant13_out1_s122, Constant_out1_s118 ],  ...
Switch17_out1_s140,  ...
BitSlice13_out1_s113, 'Switch17',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant14_out1_s123, Switch17_out1_s140 ],  ...
Switch18_out1_s141,  ...
BitSlice14_out1_s114, 'Switch18',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant15_out1_s124, Constant_out1_s118 ],  ...
Switch19_out1_s142,  ...
BitSlice15_out1_s115, 'Switch19',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant16_out1_s125, Switch19_out1_s142 ],  ...
Switch20_out1_s143,  ...
BitSlice16_out1_s116, 'Switch20',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch20_out1_s143, Switch18_out1_s141 ],  ...
Switch21_out1_s144,  ...
LogicalOperator5_out1_s131, 'Switch21',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getLogicComp( hN,  ...
[ BitSlice2_out1_s12, BitSlice3_out1_s13 ],  ...
LogicalOperator_out1_s24,  ...
'xor', sprintf( 'Logical\nOperator' ) );


pirelab.getDynamicBitShiftComp( hN,  ...
[ Delay30_out1_s22, Delay29_out1_s20 ],  ...
bitsll_mant_a_tmp_Shift_lengt____out1_s25,  ...
'left', 'dynamic_shift' );


pirelab.getAddComp( hN,  ...
[ Delay3_out1_s21, C_out1_s15 ],  ...
exp_a_cor_CfType_ExponentBia____out1_s26,  ...
'Floor', 'Wrap', 'exp_a_cor + cfType.ExponentBia...', pirTyp13, '++' );


pirelab.getAddComp( hN,  ...
[ exp_a_cor_CfType_ExponentBia____out1_s26, FindFirst1_out1_s23 ],  ...
exp_a_cor_CfType_ExponentBia____out1_s27,  ...
'Floor', 'Wrap', 'exp_a_cor + cfType.ExponentBia... ', pirTyp12, '+-' );


pirelab.getSwitchComp( hN,  ...
[ FindFirst1_out1_s23, shift_length_Uint8_1__out1_s30 ],  ...
ifBitget_exp_a_norm_1__out1_s28,  ...
LogicalOperator_out1_s24, 'if bitget(exp_a_norm, 1)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getDTCComp( hN,  ...
BitConcat3_out1_s9,  ...
reinterpretcast_mant_a_tmp1_N_____out1_s29,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(mant_a_tmp1, n... : ' );


pirelab.getAddComp( hN,  ...
[ FindFirst1_out1_s23, uint8_1__out1_s31 ],  ...
shift_length_Uint8_1__out1_s30,  ...
'Floor', 'Wrap', 'shift_length + uint8(1)', pirTyp14, '++' );


end 

function hN = createNetwork_n38( ~, hN, pipestage, slRate1 )
pirTyp3 = pir_sfixpt_t( 28, 0 );
pirTyp11 = pir_sfixpt_t( 32, 0 );
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 2, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp6 = pir_ufixpt_t( 25, 0 );
pirTyp7 = pir_ufixpt_t( 26, 0 );
pirTyp9 = pir_ufixpt_t( 28, 0 );
pirTyp12 = pir_ufixpt_t( 32, 0 );
pirTyp8 = pir_ufixpt_t( 4, 0 );
pirTyp10 = pir_ufixpt_t( 9, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 2, 0 );
nt5 = numerictype( 0, 24, 0 );
nt3 = numerictype( 0, 8, 0 );
nt4 = numerictype( 1, 28, 0 );




hN.addInputPort( 'exp_a_cor' );
exp_a_cor_s0 = addSignal( hN, 'exp_a_cor', pirTyp1, slRate1 );
exp_a_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_a_cor' );
mant_a_cor_s1 = addSignal( hN, 'mant_a_cor', pirTyp2, slRate1 );
mant_a_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Exponent' );
Delay1_out1_s20 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay1_out1_s20.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_a_norm' );
Delay_out1_s19 = addSignal( hN, 'Delay_out1', pirTyp3, slRate1 );
Delay_out1_s19.addReceiver( hN, 1 );

x0_out1_s2 = addSignal( hN, '0_out1', pirTyp4, slRate1 );
x1_out1_s3 = addSignal( hN, '1_out1', pirTyp4, slRate1 );
x2_out1_s4 = addSignal( hN, '2_out1', pirTyp5, slRate1 );
Add_out1_s5 = addSignal( hN, 'Add_out1', pirTyp5, slRate1 );
BitConcat_out1_s6 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitConcat1_out1_s7 = addSignal( hN, 'Bit Concat1_out1', pirTyp7, slRate1 );
BitConcat2_out1_s8 = addSignal( hN, 'Bit Concat2_out1', pirTyp8, slRate1 );
BitConcat3_out1_s9 = addSignal( hN, 'Bit Concat3_out1', pirTyp9, slRate1 );
BitShift_out1_s10 = addSignal( hN, 'Bit Shift_out1', pirTyp7, slRate1 );
BitSlice_out1_s11 = addSignal( hN, 'Bit Slice_out1', pirTyp5, slRate1 );
BitSlice1_out1_s12 = addSignal( hN, 'Bit Slice1_out1', pirTyp2, slRate1 );
BitSlice_out1_s13 = addSignal( hN, 'BitSlice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s14 = addSignal( hN, 'BitSlice1_out1', pirTyp1, slRate1 );
C_out1_s15 = addSignal( hN, 'C_out1', pirTyp1, slRate1 );
Constant_out1_s16 = addSignal( hN, 'Constant_out1', pirTyp5, slRate1 );
DTC_out1_s17 = addSignal( hN, 'DTC_out1', pirTyp10, slRate1 );
DataTypeConversion_out1_s18 = addSignal( hN, 'Data Type Conversion_out1', pirTyp3, slRate1 );
Delay2_out1_s21 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay3_out1_s22 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
exp_a_cor_CfType_ExponentBia____out1_s23 = addSignal( hN, 'exp_a_cor + cfType.ExponentBia..._out1', pirTyp10, slRate1 );
ifBitget_exp_a_norm_1__out1_s24 = addSignal( hN, 'if bitget(exp_a_norm, 1)_out1', pirTyp7, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s2,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s3,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x2_out1_s4,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'2', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s15,  ...
fi( 0, nt3, fiMath1, 'hex', '7f' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s16,  ...
fi( 0, nt2, fiMath1, 'hex', '1' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
DataTypeConversion_out1_s18,  ...
Delay_out1_s19,  ...
pipestage( 3 ), 'Delay',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
BitSlice1_out1_s14,  ...
Delay1_out1_s20,  ...
pipestage( 3 ), 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_a_cor_s1,  ...
Delay2_out1_s21,  ...
pipestage( 2 ), 'Delay2',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_a_cor_s0,  ...
Delay3_out1_s22,  ...
pipestage( 2 ), 'Delay3',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getAddComp( hN,  ...
[ BitSlice_out1_s11, Constant_out1_s16 ],  ...
Add_out1_s5,  ...
'Floor', 'Wrap', 'Add', pirTyp11, '+-' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s2, Delay2_out1_s21 ],  ...
BitConcat_out1_s6,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ BitConcat_out1_s6, x1_out1_s3 ],  ...
BitConcat1_out1_s7,  ...
'Bit Concat1' );


pirelab.getBitConcatComp( hN,  ...
[ x2_out1_s4, Add_out1_s5 ],  ...
BitConcat2_out1_s8,  ...
'Bit Concat2' );


pirelab.getBitConcatComp( hN,  ...
[ BitConcat2_out1_s8, BitSlice1_out1_s12 ],  ...
BitConcat3_out1_s9,  ...
'Bit Concat3' );


pirelab.getBitShiftComp( hN,  ...
BitConcat1_out1_s7,  ...
BitShift_out1_s10,  ...
'sll', 1, 0, 'Bit Shift' );


pirelab.getBitSliceComp( hN,  ...
ifBitget_exp_a_norm_1__out1_s24,  ...
BitSlice_out1_s11,  ...
25, 24, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
ifBitget_exp_a_norm_1__out1_s24,  ...
BitSlice1_out1_s12,  ...
23, 0, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Delay3_out1_s22,  ...
BitSlice_out1_s13,  ...
0, 0, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
DTC_out1_s17,  ...
BitSlice1_out1_s14,  ...
8, 1, 'BitSlice1' );


pirelab.getDTCComp( hN,  ...
exp_a_cor_CfType_ExponentBia____out1_s23,  ...
DTC_out1_s17,  ...
'Floor', 'Wrap', 'RWV', 'DTC' );


pirelab.getDTCComp( hN,  ...
BitConcat3_out1_s9,  ...
DataTypeConversion_out1_s18,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getAddComp( hN,  ...
[ Delay3_out1_s22, C_out1_s15 ],  ...
exp_a_cor_CfType_ExponentBia____out1_s23,  ...
'Floor', 'Wrap', 'exp_a_cor + cfType.ExponentBia...', pirTyp12, '++' );


pirelab.getSwitchComp( hN,  ...
[ BitConcat1_out1_s7, BitShift_out1_s10 ],  ...
ifBitget_exp_a_norm_1__out1_s24,  ...
BitSlice_out1_s13, 'if bitget(exp_a_norm, 1)',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n37( p, hN, denormal, slRate1 )
pirTyp3 = pir_sfixpt_t( 28, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );






hN.addInputPort( 'exp_a_cor' );
exp_a_cor_s0 = addSignal( hN, 'exp_a_cor', pirTyp1, slRate1 );
exp_a_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_a_cor' );
mant_a_cor_s1 = addSignal( hN, 'mant_a_cor', pirTyp2, slRate1 );
mant_a_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Exponent' );
Exponent_s2 = addSignal( hN, 'Exponent', pirTyp1, slRate1 );
Exponent_s2.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_a_norm' );
mant_a_norm_s3 = addSignal( hN, 'mant_a_norm', pirTyp3, slRate1 );
mant_a_norm_s3.addReceiver( hN, 1 );


if ( denormal )
hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Denormals' );
sqrt_Normalize_Denormals = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Normalize_Denormals.Name = 'sqrt_Normalize_Denormals';
pirelab.connectNtwkInstComp( sqrt_Normalize_Denormals,  ...
[ exp_a_cor_s0, mant_a_cor_s1 ],  ...
[ Exponent_s2, mant_a_norm_s3 ] );
else 
hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize/sqrt_Normalize_Normals' );
sqrt_Normalize_Normals = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Normalize_Normals.Name = 'sqrt_Normalize_Normals';
pirelab.connectNtwkInstComp( sqrt_Normalize_Normals,  ...
[ exp_a_cor_s0, mant_a_cor_s1 ],  ...
[ Exponent_s2, mant_a_norm_s3 ] );
end 

end 

function hN = createNetwork_n36( ~, hN, slRate1 )
pirTyp7 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_sfixpt_t( 28, 0 );
pirTyp8 = pir_sfixpt_t( 32, 0 );
pirTyp2 = pir_sfixpt_t( 5, 0 );
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp6 = pir_ufixpt_t( 23, 0 );
pirTyp3 = pir_ufixpt_t( 28, 0 );
pirTyp5 = pir_ufixpt_t( 5, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 1, 5, 0 );




hN.addInputPort( 'R' );
R_s0 = addSignal( hN, 'R', pirTyp1, slRate1 );
R_s0.addDriver( hN, 0 );

hN.addOutputPort( 'Q' );
if_tmp3__0__out1_s13 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s13.addReceiver( hN, 0 );

hN.addOutputPort( 'R1' );
if_tmp3__0_1_out1_s14 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp1, slRate1 );
if_tmp3__0_1_out1_s14.addReceiver( hN, 1 );

x16777216_out1_s1 = addSignal( hN, '16777216  _out1', pirTyp2, slRate1 );
x41943040_out1_s2 = addSignal( hN, '41943040 _out1', pirTyp2, slRate1 );
BitConcat_out1_s3 = addSignal( hN, 'Bit Concat_out1', pirTyp3, slRate1 );
BitSlice_out1_s4 = addSignal( hN, 'Bit Slice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s5 = addSignal( hN, 'Bit Slice1_out1', pirTyp5, slRate1 );
BitSlice2_out1_s6 = addSignal( hN, 'Bit Slice2_out1', pirTyp6, slRate1 );
C_out1_s7 = addSignal( hN, 'C_out1', pirTyp2, slRate1 );
DataTypeConversion_out1_s8 = addSignal( hN, 'Data Type Conversion_out1', pirTyp1, slRate1 );
DataTypeConversion1_out1_s9 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp2, slRate1 );
LogicalOperator_out1_s10 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp7, slRate1 );
R_41943040_out1_s11 = addSignal( hN, 'R - 41943040_out1', pirTyp2, slRate1 );
bitsll_R_1__out1_s12 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp1, slRate1 );


pirelab.getConstComp( hN,  ...
x16777216_out1_s1,  ...
fi( 0, nt1, fiMath1, 'hex', '02' ),  ...
'16777216  ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
x41943040_out1_s2,  ...
fi( 0, nt1, fiMath1, 'hex', '05' ),  ...
'41943040 ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s7,  ...
fi( 0, nt1, fiMath1, 'hex', '03' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getBitConcatComp( hN,  ...
[ R_41943040_out1_s11, BitSlice2_out1_s6 ],  ...
BitConcat_out1_s3,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
R_41943040_out1_s11,  ...
BitSlice_out1_s4,  ...
4, 4, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s12,  ...
BitSlice1_out1_s5,  ...
27, 23, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s12,  ...
BitSlice2_out1_s6,  ...
22, 0, 'Bit Slice2' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s3,  ...
DataTypeConversion_out1_s8,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s5,  ...
DataTypeConversion1_out1_s9,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s4,  ...
LogicalOperator_out1_s10,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s9, x41943040_out1_s2 ],  ...
R_41943040_out1_s11,  ...
'Floor', 'Wrap', 'R - 41943040', pirTyp8, '+-' );


pirelab.getBitShiftComp( hN,  ...
R_s0,  ...
bitsll_R_1__out1_s12,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s7, x16777216_out1_s1 ],  ...
if_tmp3__0__out1_s13,  ...
LogicalOperator_out1_s10, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ DataTypeConversion_out1_s8, bitsll_R_1__out1_s12 ],  ...
if_tmp3__0_1_out1_s14,  ...
LogicalOperator_out1_s10, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n32( ~, hN, pipestage, slRate1 )
pirTyp4 = pir_boolean_t;
pirTyp1 = pir_sfixpt_t( 25, 0 );
pirTyp6 = pir_sfixpt_t( 26, 0 );
pirTyp5 = pir_sfixpt_t( 27, 0 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp12 = pir_sfixpt_t( 32, 0 );
pirTyp9 = pir_ufixpt_t( 1, 0 );
pirTyp10 = pir_ufixpt_t( 2, 0 );
pirTyp3 = pir_ufixpt_t( 24, 0 );
pirTyp8 = pir_ufixpt_t( 26, 0 );
pirTyp11 = pir_ufixpt_t( 27, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt4 = numerictype( 1, 26, 0 );
nt2 = numerictype( 1, 27, 0 );
nt3 = numerictype( 1, 28, 0 );


hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
BitSlice_out1_s2 = addSignal( hN, 'BitSlice_out1', pirTyp3, slRate1 );
BitSlice_out1_s2.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
R__0_out1_s7 = addSignal( hN, 'R ~= 0_out1', pirTyp4, slRate1 );
R__0_out1_s7.addReceiver( hN, 1 );

Delay1_PS25_out1_s3 = addSignal( hN, 'Delay1_PS25_out1', pirTyp5, slRate1 );
Delay2_PS24_out1_s4 = addSignal( hN, 'Delay2_PS24_out1', pirTyp2, slRate1 );
Delay3_PS24_out1_s5 = addSignal( hN, 'Delay3_PS24_out1', pirTyp6, slRate1 );
Delay_PS25_out1_s6 = addSignal( hN, 'Delay_PS25_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit21_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit21_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit21_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit21_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit22_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit22_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit22_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit22_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit23_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit23_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit23_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit23_out2', pirTyp2, slRate1 );
BitConcat_out1_s16 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s17 = addSignal( hN, 'Bit Concat1_out1', pirTyp8, slRate1 );
BitSlice_out1_s18 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s19 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s20 = addSignal( hN, 'Bit Slice2_out1', pirTyp10, slRate1 );
BitSet1_out1_s21 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
BitSet2_out1_s22 = addSignal( hN, 'BitSet2_out1', pirTyp6, slRate1 );
Constant_out1_s23 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s24 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s25 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion3_out1_s26 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s27 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp4, slRate1 );
R_Tmp2_out1_s28 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
bitsll_Q_1_1_out1_s29 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s30 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s31 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s32 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s35 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s36 = addSignal( hN, 'Bit Concat1_out1', pirTyp11, slRate1 );
BitSlice_out1_s37 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s38 = addSignal( hN, 'Bit Slice1_out1', pirTyp11, slRate1 );
BitSlice2_out1_s39 = addSignal( hN, 'Bit Slice2_out1', pirTyp9, slRate1 );
BitSet1_out1_s40 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
BitSet2_out1_s41 = addSignal( hN, 'BitSet2_out1', pirTyp5, slRate1 );
Constant_out1_s42 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s43 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s44 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s45 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp5, slRate1 );
R_Tmp2_out1_s46 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1_1_out1_s47 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s48 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s49 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s50 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );
BitConcat1_out1_s53 = addSignal( hN, 'Bit Concat1_out1', pirTyp7, slRate1 );
BitSlice_out1_s54 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSet_out1_s55 = addSignal( hN, 'BitSet_out1', pirTyp2, slRate1 );
BitSet1_out1_s56 = addSignal( hN, 'BitSet1_out1', pirTyp2, slRate1 );
Constant_out1_s57 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion3_out1_s58 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp2, slRate1 );
LogicalOperator_out1_s59 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp4, slRate1 );
R_Tmp2_out1_s60 = addSignal( hN, 'R - tmp2_out1', pirTyp2, slRate1 );
bitsll_Q_1__out1_s61 = addSignal( hN, 'bitsll(Q, 1)_out1', pirTyp2, slRate1 );
bitsll_R_1__out1_s62 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s63 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp2, slRate1 );
if_tmp3__0_1_out1_s64 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp2, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s23,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s42,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s57,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit22_out1_s10,  ...
Delay1_PS25_out1_s3,  ...
pipestage( 25 ), 'Delay1_PS25',  ...
fi( 0, nt2, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit21_out2_s9,  ...
Delay2_PS24_out1_s4,  ...
pipestage( 24 ), 'Delay2_PS24',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit21_out1_s8,  ...
Delay3_PS24_out1_s5,  ...
pipestage( 24 ), 'Delay3_PS24',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit22_out2_s11,  ...
Delay_PS25_out1_s6,  ...
pipestage( 25 ), 'Delay_PS25',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s31,  ...
sqrt_Long_get_digit21_out1_s8,  ...
'sqrt_Long_get_digit21_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s24,  ...
sqrt_Long_get_digit21_out2_s9,  ...
'sqrt_Long_get_digit21_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s49,  ...
sqrt_Long_get_digit22_out1_s10,  ...
'sqrt_Long_get_digit22_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s43,  ...
sqrt_Long_get_digit22_out2_s11,  ...
'sqrt_Long_get_digit22_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s63,  ...
sqrt_Long_get_digit23_out1_s12,  ...
'sqrt_Long_get_digit23_out1' );

pirelab.getWireComp( hN,  ...
if_tmp3__0_1_out1_s64,  ...
sqrt_Long_get_digit23_out2_s13,  ...
'sqrt_Long_get_digit23_out2' );


pirelab.getBitSliceComp( hN,  ...
sqrt_Long_get_digit23_out1_s12,  ...
BitSlice_out1_s2,  ...
23, 0, 'BitSlice' );


pirelab.getCompareToValueComp( hN,  ...
sqrt_Long_get_digit23_out2_s13,  ...
R__0_out1_s7,  ...
'~=', double( 0 ),  ...
'R ~= 0', 0 );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s32, BitSlice2_out1_s20 ],  ...
BitConcat_out1_s16,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s23 ],  ...
BitConcat1_out1_s17,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s28,  ...
BitSlice_out1_s18,  ...
25, 25, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s30,  ...
BitSlice1_out1_s19,  ...
27, 2, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s30,  ...
BitSlice2_out1_s20,  ...
1, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s26,  ...
BitSet1_out1_s21,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s29,  ...
BitSet2_out1_s22,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s16,  ...
DataTypeConversion_out1_s24,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s19,  ...
DataTypeConversion1_out1_s25,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s17,  ...
DataTypeConversion3_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s18,  ...
LogicalOperator_out1_s27,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s25, BitSet2_out1_s22 ],  ...
R_Tmp2_out1_s28,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp12, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s26,  ...
bitsll_Q_1_1_out1_s29,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s30,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s21, DataTypeConversion3_out1_s26 ],  ...
if_tmp3__0__out1_s31,  ...
LogicalOperator_out1_s27, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s28, DataTypeConversion1_out1_s25 ],  ...
if_tmp3__0_1_out1_s32,  ...
LogicalOperator_out1_s27, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s50, BitSlice2_out1_s39 ],  ...
BitConcat_out1_s35,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay3_PS24_out1_s5, Constant_out1_s42 ],  ...
BitConcat1_out1_s36,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s46,  ...
BitSlice_out1_s37,  ...
26, 26, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s48,  ...
BitSlice1_out1_s38,  ...
27, 1, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s48,  ...
BitSlice2_out1_s39,  ...
0, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s45,  ...
BitSet1_out1_s40,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s47,  ...
BitSet2_out1_s41,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s35,  ...
DataTypeConversion_out1_s43,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s38,  ...
DataTypeConversion1_out1_s44,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s36,  ...
DataTypeConversion3_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s44, BitSet2_out1_s41 ],  ...
R_Tmp2_out1_s46,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp12, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s45,  ...
bitsll_Q_1_1_out1_s47,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay2_PS24_out1_s4,  ...
bitsll_R_1__out1_s48,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ DataTypeConversion3_out1_s45, BitSet1_out1_s40 ],  ...
if_tmp3__0__out1_s49,  ...
BitSlice_out1_s37, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ DataTypeConversion1_out1_s44, R_Tmp2_out1_s46 ],  ...
if_tmp3__0_1_out1_s50,  ...
BitSlice_out1_s37, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_PS25_out1_s3, Constant_out1_s57 ],  ...
BitConcat1_out1_s53,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s60,  ...
BitSlice_out1_s54,  ...
27, 27, 'Bit Slice' );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1__out1_s61,  ...
BitSet_out1_s55,  ...
1, 1,  ...
'BitSet', 1 );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s58,  ...
BitSet1_out1_s56,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s53,  ...
DataTypeConversion3_out1_s58,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s54,  ...
LogicalOperator_out1_s59,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ bitsll_R_1__out1_s62, BitSet_out1_s55 ],  ...
R_Tmp2_out1_s60,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp12, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s58,  ...
bitsll_Q_1__out1_s61,  ...
'sll', 1, 0, 'bitsll(Q, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay_PS25_out1_s6,  ...
bitsll_R_1__out1_s62,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s56, DataTypeConversion3_out1_s58 ],  ...
if_tmp3__0__out1_s63,  ...
LogicalOperator_out1_s59, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s60, bitsll_R_1__out1_s62 ],  ...
if_tmp3__0_1_out1_s64,  ...
LogicalOperator_out1_s59, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n27( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_boolean_t;
pirTyp1 = pir_sfixpt_t( 21, 0 );
pirTyp5 = pir_sfixpt_t( 22, 0 );
pirTyp4 = pir_sfixpt_t( 23, 0 );
pirTyp6 = pir_sfixpt_t( 24, 0 );
pirTyp3 = pir_sfixpt_t( 25, 0 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp18 = pir_sfixpt_t( 32, 0 );
pirTyp9 = pir_ufixpt_t( 1, 0 );
pirTyp8 = pir_ufixpt_t( 22, 0 );
pirTyp12 = pir_ufixpt_t( 23, 0 );
pirTyp14 = pir_ufixpt_t( 24, 0 );
pirTyp16 = pir_ufixpt_t( 25, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );
pirTyp17 = pir_ufixpt_t( 3, 0 );
pirTyp15 = pir_ufixpt_t( 4, 0 );
pirTyp13 = pir_ufixpt_t( 5, 0 );
pirTyp10 = pir_ufixpt_t( 6, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt4 = numerictype( 1, 22, 0 );
nt2 = numerictype( 1, 23, 0 );
nt5 = numerictype( 1, 24, 0 );
nt3 = numerictype( 1, 28, 0 );



hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
sqrt_Long_get_digit20_out1_s14 = addSignal( hN, 'sqrt_Long_get_digit20_out1', pirTyp3, slRate1 );
sqrt_Long_get_digit20_out1_s14.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
sqrt_Long_get_digit20_out2_s15 = addSignal( hN, 'sqrt_Long_get_digit20_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit20_out2_s15.addReceiver( hN, 1 );

Delay1_PS21_out1_s2 = addSignal( hN, 'Delay1_PS21_out1', pirTyp4, slRate1 );
Delay2_PS20_out1_s3 = addSignal( hN, 'Delay2_PS20_out1', pirTyp2, slRate1 );
Delay3_PS20_out1_s4 = addSignal( hN, 'Delay3_PS20_out1', pirTyp5, slRate1 );
Delay4_PS22_out1_s5 = addSignal( hN, 'Delay4_PS22_out1', pirTyp2, slRate1 );
Delay5_PS22_out1_s6 = addSignal( hN, 'Delay5_PS22_out1', pirTyp6, slRate1 );
Delay_PS21_out1_s7 = addSignal( hN, 'Delay_PS21_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit17_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit17_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit17_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit17_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit18_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit18_out1', pirTyp4, slRate1 );
sqrt_Long_get_digit18_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit18_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit19_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit19_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit19_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit19_out2', pirTyp2, slRate1 );
BitConcat_out1_s18 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s19 = addSignal( hN, 'Bit Concat1_out1', pirTyp8, slRate1 );
BitSlice_out1_s20 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s21 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s22 = addSignal( hN, 'Bit Slice2_out1', pirTyp10, slRate1 );
BitSet1_out1_s23 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
BitSet2_out1_s24 = addSignal( hN, 'BitSet2_out1', pirTyp5, slRate1 );
Constant_out1_s25 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s26 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s27 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s28 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp5, slRate1 );
LogicalOperator_out1_s29 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s30 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1_1_out1_s31 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s32 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s33 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s34 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );
BitConcat_out1_s37 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s38 = addSignal( hN, 'Bit Concat1_out1', pirTyp12, slRate1 );
BitSlice_out1_s39 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s40 = addSignal( hN, 'Bit Slice1_out1', pirTyp12, slRate1 );
BitSlice2_out1_s41 = addSignal( hN, 'Bit Slice2_out1', pirTyp13, slRate1 );
BitSet1_out1_s42 = addSignal( hN, 'BitSet1_out1', pirTyp4, slRate1 );
BitSet2_out1_s43 = addSignal( hN, 'BitSet2_out1', pirTyp4, slRate1 );
Constant_out1_s44 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s45 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s46 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp4, slRate1 );
DataTypeConversion3_out1_s47 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s48 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s49 = addSignal( hN, 'R - tmp2_out1', pirTyp4, slRate1 );
bitsll_Q_1_1_out1_s50 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp4, slRate1 );
bitsll_R_1__out1_s51 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s52 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp4, slRate1 );
if_tmp3__0_1_out1_s53 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp4, slRate1 );
BitConcat_out1_s56 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s57 = addSignal( hN, 'Bit Concat1_out1', pirTyp14, slRate1 );
BitSlice_out1_s58 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s59 = addSignal( hN, 'Bit Slice1_out1', pirTyp14, slRate1 );
BitSlice2_out1_s60 = addSignal( hN, 'Bit Slice2_out1', pirTyp15, slRate1 );
BitSet1_out1_s61 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
BitSet2_out1_s62 = addSignal( hN, 'BitSet2_out1', pirTyp6, slRate1 );
Constant_out1_s63 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s64 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s65 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion3_out1_s66 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s67 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s68 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
bitsll_Q_1_1_out1_s69 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s70 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s71 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s72 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s75 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s76 = addSignal( hN, 'Bit Concat1_out1', pirTyp16, slRate1 );
BitSlice_out1_s77 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s78 = addSignal( hN, 'Bit Slice1_out1', pirTyp16, slRate1 );
BitSlice2_out1_s79 = addSignal( hN, 'Bit Slice2_out1', pirTyp17, slRate1 );
BitSet1_out1_s80 = addSignal( hN, 'BitSet1_out1', pirTyp3, slRate1 );
BitSet2_out1_s81 = addSignal( hN, 'BitSet2_out1', pirTyp3, slRate1 );
Constant_out1_s82 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s83 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s84 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp3, slRate1 );
DataTypeConversion3_out1_s85 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp3, slRate1 );
LogicalOperator_out1_s86 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s87 = addSignal( hN, 'R - tmp2_out1', pirTyp3, slRate1 );
bitsll_Q_1_1_out1_s88 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp3, slRate1 );
bitsll_R_1__out1_s89 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s90 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp3, slRate1 );
if_tmp3__0_1_out1_s91 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s25,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s44,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s63,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s82,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit18_out1_s10,  ...
Delay1_PS21_out1_s2,  ...
pipestage( 21 ), 'Delay1_PS21',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit17_out2_s9,  ...
Delay2_PS20_out1_s3,  ...
pipestage( 20 ), 'Delay2_PS20',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit17_out1_s8,  ...
Delay3_PS20_out1_s4,  ...
pipestage( 20 ), 'Delay3_PS20',  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit19_out2_s13,  ...
Delay4_PS22_out1_s5,  ...
pipestage( 22 ), 'Delay4_PS22',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit19_out1_s12,  ...
Delay5_PS22_out1_s6,  ...
pipestage( 22 ), 'Delay5_PS22',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit18_out2_s11,  ...
Delay_PS21_out1_s7,  ...
pipestage( 21 ), 'Delay_PS21',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s33,  ...
sqrt_Long_get_digit17_out1_s8,  ...
'sqrt_Long_get_digit17_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s26,  ...
sqrt_Long_get_digit17_out2_s9,  ...
'sqrt_Long_get_digit17_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s52,  ...
sqrt_Long_get_digit18_out1_s10,  ...
'sqrt_Long_get_digit18_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s45,  ...
sqrt_Long_get_digit18_out2_s11,  ...
'sqrt_Long_get_digit18_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s71,  ...
sqrt_Long_get_digit19_out1_s12,  ...
'sqrt_Long_get_digit19_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s64,  ...
sqrt_Long_get_digit19_out2_s13,  ...
'sqrt_Long_get_digit19_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s90,  ...
sqrt_Long_get_digit20_out1_s14,  ...
'sqrt_Long_get_digit20_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s83,  ...
sqrt_Long_get_digit20_out2_s15,  ...
'sqrt_Long_get_digit20_out2' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s34, BitSlice2_out1_s22 ],  ...
BitConcat_out1_s18,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s25 ],  ...
BitConcat1_out1_s19,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s30,  ...
BitSlice_out1_s20,  ...
21, 21, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice1_out1_s21,  ...
27, 6, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice2_out1_s22,  ...
5, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
BitSet1_out1_s23,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s31,  ...
BitSet2_out1_s24,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s18,  ...
DataTypeConversion_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s21,  ...
DataTypeConversion1_out1_s27,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s19,  ...
DataTypeConversion3_out1_s28,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s20,  ...
LogicalOperator_out1_s29,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s27, BitSet2_out1_s24 ],  ...
R_Tmp2_out1_s30,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
bitsll_Q_1_1_out1_s31,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s32,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s23, DataTypeConversion3_out1_s28 ],  ...
if_tmp3__0__out1_s33,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s30, DataTypeConversion1_out1_s27 ],  ...
if_tmp3__0_1_out1_s34,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s53, BitSlice2_out1_s41 ],  ...
BitConcat_out1_s37,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay3_PS20_out1_s4, Constant_out1_s44 ],  ...
BitConcat1_out1_s38,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s49,  ...
BitSlice_out1_s39,  ...
22, 22, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice1_out1_s40,  ...
27, 5, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice2_out1_s41,  ...
4, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
BitSet1_out1_s42,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s50,  ...
BitSet2_out1_s43,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s37,  ...
DataTypeConversion_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s40,  ...
DataTypeConversion1_out1_s46,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s38,  ...
DataTypeConversion3_out1_s47,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s39,  ...
LogicalOperator_out1_s48,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s46, BitSet2_out1_s43 ],  ...
R_Tmp2_out1_s49,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
bitsll_Q_1_1_out1_s50,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay2_PS20_out1_s3,  ...
bitsll_R_1__out1_s51,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s42, DataTypeConversion3_out1_s47 ],  ...
if_tmp3__0__out1_s52,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s49, DataTypeConversion1_out1_s46 ],  ...
if_tmp3__0_1_out1_s53,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s72, BitSlice2_out1_s60 ],  ...
BitConcat_out1_s56,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_PS21_out1_s2, Constant_out1_s63 ],  ...
BitConcat1_out1_s57,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s68,  ...
BitSlice_out1_s58,  ...
23, 23, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice1_out1_s59,  ...
27, 4, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice2_out1_s60,  ...
3, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
BitSet1_out1_s61,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s69,  ...
BitSet2_out1_s62,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s56,  ...
DataTypeConversion_out1_s64,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s59,  ...
DataTypeConversion1_out1_s65,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s57,  ...
DataTypeConversion3_out1_s66,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s58,  ...
LogicalOperator_out1_s67,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s65, BitSet2_out1_s62 ],  ...
R_Tmp2_out1_s68,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
bitsll_Q_1_1_out1_s69,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay_PS21_out1_s7,  ...
bitsll_R_1__out1_s70,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s61, DataTypeConversion3_out1_s66 ],  ...
if_tmp3__0__out1_s71,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s68, DataTypeConversion1_out1_s65 ],  ...
if_tmp3__0_1_out1_s72,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s91, BitSlice2_out1_s79 ],  ...
BitConcat_out1_s75,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_PS22_out1_s6, Constant_out1_s82 ],  ...
BitConcat1_out1_s76,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s87,  ...
BitSlice_out1_s77,  ...
24, 24, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice1_out1_s78,  ...
27, 3, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice2_out1_s79,  ...
2, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
BitSet1_out1_s80,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s88,  ...
BitSet2_out1_s81,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s75,  ...
DataTypeConversion_out1_s83,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s78,  ...
DataTypeConversion1_out1_s84,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s76,  ...
DataTypeConversion3_out1_s85,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s77,  ...
LogicalOperator_out1_s86,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s84, BitSet2_out1_s81 ],  ...
R_Tmp2_out1_s87,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
bitsll_Q_1_1_out1_s88,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay4_PS22_out1_s5,  ...
bitsll_R_1__out1_s89,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s80, DataTypeConversion3_out1_s85 ],  ...
if_tmp3__0__out1_s90,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s87, DataTypeConversion1_out1_s84 ],  ...
if_tmp3__0_1_out1_s91,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n22( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_boolean_t;
pirTyp1 = pir_sfixpt_t( 17, 0 );
pirTyp5 = pir_sfixpt_t( 18, 0 );
pirTyp4 = pir_sfixpt_t( 19, 0 );
pirTyp6 = pir_sfixpt_t( 20, 0 );
pirTyp3 = pir_sfixpt_t( 21, 0 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp18 = pir_sfixpt_t( 32, 0 );
pirTyp9 = pir_ufixpt_t( 1, 0 );
pirTyp10 = pir_ufixpt_t( 10, 0 );
pirTyp8 = pir_ufixpt_t( 18, 0 );
pirTyp12 = pir_ufixpt_t( 19, 0 );
pirTyp14 = pir_ufixpt_t( 20, 0 );
pirTyp16 = pir_ufixpt_t( 21, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );
pirTyp17 = pir_ufixpt_t( 7, 0 );
pirTyp13 = pir_ufixpt_t( 9, 0 );
pirTyp15 = pir_unsigned_t( 8 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt4 = numerictype( 1, 18, 0 );
nt2 = numerictype( 1, 19, 0 );
nt5 = numerictype( 1, 20, 0 );
nt3 = numerictype( 1, 28, 0 );


hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
sqrt_Long_get_digit16_out1_s14 = addSignal( hN, 'sqrt_Long_get_digit16_out1', pirTyp3, slRate1 );
sqrt_Long_get_digit16_out1_s14.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
sqrt_Long_get_digit16_out2_s15 = addSignal( hN, 'sqrt_Long_get_digit16_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit16_out2_s15.addReceiver( hN, 1 );

Delay1_PS17_out1_s2 = addSignal( hN, 'Delay1_PS17_out1', pirTyp4, slRate1 );
Delay2_PS16_out1_s3 = addSignal( hN, 'Delay2_PS16_out1', pirTyp2, slRate1 );
Delay3_PS16_out1_s4 = addSignal( hN, 'Delay3_PS16_out1', pirTyp5, slRate1 );
Delay4_PS18_out1_s5 = addSignal( hN, 'Delay4_PS18_out1', pirTyp2, slRate1 );
Delay5_PS18_out1_s6 = addSignal( hN, 'Delay5_PS18_out1', pirTyp6, slRate1 );
Delay_PS17_out1_s7 = addSignal( hN, 'Delay_PS17_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit13_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit13_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit13_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit13_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit14_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit14_out1', pirTyp4, slRate1 );
sqrt_Long_get_digit14_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit14_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit15_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit15_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit15_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit15_out2', pirTyp2, slRate1 );
BitConcat_out1_s18 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s19 = addSignal( hN, 'Bit Concat1_out1', pirTyp8, slRate1 );
BitSlice_out1_s20 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s21 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s22 = addSignal( hN, 'Bit Slice2_out1', pirTyp10, slRate1 );
BitSet1_out1_s23 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
BitSet2_out1_s24 = addSignal( hN, 'BitSet2_out1', pirTyp5, slRate1 );
Constant_out1_s25 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s26 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s27 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s28 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp5, slRate1 );
LogicalOperator_out1_s29 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s30 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1_1_out1_s31 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s32 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s33 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s34 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );
BitConcat_out1_s37 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s38 = addSignal( hN, 'Bit Concat1_out1', pirTyp12, slRate1 );
BitSlice_out1_s39 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s40 = addSignal( hN, 'Bit Slice1_out1', pirTyp12, slRate1 );
BitSlice2_out1_s41 = addSignal( hN, 'Bit Slice2_out1', pirTyp13, slRate1 );
BitSet1_out1_s42 = addSignal( hN, 'BitSet1_out1', pirTyp4, slRate1 );
BitSet2_out1_s43 = addSignal( hN, 'BitSet2_out1', pirTyp4, slRate1 );
Constant_out1_s44 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s45 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s46 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp4, slRate1 );
DataTypeConversion3_out1_s47 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s48 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s49 = addSignal( hN, 'R - tmp2_out1', pirTyp4, slRate1 );
bitsll_Q_1_1_out1_s50 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp4, slRate1 );
bitsll_R_1__out1_s51 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s52 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp4, slRate1 );
if_tmp3__0_1_out1_s53 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp4, slRate1 );
BitConcat_out1_s56 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s57 = addSignal( hN, 'Bit Concat1_out1', pirTyp14, slRate1 );
BitSlice_out1_s58 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s59 = addSignal( hN, 'Bit Slice1_out1', pirTyp14, slRate1 );
BitSlice2_out1_s60 = addSignal( hN, 'Bit Slice2_out1', pirTyp15, slRate1 );
BitSet1_out1_s61 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
BitSet2_out1_s62 = addSignal( hN, 'BitSet2_out1', pirTyp6, slRate1 );
Constant_out1_s63 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s64 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s65 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion3_out1_s66 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s67 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s68 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
bitsll_Q_1_1_out1_s69 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s70 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s71 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s72 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s75 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s76 = addSignal( hN, 'Bit Concat1_out1', pirTyp16, slRate1 );
BitSlice_out1_s77 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s78 = addSignal( hN, 'Bit Slice1_out1', pirTyp16, slRate1 );
BitSlice2_out1_s79 = addSignal( hN, 'Bit Slice2_out1', pirTyp17, slRate1 );
BitSet1_out1_s80 = addSignal( hN, 'BitSet1_out1', pirTyp3, slRate1 );
BitSet2_out1_s81 = addSignal( hN, 'BitSet2_out1', pirTyp3, slRate1 );
Constant_out1_s82 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s83 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s84 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp3, slRate1 );
DataTypeConversion3_out1_s85 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp3, slRate1 );
LogicalOperator_out1_s86 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s87 = addSignal( hN, 'R - tmp2_out1', pirTyp3, slRate1 );
bitsll_Q_1_1_out1_s88 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp3, slRate1 );
bitsll_R_1__out1_s89 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s90 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp3, slRate1 );
if_tmp3__0_1_out1_s91 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s25,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s44,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s63,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s82,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit14_out1_s10,  ...
Delay1_PS17_out1_s2,  ...
pipestage( 17 ), 'Delay1_PS17',  ...
fi( 0, nt2, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit13_out2_s9,  ...
Delay2_PS16_out1_s3,  ...
pipestage( 16 ), 'Delay2_PS16',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit13_out1_s8,  ...
Delay3_PS16_out1_s4,  ...
pipestage( 16 ), 'Delay3_PS16',  ...
fi( 0, nt4, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit15_out2_s13,  ...
Delay4_PS18_out1_s5,  ...
pipestage( 18 ), 'Delay4_PS18',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit15_out1_s12,  ...
Delay5_PS18_out1_s6,  ...
pipestage( 18 ), 'Delay5_PS18',  ...
fi( 0, nt5, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit14_out2_s11,  ...
Delay_PS17_out1_s7,  ...
pipestage( 17 ), 'Delay_PS17',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s33,  ...
sqrt_Long_get_digit13_out1_s8,  ...
'sqrt_Long_get_digit13_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s26,  ...
sqrt_Long_get_digit13_out2_s9,  ...
'sqrt_Long_get_digit13_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s52,  ...
sqrt_Long_get_digit14_out1_s10,  ...
'sqrt_Long_get_digit14_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s45,  ...
sqrt_Long_get_digit14_out2_s11,  ...
'sqrt_Long_get_digit14_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s71,  ...
sqrt_Long_get_digit15_out1_s12,  ...
'sqrt_Long_get_digit15_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s64,  ...
sqrt_Long_get_digit15_out2_s13,  ...
'sqrt_Long_get_digit15_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s90,  ...
sqrt_Long_get_digit16_out1_s14,  ...
'sqrt_Long_get_digit16_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s83,  ...
sqrt_Long_get_digit16_out2_s15,  ...
'sqrt_Long_get_digit16_out2' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s34, BitSlice2_out1_s22 ],  ...
BitConcat_out1_s18,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s25 ],  ...
BitConcat1_out1_s19,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s30,  ...
BitSlice_out1_s20,  ...
17, 17, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice1_out1_s21,  ...
27, 10, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice2_out1_s22,  ...
9, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
BitSet1_out1_s23,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s31,  ...
BitSet2_out1_s24,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s18,  ...
DataTypeConversion_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s21,  ...
DataTypeConversion1_out1_s27,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s19,  ...
DataTypeConversion3_out1_s28,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s20,  ...
LogicalOperator_out1_s29,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s27, BitSet2_out1_s24 ],  ...
R_Tmp2_out1_s30,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
bitsll_Q_1_1_out1_s31,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s32,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s23, DataTypeConversion3_out1_s28 ],  ...
if_tmp3__0__out1_s33,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s30, DataTypeConversion1_out1_s27 ],  ...
if_tmp3__0_1_out1_s34,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s53, BitSlice2_out1_s41 ],  ...
BitConcat_out1_s37,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay3_PS16_out1_s4, Constant_out1_s44 ],  ...
BitConcat1_out1_s38,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s49,  ...
BitSlice_out1_s39,  ...
18, 18, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice1_out1_s40,  ...
27, 9, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice2_out1_s41,  ...
8, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
BitSet1_out1_s42,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s50,  ...
BitSet2_out1_s43,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s37,  ...
DataTypeConversion_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s40,  ...
DataTypeConversion1_out1_s46,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s38,  ...
DataTypeConversion3_out1_s47,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s39,  ...
LogicalOperator_out1_s48,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s46, BitSet2_out1_s43 ],  ...
R_Tmp2_out1_s49,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
bitsll_Q_1_1_out1_s50,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay2_PS16_out1_s3,  ...
bitsll_R_1__out1_s51,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s42, DataTypeConversion3_out1_s47 ],  ...
if_tmp3__0__out1_s52,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s49, DataTypeConversion1_out1_s46 ],  ...
if_tmp3__0_1_out1_s53,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s72, BitSlice2_out1_s60 ],  ...
BitConcat_out1_s56,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_PS17_out1_s2, Constant_out1_s63 ],  ...
BitConcat1_out1_s57,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s68,  ...
BitSlice_out1_s58,  ...
19, 19, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice1_out1_s59,  ...
27, 8, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice2_out1_s60,  ...
7, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
BitSet1_out1_s61,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s69,  ...
BitSet2_out1_s62,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s56,  ...
DataTypeConversion_out1_s64,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s59,  ...
DataTypeConversion1_out1_s65,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s57,  ...
DataTypeConversion3_out1_s66,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s58,  ...
LogicalOperator_out1_s67,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s65, BitSet2_out1_s62 ],  ...
R_Tmp2_out1_s68,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
bitsll_Q_1_1_out1_s69,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay_PS17_out1_s7,  ...
bitsll_R_1__out1_s70,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s61, DataTypeConversion3_out1_s66 ],  ...
if_tmp3__0__out1_s71,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s68, DataTypeConversion1_out1_s65 ],  ...
if_tmp3__0_1_out1_s72,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s91, BitSlice2_out1_s79 ],  ...
BitConcat_out1_s75,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_PS18_out1_s6, Constant_out1_s82 ],  ...
BitConcat1_out1_s76,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s87,  ...
BitSlice_out1_s77,  ...
20, 20, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice1_out1_s78,  ...
27, 7, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice2_out1_s79,  ...
6, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
BitSet1_out1_s80,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s88,  ...
BitSet2_out1_s81,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s75,  ...
DataTypeConversion_out1_s83,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s78,  ...
DataTypeConversion1_out1_s84,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s76,  ...
DataTypeConversion3_out1_s85,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s77,  ...
LogicalOperator_out1_s86,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s84, BitSet2_out1_s81 ],  ...
R_Tmp2_out1_s87,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
bitsll_Q_1_1_out1_s88,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay4_PS18_out1_s5,  ...
bitsll_R_1__out1_s89,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s80, DataTypeConversion3_out1_s85 ],  ...
if_tmp3__0__out1_s90,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s87, DataTypeConversion1_out1_s84 ],  ...
if_tmp3__0_1_out1_s91,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n17( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_boolean_t;
pirTyp6 = pir_signed_t( 16 );
pirTyp1 = pir_sfixpt_t( 13, 0 );
pirTyp5 = pir_sfixpt_t( 14, 0 );
pirTyp4 = pir_sfixpt_t( 15, 0 );
pirTyp18 = pir_sfixpt_t( 16, 0 );
pirTyp3 = pir_sfixpt_t( 17, 0 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp17 = pir_sfixpt_t( 32, 0 );
pirTyp9 = pir_ufixpt_t( 1, 0 );
pirTyp15 = pir_ufixpt_t( 11, 0 );
pirTyp13 = pir_ufixpt_t( 12, 0 );
pirTyp10 = pir_ufixpt_t( 13, 0 );
pirTyp16 = pir_ufixpt_t( 14, 0 );
pirTyp8 = pir_ufixpt_t( 15, 0 );
pirTyp14 = pir_ufixpt_t( 17, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );
pirTyp12 = pir_unsigned_t( 16 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt4 = numerictype( 1, 14, 0 );
nt2 = numerictype( 1, 15, 0 );
nt3 = numerictype( 1, 28, 0 );


hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
sqrt_Long_get_digit12_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit12_out1', pirTyp3, slRate1 );
sqrt_Long_get_digit12_out1_s12.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
sqrt_Long_get_digit12_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit12_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit12_out2_s13.addReceiver( hN, 1 );

Delay1_PS13_out1_s2 = addSignal( hN, 'Delay1_PS13_out1', pirTyp4, slRate1 );
Delay2_PS12_out1_s3 = addSignal( hN, 'Delay2_PS12_out1', pirTyp2, slRate1 );
Delay3_PS12_out1_s4 = addSignal( hN, 'Delay3_PS12_out1', pirTyp5, slRate1 );
Delay4_PS14_out1_s5 = addSignal( hN, 'Delay4_PS14_out1', pirTyp2, slRate1 );
Delay5_PS14_out1_s6 = addSignal( hN, 'Delay5_PS14_out1', pirTyp6, slRate1 );
Delay_PS13_out1_s7 = addSignal( hN, 'Delay_PS13_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit10_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit10_out1', pirTyp4, slRate1 );
sqrt_Long_get_digit10_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit10_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit11_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit11_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit11_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit11_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit9_out1_s14 = addSignal( hN, 'sqrt_Long_get_digit9_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit9_out2_s15 = addSignal( hN, 'sqrt_Long_get_digit9_out2', pirTyp2, slRate1 );
BitConcat_out1_s18 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s19 = addSignal( hN, 'Bit Concat1_out1', pirTyp8, slRate1 );
BitSlice_out1_s20 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s21 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s22 = addSignal( hN, 'Bit Slice2_out1', pirTyp10, slRate1 );
BitSet1_out1_s23 = addSignal( hN, 'BitSet1_out1', pirTyp4, slRate1 );
BitSet2_out1_s24 = addSignal( hN, 'BitSet2_out1', pirTyp4, slRate1 );
Constant_out1_s25 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s26 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s27 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp4, slRate1 );
DataTypeConversion3_out1_s28 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s29 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s30 = addSignal( hN, 'R - tmp2_out1', pirTyp4, slRate1 );
bitsll_Q_1_1_out1_s31 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp4, slRate1 );
bitsll_R_1__out1_s32 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s33 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp4, slRate1 );
if_tmp3__0_1_out1_s34 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp4, slRate1 );
BitConcat_out1_s37 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s38 = addSignal( hN, 'Bit Concat1_out1', pirTyp12, slRate1 );
BitSlice_out1_s39 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s40 = addSignal( hN, 'Bit Slice1_out1', pirTyp12, slRate1 );
BitSlice2_out1_s41 = addSignal( hN, 'Bit Slice2_out1', pirTyp13, slRate1 );
BitSet1_out1_s42 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
BitSet2_out1_s43 = addSignal( hN, 'BitSet2_out1', pirTyp6, slRate1 );
Constant_out1_s44 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s45 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s46 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion3_out1_s47 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s48 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s49 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
bitsll_Q_1_1_out1_s50 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s51 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s52 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s53 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s56 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s57 = addSignal( hN, 'Bit Concat1_out1', pirTyp14, slRate1 );
BitSlice_out1_s58 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s59 = addSignal( hN, 'Bit Slice1_out1', pirTyp14, slRate1 );
BitSlice2_out1_s60 = addSignal( hN, 'Bit Slice2_out1', pirTyp15, slRate1 );
BitSet1_out1_s61 = addSignal( hN, 'BitSet1_out1', pirTyp3, slRate1 );
BitSet2_out1_s62 = addSignal( hN, 'BitSet2_out1', pirTyp3, slRate1 );
Constant_out1_s63 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s64 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s65 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp3, slRate1 );
DataTypeConversion3_out1_s66 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp3, slRate1 );
LogicalOperator_out1_s67 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s68 = addSignal( hN, 'R - tmp2_out1', pirTyp3, slRate1 );
bitsll_Q_1_1_out1_s69 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp3, slRate1 );
bitsll_R_1__out1_s70 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s71 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp3, slRate1 );
if_tmp3__0_1_out1_s72 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp3, slRate1 );
BitConcat_out1_s75 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s76 = addSignal( hN, 'Bit Concat1_out1', pirTyp16, slRate1 );
BitSlice_out1_s77 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s78 = addSignal( hN, 'Bit Slice1_out1', pirTyp16, slRate1 );
BitSlice2_out1_s79 = addSignal( hN, 'Bit Slice2_out1', pirTyp16, slRate1 );
BitSet1_out1_s80 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
BitSet2_out1_s81 = addSignal( hN, 'BitSet2_out1', pirTyp5, slRate1 );
Constant_out1_s82 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s83 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s84 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s85 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp5, slRate1 );
LogicalOperator_out1_s86 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s87 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1_1_out1_s88 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s89 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s90 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s91 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s25,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s44,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s63,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s82,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit10_out1_s8,  ...
Delay1_PS13_out1_s2,  ...
pipestage( 13 ), 'Delay1_PS13',  ...
fi( 0, nt2, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit9_out2_s15,  ...
Delay2_PS12_out1_s3,  ...
pipestage( 12 ), 'Delay2_PS12',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit9_out1_s14,  ...
Delay3_PS12_out1_s4,  ...
pipestage( 12 ), 'Delay3_PS12',  ...
fi( 0, nt4, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit11_out2_s11,  ...
Delay4_PS14_out1_s5,  ...
pipestage( 14 ), 'Delay4_PS14',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit11_out1_s10,  ...
Delay5_PS14_out1_s6,  ...
pipestage( 14 ), 'Delay5_PS14',  ...
int16( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit10_out2_s9,  ...
Delay_PS13_out1_s7,  ...
pipestage( 13 ), 'Delay_PS13',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s33,  ...
sqrt_Long_get_digit10_out1_s8,  ...
'sqrt_Long_get_digit10_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s26,  ...
sqrt_Long_get_digit10_out2_s9,  ...
'sqrt_Long_get_digit10_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s52,  ...
sqrt_Long_get_digit11_out1_s10,  ...
'sqrt_Long_get_digit11_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s45,  ...
sqrt_Long_get_digit11_out2_s11,  ...
'sqrt_Long_get_digit11_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s71,  ...
sqrt_Long_get_digit12_out1_s12,  ...
'sqrt_Long_get_digit12_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s64,  ...
sqrt_Long_get_digit12_out2_s13,  ...
'sqrt_Long_get_digit12_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s90,  ...
sqrt_Long_get_digit9_out1_s14,  ...
'sqrt_Long_get_digit9_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s83,  ...
sqrt_Long_get_digit9_out2_s15,  ...
'sqrt_Long_get_digit9_out2' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s34, BitSlice2_out1_s22 ],  ...
BitConcat_out1_s18,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay3_PS12_out1_s4, Constant_out1_s25 ],  ...
BitConcat1_out1_s19,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s30,  ...
BitSlice_out1_s20,  ...
14, 14, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice1_out1_s21,  ...
27, 13, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice2_out1_s22,  ...
12, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
BitSet1_out1_s23,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s31,  ...
BitSet2_out1_s24,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s18,  ...
DataTypeConversion_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s21,  ...
DataTypeConversion1_out1_s27,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s19,  ...
DataTypeConversion3_out1_s28,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s20,  ...
LogicalOperator_out1_s29,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s27, BitSet2_out1_s24 ],  ...
R_Tmp2_out1_s30,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp17, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s28,  ...
bitsll_Q_1_1_out1_s31,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay2_PS12_out1_s3,  ...
bitsll_R_1__out1_s32,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s23, DataTypeConversion3_out1_s28 ],  ...
if_tmp3__0__out1_s33,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s30, DataTypeConversion1_out1_s27 ],  ...
if_tmp3__0_1_out1_s34,  ...
LogicalOperator_out1_s29, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s53, BitSlice2_out1_s41 ],  ...
BitConcat_out1_s37,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_PS13_out1_s2, Constant_out1_s44 ],  ...
BitConcat1_out1_s38,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s49,  ...
BitSlice_out1_s39,  ...
15, 15, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice1_out1_s40,  ...
27, 12, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice2_out1_s41,  ...
11, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
BitSet1_out1_s42,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s50,  ...
BitSet2_out1_s43,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s37,  ...
DataTypeConversion_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s40,  ...
DataTypeConversion1_out1_s46,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s38,  ...
DataTypeConversion3_out1_s47,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s39,  ...
LogicalOperator_out1_s48,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s46, BitSet2_out1_s43 ],  ...
R_Tmp2_out1_s49,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
bitsll_Q_1_1_out1_s50,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay_PS13_out1_s7,  ...
bitsll_R_1__out1_s51,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s42, DataTypeConversion3_out1_s47 ],  ...
if_tmp3__0__out1_s52,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s49, DataTypeConversion1_out1_s46 ],  ...
if_tmp3__0_1_out1_s53,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s72, BitSlice2_out1_s60 ],  ...
BitConcat_out1_s56,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_PS14_out1_s6, Constant_out1_s63 ],  ...
BitConcat1_out1_s57,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s68,  ...
BitSlice_out1_s58,  ...
16, 16, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice1_out1_s59,  ...
27, 11, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice2_out1_s60,  ...
10, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
BitSet1_out1_s61,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s69,  ...
BitSet2_out1_s62,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s56,  ...
DataTypeConversion_out1_s64,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s59,  ...
DataTypeConversion1_out1_s65,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s57,  ...
DataTypeConversion3_out1_s66,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s58,  ...
LogicalOperator_out1_s67,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s65, BitSet2_out1_s62 ],  ...
R_Tmp2_out1_s68,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp17, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
bitsll_Q_1_1_out1_s69,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay4_PS14_out1_s5,  ...
bitsll_R_1__out1_s70,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s61, DataTypeConversion3_out1_s66 ],  ...
if_tmp3__0__out1_s71,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s68, DataTypeConversion1_out1_s65 ],  ...
if_tmp3__0_1_out1_s72,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s91, BitSlice2_out1_s79 ],  ...
BitConcat_out1_s75,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s82 ],  ...
BitConcat1_out1_s76,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s87,  ...
BitSlice_out1_s77,  ...
13, 13, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice1_out1_s78,  ...
27, 14, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice2_out1_s79,  ...
13, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
BitSet1_out1_s80,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s88,  ...
BitSet2_out1_s81,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s75,  ...
DataTypeConversion_out1_s83,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s78,  ...
DataTypeConversion1_out1_s84,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s76,  ...
DataTypeConversion3_out1_s85,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s77,  ...
LogicalOperator_out1_s86,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s84, BitSet2_out1_s81 ],  ...
R_Tmp2_out1_s87,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp17, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
bitsll_Q_1_1_out1_s88,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s89,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s80, DataTypeConversion3_out1_s85 ],  ...
if_tmp3__0__out1_s90,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s87, DataTypeConversion1_out1_s84 ],  ...
if_tmp3__0_1_out1_s91,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n12( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_boolean_t;
pirTyp6 = pir_sfixpt_t( 10, 0 );
pirTyp4 = pir_sfixpt_t( 11, 0 );
pirTyp5 = pir_sfixpt_t( 12, 0 );
pirTyp3 = pir_sfixpt_t( 13, 0 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp18 = pir_sfixpt_t( 32, 0 );
pirTyp1 = pir_sfixpt_t( 9, 0 );
pirTyp8 = pir_ufixpt_t( 1, 0 );
pirTyp10 = pir_ufixpt_t( 10, 0 );
pirTyp12 = pir_ufixpt_t( 11, 0 );
pirTyp14 = pir_ufixpt_t( 12, 0 );
pirTyp16 = pir_ufixpt_t( 13, 0 );
pirTyp17 = pir_ufixpt_t( 15, 0 );
pirTyp13 = pir_ufixpt_t( 17, 0 );
pirTyp9 = pir_ufixpt_t( 18, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );
pirTyp15 = pir_unsigned_t( 16 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt5 = numerictype( 1, 10, 0 );
nt2 = numerictype( 1, 11, 0 );
nt3 = numerictype( 1, 12, 0 );
nt4 = numerictype( 1, 28, 0 );


hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
sqrt_Long_get_digit8_out1_s14 = addSignal( hN, 'sqrt_Long_get_digit8_out1', pirTyp3, slRate1 );
sqrt_Long_get_digit8_out1_s14.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
sqrt_Long_get_digit8_out2_s15 = addSignal( hN, 'sqrt_Long_get_digit8_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit8_out2_s15.addReceiver( hN, 1 );

Delay1_PS9_out1_s2 = addSignal( hN, 'Delay1_PS9_out1', pirTyp4, slRate1 );
Delay2_PS10_out1_s3 = addSignal( hN, 'Delay2_PS10_out1', pirTyp5, slRate1 );
Delay3_PS10_out1_s4 = addSignal( hN, 'Delay3_PS10_out1', pirTyp2, slRate1 );
Delay4_PS8_out1_s5 = addSignal( hN, 'Delay4_PS8_out1', pirTyp6, slRate1 );
Delay5_PS8_out1_s6 = addSignal( hN, 'Delay5_PS8_out1', pirTyp2, slRate1 );
Delay_PS9_out1_s7 = addSignal( hN, 'Delay_PS9_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit5_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit5_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit5_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit5_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit6_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit6_out1', pirTyp4, slRate1 );
sqrt_Long_get_digit6_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit6_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit7_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit7_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit7_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit7_out2', pirTyp2, slRate1 );
BitConcat_out1_s18 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitSlice_out1_s19 = addSignal( hN, 'Bit Slice_out1', pirTyp8, slRate1 );
BitSlice2_out1_s20 = addSignal( hN, 'Bit Slice2_out1', pirTyp9, slRate1 );
BitSet1_out1_s21 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
BitSet2_out1_s22 = addSignal( hN, 'BitSet2_out1', pirTyp6, slRate1 );
BuildQuotientBit_by_bit_out1_s23 = addSignal( hN, 'Build Quotient bit-by-bit_out1', pirTyp10, slRate1 );
Constant_out1_s24 = addSignal( hN, 'Constant_out1', pirTyp8, slRate1 );
DataTypeConversion_out1_s25 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s26 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion3_out1_s27 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s28 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s29 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
SplitRemainderAccordingly_out1_s30 = addSignal( hN, 'Split Remainder accordingly_out1', pirTyp10, slRate1 );
bitsll_Q_1_1_out1_s31 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s32 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s33 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s34 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s37 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s38 = addSignal( hN, 'Bit Concat1_out1', pirTyp12, slRate1 );
BitSlice_out1_s39 = addSignal( hN, 'Bit Slice_out1', pirTyp8, slRate1 );
BitSlice1_out1_s40 = addSignal( hN, 'Bit Slice1_out1', pirTyp12, slRate1 );
BitSlice2_out1_s41 = addSignal( hN, 'Bit Slice2_out1', pirTyp13, slRate1 );
BitSet1_out1_s42 = addSignal( hN, 'BitSet1_out1', pirTyp4, slRate1 );
BitSet2_out1_s43 = addSignal( hN, 'BitSet2_out1', pirTyp4, slRate1 );
Constant_out1_s44 = addSignal( hN, 'Constant_out1', pirTyp8, slRate1 );
DataTypeConversion_out1_s45 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s46 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp4, slRate1 );
DataTypeConversion3_out1_s47 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s48 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s49 = addSignal( hN, 'R - tmp2_out1', pirTyp4, slRate1 );
bitsll_Q_1_1_out1_s50 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp4, slRate1 );
bitsll_R_1__out1_s51 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s52 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp4, slRate1 );
if_tmp3__0_1_out1_s53 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp4, slRate1 );
BitConcat_out1_s56 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s57 = addSignal( hN, 'Bit Concat1_out1', pirTyp14, slRate1 );
BitSlice_out1_s58 = addSignal( hN, 'Bit Slice_out1', pirTyp8, slRate1 );
BitSlice1_out1_s59 = addSignal( hN, 'Bit Slice1_out1', pirTyp14, slRate1 );
BitSlice2_out1_s60 = addSignal( hN, 'Bit Slice2_out1', pirTyp15, slRate1 );
BitSet1_out1_s61 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
BitSet2_out1_s62 = addSignal( hN, 'BitSet2_out1', pirTyp5, slRate1 );
Constant_out1_s63 = addSignal( hN, 'Constant_out1', pirTyp8, slRate1 );
DataTypeConversion_out1_s64 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s65 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s66 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp5, slRate1 );
LogicalOperator_out1_s67 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s68 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1_1_out1_s69 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s70 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s71 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s72 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );
BitConcat_out1_s75 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s76 = addSignal( hN, 'Bit Concat1_out1', pirTyp16, slRate1 );
BitSlice_out1_s77 = addSignal( hN, 'Bit Slice_out1', pirTyp8, slRate1 );
BitSlice1_out1_s78 = addSignal( hN, 'Bit Slice1_out1', pirTyp16, slRate1 );
BitSlice2_out1_s79 = addSignal( hN, 'Bit Slice2_out1', pirTyp17, slRate1 );
BitSet1_out1_s80 = addSignal( hN, 'BitSet1_out1', pirTyp3, slRate1 );
BitSet2_out1_s81 = addSignal( hN, 'BitSet2_out1', pirTyp3, slRate1 );
Constant_out1_s82 = addSignal( hN, 'Constant_out1', pirTyp8, slRate1 );
DataTypeConversion_out1_s83 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s84 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp3, slRate1 );
DataTypeConversion3_out1_s85 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp3, slRate1 );
LogicalOperator_out1_s86 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s87 = addSignal( hN, 'R - tmp2_out1', pirTyp3, slRate1 );
bitsll_Q_1_1_out1_s88 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp3, slRate1 );
bitsll_R_1__out1_s89 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s90 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp3, slRate1 );
if_tmp3__0_1_out1_s91 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s24,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s44,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s63,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s82,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit6_out1_s10,  ...
Delay1_PS9_out1_s2,  ...
pipestage( 9 ), 'Delay1_PS9',  ...
fi( 0, nt2, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit7_out1_s12,  ...
Delay2_PS10_out1_s3,  ...
pipestage( 10 ), 'Delay2_PS10',  ...
fi( 0, nt3, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit7_out2_s13,  ...
Delay3_PS10_out1_s4,  ...
pipestage( 10 ), 'Delay3_PS10',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit5_out1_s8,  ...
Delay4_PS8_out1_s5,  ...
pipestage( 8 ), 'Delay4_PS8',  ...
fi( 0, nt5, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit5_out2_s9,  ...
Delay5_PS8_out1_s6,  ...
pipestage( 8 ), 'Delay5_PS8',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit6_out2_s11,  ...
Delay_PS9_out1_s7,  ...
pipestage( 9 ), 'Delay_PS9',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s33,  ...
sqrt_Long_get_digit5_out1_s8,  ...
'sqrt_Long_get_digit5_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s25,  ...
sqrt_Long_get_digit5_out2_s9,  ...
'sqrt_Long_get_digit5_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s52,  ...
sqrt_Long_get_digit6_out1_s10,  ...
'sqrt_Long_get_digit6_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s45,  ...
sqrt_Long_get_digit6_out2_s11,  ...
'sqrt_Long_get_digit6_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s71,  ...
sqrt_Long_get_digit7_out1_s12,  ...
'sqrt_Long_get_digit7_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s64,  ...
sqrt_Long_get_digit7_out2_s13,  ...
'sqrt_Long_get_digit7_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s90,  ...
sqrt_Long_get_digit8_out1_s14,  ...
'sqrt_Long_get_digit8_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s83,  ...
sqrt_Long_get_digit8_out2_s15,  ...
'sqrt_Long_get_digit8_out2' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s34, BitSlice2_out1_s20 ],  ...
BitConcat_out1_s18,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s29,  ...
BitSlice_out1_s19,  ...
9, 9, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
BitSlice2_out1_s20,  ...
17, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s27,  ...
BitSet1_out1_s21,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s31,  ...
BitSet2_out1_s22,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s24 ],  ...
BuildQuotientBit_by_bit_out1_s23,  ...
'Build Quotient bit-by-bit' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s18,  ...
DataTypeConversion_out1_s25,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
SplitRemainderAccordingly_out1_s30,  ...
DataTypeConversion1_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BuildQuotientBit_by_bit_out1_s23,  ...
DataTypeConversion3_out1_s27,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s19,  ...
LogicalOperator_out1_s28,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s26, BitSet2_out1_s22 ],  ...
R_Tmp2_out1_s29,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s32,  ...
SplitRemainderAccordingly_out1_s30,  ...
27, 18, 'Split Remainder accordingly' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s27,  ...
bitsll_Q_1_1_out1_s31,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s32,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s21, DataTypeConversion3_out1_s27 ],  ...
if_tmp3__0__out1_s33,  ...
LogicalOperator_out1_s28, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s29, DataTypeConversion1_out1_s26 ],  ...
if_tmp3__0_1_out1_s34,  ...
LogicalOperator_out1_s28, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s53, BitSlice2_out1_s41 ],  ...
BitConcat_out1_s37,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay4_PS8_out1_s5, Constant_out1_s44 ],  ...
BitConcat1_out1_s38,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s49,  ...
BitSlice_out1_s39,  ...
10, 10, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice1_out1_s40,  ...
27, 17, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s51,  ...
BitSlice2_out1_s41,  ...
16, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
BitSet1_out1_s42,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s50,  ...
BitSet2_out1_s43,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s37,  ...
DataTypeConversion_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s40,  ...
DataTypeConversion1_out1_s46,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s38,  ...
DataTypeConversion3_out1_s47,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s39,  ...
LogicalOperator_out1_s48,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s46, BitSet2_out1_s43 ],  ...
R_Tmp2_out1_s49,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s47,  ...
bitsll_Q_1_1_out1_s50,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay5_PS8_out1_s6,  ...
bitsll_R_1__out1_s51,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s42, DataTypeConversion3_out1_s47 ],  ...
if_tmp3__0__out1_s52,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s49, DataTypeConversion1_out1_s46 ],  ...
if_tmp3__0_1_out1_s53,  ...
LogicalOperator_out1_s48, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s72, BitSlice2_out1_s60 ],  ...
BitConcat_out1_s56,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_PS9_out1_s2, Constant_out1_s63 ],  ...
BitConcat1_out1_s57,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s68,  ...
BitSlice_out1_s58,  ...
11, 11, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice1_out1_s59,  ...
27, 16, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s70,  ...
BitSlice2_out1_s60,  ...
15, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
BitSet1_out1_s61,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s69,  ...
BitSet2_out1_s62,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s56,  ...
DataTypeConversion_out1_s64,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s59,  ...
DataTypeConversion1_out1_s65,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s57,  ...
DataTypeConversion3_out1_s66,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s58,  ...
LogicalOperator_out1_s67,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s65, BitSet2_out1_s62 ],  ...
R_Tmp2_out1_s68,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s66,  ...
bitsll_Q_1_1_out1_s69,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay_PS9_out1_s7,  ...
bitsll_R_1__out1_s70,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s61, DataTypeConversion3_out1_s66 ],  ...
if_tmp3__0__out1_s71,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s68, DataTypeConversion1_out1_s65 ],  ...
if_tmp3__0_1_out1_s72,  ...
LogicalOperator_out1_s67, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s91, BitSlice2_out1_s79 ],  ...
BitConcat_out1_s75,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay2_PS10_out1_s3, Constant_out1_s82 ],  ...
BitConcat1_out1_s76,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s87,  ...
BitSlice_out1_s77,  ...
12, 12, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice1_out1_s78,  ...
27, 15, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s89,  ...
BitSlice2_out1_s79,  ...
14, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
BitSet1_out1_s80,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s88,  ...
BitSet2_out1_s81,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s75,  ...
DataTypeConversion_out1_s83,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s78,  ...
DataTypeConversion1_out1_s84,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s76,  ...
DataTypeConversion3_out1_s85,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s77,  ...
LogicalOperator_out1_s86,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s84, BitSet2_out1_s81 ],  ...
R_Tmp2_out1_s87,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s85,  ...
bitsll_Q_1_1_out1_s88,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay3_PS10_out1_s4,  ...
bitsll_R_1__out1_s89,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s80, DataTypeConversion3_out1_s85 ],  ...
if_tmp3__0__out1_s90,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s87, DataTypeConversion1_out1_s84 ],  ...
if_tmp3__0_1_out1_s91,  ...
LogicalOperator_out1_s86, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n7( ~, hN, pipestage, slRate1 )
pirTyp11 = pir_boolean_t;
pirTyp5 = pir_signed_t( 8 );
pirTyp2 = pir_sfixpt_t( 28, 0 );
pirTyp18 = pir_sfixpt_t( 32, 0 );
pirTyp1 = pir_sfixpt_t( 5, 0 );
pirTyp4 = pir_sfixpt_t( 6, 0 );
pirTyp6 = pir_sfixpt_t( 7, 0 );
pirTyp19 = pir_sfixpt_t( 8, 0 );
pirTyp3 = pir_sfixpt_t( 9, 0 );
pirTyp9 = pir_ufixpt_t( 1, 0 );
pirTyp17 = pir_ufixpt_t( 19, 0 );
pirTyp15 = pir_ufixpt_t( 20, 0 );
pirTyp13 = pir_ufixpt_t( 21, 0 );
pirTyp10 = pir_ufixpt_t( 22, 0 );
pirTyp7 = pir_ufixpt_t( 28, 0 );
pirTyp8 = pir_ufixpt_t( 6, 0 );
pirTyp12 = pir_ufixpt_t( 7, 0 );
pirTyp16 = pir_ufixpt_t( 9, 0 );
pirTyp14 = pir_unsigned_t( 8 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt3 = numerictype( 1, 28, 0 );
nt2 = numerictype( 1, 6, 0 );


hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Out1' );
sqrt_Long_get_digit4_out1_s12 = addSignal( hN, 'sqrt_Long_get_digit4_out1', pirTyp3, slRate1 );
sqrt_Long_get_digit4_out1_s12.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
sqrt_Long_get_digit4_out2_s13 = addSignal( hN, 'sqrt_Long_get_digit4_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit4_out2_s13.addReceiver( hN, 1 );

Delay2_PS5_out1_s2 = addSignal( hN, 'Delay2_PS5_out1', pirTyp4, slRate1 );
Delay3_PS5_out1_s3 = addSignal( hN, 'Delay3_PS5_out1', pirTyp2, slRate1 );
Delay4_PS6_out1_s4 = addSignal( hN, 'Delay4_PS6_out1', pirTyp5, slRate1 );
Delay5_PS6_out1_s5 = addSignal( hN, 'Delay5_PS6_out1', pirTyp2, slRate1 );
sqrt_Long_get_digit1_out1_s6 = addSignal( hN, 'sqrt_Long_get_digit1_out1', pirTyp4, slRate1 );
sqrt_Long_get_digit1_out2_s7 = addSignal( hN, 'sqrt_Long_get_digit1_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit2_out1_s8 = addSignal( hN, 'sqrt_Long_get_digit2_out1', pirTyp6, slRate1 );
sqrt_Long_get_digit2_out2_s9 = addSignal( hN, 'sqrt_Long_get_digit2_out2', pirTyp2, slRate1 );
sqrt_Long_get_digit3_out1_s10 = addSignal( hN, 'sqrt_Long_get_digit3_out1', pirTyp5, slRate1 );
sqrt_Long_get_digit3_out2_s11 = addSignal( hN, 'sqrt_Long_get_digit3_out2', pirTyp2, slRate1 );
BitConcat_out1_s16 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s17 = addSignal( hN, 'Bit Concat1_out1', pirTyp8, slRate1 );
BitSlice_out1_s18 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s19 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s20 = addSignal( hN, 'Bit Slice2_out1', pirTyp10, slRate1 );
BitSet_out1_s21 = addSignal( hN, 'BitSet_out1', pirTyp4, slRate1 );
BitSet1_out1_s22 = addSignal( hN, 'BitSet1_out1', pirTyp4, slRate1 );
Constant_out1_s23 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s24 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s25 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp4, slRate1 );
DataTypeConversion2_out1_s26 = addSignal( hN, 'Data Type Conversion2_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s27 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s28 = addSignal( hN, 'R - tmp2_out1', pirTyp4, slRate1 );
bitsll_Q_1__out1_s29 = addSignal( hN, 'bitsll(Q, 1)_out1', pirTyp4, slRate1 );
bitsll_R_1__out1_s30 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s31 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp4, slRate1 );
if_tmp3__0_1_out1_s32 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp4, slRate1 );
BitConcat_out1_s35 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s36 = addSignal( hN, 'Bit Concat1_out1', pirTyp12, slRate1 );
BitSlice_out1_s37 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s38 = addSignal( hN, 'Bit Slice1_out1', pirTyp12, slRate1 );
BitSlice2_out1_s39 = addSignal( hN, 'Bit Slice2_out1', pirTyp13, slRate1 );
BitSet_out1_s40 = addSignal( hN, 'BitSet_out1', pirTyp6, slRate1 );
BitSet1_out1_s41 = addSignal( hN, 'BitSet1_out1', pirTyp6, slRate1 );
Constant_out1_s42 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s43 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s44 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp6, slRate1 );
DataTypeConversion2_out1_s45 = addSignal( hN, 'Data Type Conversion2_out1', pirTyp6, slRate1 );
LogicalOperator_out1_s46 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s47 = addSignal( hN, 'R - tmp2_out1', pirTyp6, slRate1 );
bitsll_Q_1__out1_s48 = addSignal( hN, 'bitsll(Q, 1)_out1', pirTyp6, slRate1 );
bitsll_R_1__out1_s49 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s50 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp6, slRate1 );
if_tmp3__0_1_out1_s51 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp6, slRate1 );
BitConcat_out1_s54 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s55 = addSignal( hN, 'Bit Concat1_out1', pirTyp14, slRate1 );
BitSlice_out1_s56 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s57 = addSignal( hN, 'Bit Slice1_out1', pirTyp14, slRate1 );
BitSlice2_out1_s58 = addSignal( hN, 'Bit Slice2_out1', pirTyp15, slRate1 );
BitSet_out1_s59 = addSignal( hN, 'BitSet_out1', pirTyp5, slRate1 );
BitSet1_out1_s60 = addSignal( hN, 'BitSet1_out1', pirTyp5, slRate1 );
Constant_out1_s61 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s62 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s63 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion2_out1_s64 = addSignal( hN, 'Data Type Conversion2_out1', pirTyp5, slRate1 );
LogicalOperator_out1_s65 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s66 = addSignal( hN, 'R - tmp2_out1', pirTyp5, slRate1 );
bitsll_Q_1__out1_s67 = addSignal( hN, 'bitsll(Q, 1)_out1', pirTyp5, slRate1 );
bitsll_R_1__out1_s68 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s69 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp5, slRate1 );
if_tmp3__0_1_out1_s70 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp5, slRate1 );
BitConcat_out1_s73 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitConcat1_out1_s74 = addSignal( hN, 'Bit Concat1_out1', pirTyp16, slRate1 );
BitSlice_out1_s75 = addSignal( hN, 'Bit Slice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s76 = addSignal( hN, 'Bit Slice1_out1', pirTyp16, slRate1 );
BitSlice2_out1_s77 = addSignal( hN, 'Bit Slice2_out1', pirTyp17, slRate1 );
BitSet1_out1_s78 = addSignal( hN, 'BitSet1_out1', pirTyp3, slRate1 );
BitSet2_out1_s79 = addSignal( hN, 'BitSet2_out1', pirTyp3, slRate1 );
Constant_out1_s80 = addSignal( hN, 'Constant_out1', pirTyp9, slRate1 );
DataTypeConversion_out1_s81 = addSignal( hN, 'Data Type Conversion_out1', pirTyp2, slRate1 );
DataTypeConversion1_out1_s82 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp3, slRate1 );
DataTypeConversion3_out1_s83 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp3, slRate1 );
LogicalOperator_out1_s84 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp11, slRate1 );
R_Tmp2_out1_s85 = addSignal( hN, 'R - tmp2_out1', pirTyp3, slRate1 );
bitsll_Q_1_1_out1_s86 = addSignal( hN, 'bitsll(Q, 1)1_out1', pirTyp3, slRate1 );
bitsll_R_1__out1_s87 = addSignal( hN, 'bitsll(R, 1)_out1', pirTyp2, slRate1 );
if_tmp3__0__out1_s88 = addSignal( hN, 'if (tmp3 >= 0)_out1', pirTyp3, slRate1 );
if_tmp3__0_1_out1_s89 = addSignal( hN, 'if (tmp3 >= 0)1_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s23,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s42,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s61,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s80,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit1_out1_s6,  ...
Delay2_PS5_out1_s2,  ...
pipestage( 5 ), 'Delay2_PS5',  ...
fi( 0, nt2, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit1_out2_s7,  ...
Delay3_PS5_out1_s3,  ...
pipestage( 5 ), 'Delay3_PS5',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit3_out1_s10,  ...
Delay4_PS6_out1_s4,  ...
pipestage( 6 ), 'Delay4_PS6',  ...
int8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Long_get_digit3_out2_s11,  ...
Delay5_PS6_out1_s5,  ...
pipestage( 6 ), 'Delay5_PS6',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s31,  ...
sqrt_Long_get_digit1_out1_s6,  ...
'sqrt_Long_get_digit1_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s24,  ...
sqrt_Long_get_digit1_out2_s7,  ...
'sqrt_Long_get_digit1_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s50,  ...
sqrt_Long_get_digit2_out1_s8,  ...
'sqrt_Long_get_digit2_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s43,  ...
sqrt_Long_get_digit2_out2_s9,  ...
'sqrt_Long_get_digit2_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s69,  ...
sqrt_Long_get_digit3_out1_s10,  ...
'sqrt_Long_get_digit3_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s62,  ...
sqrt_Long_get_digit3_out2_s11,  ...
'sqrt_Long_get_digit3_out2' );

pirelab.getWireComp( hN,  ...
if_tmp3__0__out1_s88,  ...
sqrt_Long_get_digit4_out1_s12,  ...
'sqrt_Long_get_digit4_out1' );

pirelab.getWireComp( hN,  ...
DataTypeConversion_out1_s81,  ...
sqrt_Long_get_digit4_out2_s13,  ...
'sqrt_Long_get_digit4_out2' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s32, BitSlice2_out1_s20 ],  ...
BitConcat_out1_s16,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ In1_s0, Constant_out1_s23 ],  ...
BitConcat1_out1_s17,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s28,  ...
BitSlice_out1_s18,  ...
5, 5, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s30,  ...
BitSlice1_out1_s19,  ...
27, 22, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s30,  ...
BitSlice2_out1_s20,  ...
21, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1__out1_s29,  ...
BitSet_out1_s21,  ...
1, 1,  ...
'BitSet', 1 );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion2_out1_s26,  ...
BitSet1_out1_s22,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s16,  ...
DataTypeConversion_out1_s24,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s19,  ...
DataTypeConversion1_out1_s25,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s17,  ...
DataTypeConversion2_out1_s26,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion2' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s18,  ...
LogicalOperator_out1_s27,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s25, BitSet_out1_s21 ],  ...
R_Tmp2_out1_s28,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion2_out1_s26,  ...
bitsll_Q_1__out1_s29,  ...
'sll', 1, 0, 'bitsll(Q, 1)' );


pirelab.getBitShiftComp( hN,  ...
In2_s1,  ...
bitsll_R_1__out1_s30,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s22, DataTypeConversion2_out1_s26 ],  ...
if_tmp3__0__out1_s31,  ...
LogicalOperator_out1_s27, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s28, DataTypeConversion1_out1_s25 ],  ...
if_tmp3__0_1_out1_s32,  ...
LogicalOperator_out1_s27, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s51, BitSlice2_out1_s39 ],  ...
BitConcat_out1_s35,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay2_PS5_out1_s2, Constant_out1_s42 ],  ...
BitConcat1_out1_s36,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s47,  ...
BitSlice_out1_s37,  ...
6, 6, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s49,  ...
BitSlice1_out1_s38,  ...
27, 21, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s49,  ...
BitSlice2_out1_s39,  ...
20, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1__out1_s48,  ...
BitSet_out1_s40,  ...
1, 1,  ...
'BitSet', 1 );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion2_out1_s45,  ...
BitSet1_out1_s41,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s35,  ...
DataTypeConversion_out1_s43,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s38,  ...
DataTypeConversion1_out1_s44,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s36,  ...
DataTypeConversion2_out1_s45,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion2' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s37,  ...
LogicalOperator_out1_s46,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s44, BitSet_out1_s40 ],  ...
R_Tmp2_out1_s47,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion2_out1_s45,  ...
bitsll_Q_1__out1_s48,  ...
'sll', 1, 0, 'bitsll(Q, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay3_PS5_out1_s3,  ...
bitsll_R_1__out1_s49,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s41, DataTypeConversion2_out1_s45 ],  ...
if_tmp3__0__out1_s50,  ...
LogicalOperator_out1_s46, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s47, DataTypeConversion1_out1_s44 ],  ...
if_tmp3__0_1_out1_s51,  ...
LogicalOperator_out1_s46, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s70, BitSlice2_out1_s58 ],  ...
BitConcat_out1_s54,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ sqrt_Long_get_digit2_out1_s8, Constant_out1_s61 ],  ...
BitConcat1_out1_s55,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s66,  ...
BitSlice_out1_s56,  ...
7, 7, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s68,  ...
BitSlice1_out1_s57,  ...
27, 20, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s68,  ...
BitSlice2_out1_s58,  ...
19, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1__out1_s67,  ...
BitSet_out1_s59,  ...
1, 1,  ...
'BitSet', 1 );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion2_out1_s64,  ...
BitSet1_out1_s60,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s54,  ...
DataTypeConversion_out1_s62,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s57,  ...
DataTypeConversion1_out1_s63,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s55,  ...
DataTypeConversion2_out1_s64,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion2' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s56,  ...
LogicalOperator_out1_s65,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s63, BitSet_out1_s59 ],  ...
R_Tmp2_out1_s66,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp19, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion2_out1_s64,  ...
bitsll_Q_1__out1_s67,  ...
'sll', 1, 0, 'bitsll(Q, 1)' );


pirelab.getBitShiftComp( hN,  ...
sqrt_Long_get_digit2_out2_s9,  ...
bitsll_R_1__out1_s68,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s60, DataTypeConversion2_out1_s64 ],  ...
if_tmp3__0__out1_s69,  ...
LogicalOperator_out1_s65, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s66, DataTypeConversion1_out1_s63 ],  ...
if_tmp3__0_1_out1_s70,  ...
LogicalOperator_out1_s65, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitConcatComp( hN,  ...
[ if_tmp3__0_1_out1_s89, BitSlice2_out1_s77 ],  ...
BitConcat_out1_s73,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ Delay4_PS6_out1_s4, Constant_out1_s80 ],  ...
BitConcat1_out1_s74,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
R_Tmp2_out1_s85,  ...
BitSlice_out1_s75,  ...
8, 8, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s87,  ...
BitSlice1_out1_s76,  ...
27, 19, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
bitsll_R_1__out1_s87,  ...
BitSlice2_out1_s77,  ...
18, 0, 'Bit Slice2' );


pirelab.getBitSetComp( hN,  ...
DataTypeConversion3_out1_s83,  ...
BitSet1_out1_s78,  ...
1, 1,  ...
'BitSet1', 1 );


pirelab.getBitSetComp( hN,  ...
bitsll_Q_1_1_out1_s86,  ...
BitSet2_out1_s79,  ...
1, 1,  ...
'BitSet2', 1 );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s73,  ...
DataTypeConversion_out1_s81,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s76,  ...
DataTypeConversion1_out1_s82,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s74,  ...
DataTypeConversion3_out1_s83,  ...
'Floor', 'Wrap', 'RWV', 'Data Type Conversion3' );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s75,  ...
LogicalOperator_out1_s84,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion1_out1_s82, BitSet2_out1_s79 ],  ...
R_Tmp2_out1_s85,  ...
'Floor', 'Wrap', 'R - tmp2', pirTyp18, '+-' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion3_out1_s83,  ...
bitsll_Q_1_1_out1_s86,  ...
'sll', 1, 0, 'bitsll(Q, 1)1' );


pirelab.getBitShiftComp( hN,  ...
Delay5_PS6_out1_s5,  ...
bitsll_R_1__out1_s87,  ...
'sll', 1, 0, 'bitsll(R, 1)' );


pirelab.getSwitchComp( hN,  ...
[ BitSet1_out1_s78, DataTypeConversion3_out1_s83 ],  ...
if_tmp3__0__out1_s88,  ...
LogicalOperator_out1_s84, 'if (tmp3 >= 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ R_Tmp2_out1_s85, DataTypeConversion1_out1_s82 ],  ...
if_tmp3__0_1_out1_s89,  ...
LogicalOperator_out1_s84, 'if (tmp3 >= 0)1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n6( ~, hN, pipestage, slRate1 )
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp4 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp6 = pir_ufixpt_t( 25, 0 );
pirTyp8 = pir_ufixpt_t( 32, 0 );
pirTyp7 = pir_ufixpt_t( 8, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt4 = numerictype( 0, 23, 0 );
nt3 = numerictype( 0, 25, 0 );
nt2 = numerictype( 0, 8, 0 );




hN.addInputPort( 'Exp' );
Exp_s0 = addSignal( hN, 'Exp', pirTyp1, slRate1 );
Exp_s0.addDriver( hN, 0 );

hN.addInputPort( 'MantExtended' );
MantExtended_s1 = addSignal( hN, 'MantExtended', pirTyp2, slRate1 );
MantExtended_s1.addDriver( hN, 1 );

hN.addInputPort( 'sticky' );
sticky_s2 = addSignal( hN, 'sticky', pirTyp3, slRate1 );
sticky_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Exp1' );
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s23 = addSignal( hN, 'if (bitget(Mant_tmp, Mant_tmp.Wor..._out1', pirTyp1, slRate1 );
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s23.addReceiver( hN, 0 );

hN.addOutputPort( 'MantRounded' );
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s24 = addSignal( hN, 'if (bitget(Mant_tmp, Mant_tmp.Wor...1_out1', pirTyp4, slRate1 );
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s24.addReceiver( hN, 1 );

x_bitget_Mant_tmp_1___0_______out1_s3 = addSignal( hN, '(bitget(Mant_tmp, 1) ~= 0) && ..._out1', pirTyp3, slRate1 );
x_bitget_Mant_tmp_2___0_______out1_s4 = addSignal( hN, '(bitget(Mant_tmp, 2) ~= 0) || ..._out1', pirTyp3, slRate1 );
x0_out1_s5 = addSignal( hN, '0_out1', pirTyp5, slRate1 );
x1_out1_s6 = addSignal( hN, '1 _out1', pirTyp1, slRate1 );
x2_out1_s7 = addSignal( hN, '2 _out1', pirTyp6, slRate1 );
BitConcat_out1_s8 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitSlice_out1_s9 = addSignal( hN, 'BitSlice_out1', pirTyp5, slRate1 );
BitSlice1_out1_s10 = addSignal( hN, 'BitSlice1_out1', pirTyp5, slRate1 );
BitSlice2_out1_s11 = addSignal( hN, 'BitSlice2_out1', pirTyp5, slRate1 );
BitSlice3_out1_s12 = addSignal( hN, 'BitSlice3_out1', pirTyp4, slRate1 );
C_out1_s13 = addSignal( hN, 'C_out1', pirTyp4, slRate1 );
Delay_out1_s14 = addSignal( hN, 'Delay_out1', pirTyp6, slRate1 );
Delay1_out1_s15 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay2_out1_s16 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Exp_1_out1_s17 = addSignal( hN, 'Exp + 1_out1', pirTyp1, slRate1 );
Mant_tmp_Cast_2__like__Man____out1_s18 = addSignal( hN, 'Mant_tmp + cast(2, like, Man..._out1', pirTyp6, slRate1 );
bitget_Mant_tmp_1___0_out1_s19 = addSignal( hN, 'bitget(Mant_tmp, 1) ~= 0_out1', pirTyp3, slRate1 );
bitget_Mant_tmp_2___0_out1_s20 = addSignal( hN, 'bitget(Mant_tmp, 2) ~= 0_out1', pirTyp3, slRate1 );
bitget_Mant_tmp_Mant_tmp_Word____out1_s21 = addSignal( hN, 'bitget(Mant_tmp, Mant_tmp.Word..._out1', pirTyp3, slRate1 );
if_bitget_Mant_tmp_1___0_______out1_s22 = addSignal( hN, 'if (bitget(Mant_tmp, 1) ~= 0) && ... _out1', pirTyp6, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s5,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s6,  ...
fi( 0, nt2, fiMath1, 'hex', '01' ),  ...
'1 ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
x2_out1_s7,  ...
fi( 0, nt3, fiMath1, 'hex', '0000002' ),  ...
'2 ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s13,  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
'C', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
if_bitget_Mant_tmp_1___0_______out1_s22,  ...
Delay_out1_s14,  ...
pipestage( 27 ), 'Delay',  ...
fi( 0, nt3, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Exp_1_out1_s17,  ...
Delay1_out1_s15,  ...
pipestage( 27 ), 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Exp_s0,  ...
Delay2_out1_s16,  ...
pipestage( 27 ), 'Delay2',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getLogicComp( hN,  ...
[ bitget_Mant_tmp_1___0_out1_s19, x_bitget_Mant_tmp_2___0_______out1_s4 ],  ...
x_bitget_Mant_tmp_1___0_______out1_s3,  ...
'and', '(bitget(Mant_tmp, 1) ~= 0) && ...' );


pirelab.getLogicComp( hN,  ...
[ bitget_Mant_tmp_2___0_out1_s20, sticky_s2 ],  ...
x_bitget_Mant_tmp_2___0_______out1_s4,  ...
'or', '(bitget(Mant_tmp, 2) ~= 0) || ...' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s5, MantExtended_s1 ],  ...
BitConcat_out1_s8,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
MantExtended_s1,  ...
BitSlice_out1_s9,  ...
0, 0, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
MantExtended_s1,  ...
BitSlice1_out1_s10,  ...
1, 1, 'BitSlice1' );


pirelab.getBitSliceComp( hN,  ...
Delay_out1_s14,  ...
BitSlice2_out1_s11,  ...
24, 24, 'BitSlice2' );


pirelab.getBitSliceComp( hN,  ...
Delay_out1_s14,  ...
BitSlice3_out1_s12,  ...
23, 1, 'BitSlice3' );


pirelab.getAddComp( hN,  ...
[ Exp_s0, x1_out1_s6 ],  ...
Exp_1_out1_s17,  ...
'Floor', 'Wrap', 'Exp + 1', pirTyp7, '++' );


pirelab.getAddComp( hN,  ...
[ BitConcat_out1_s8, x2_out1_s7 ],  ...
Mant_tmp_Cast_2__like__Man____out1_s18,  ...
'Floor', 'Wrap', 'Mant_tmp + cast(2, like, Man...', pirTyp8, '++' );


pirelab.getCompareToValueComp( hN,  ...
BitSlice_out1_s9,  ...
bitget_Mant_tmp_1___0_out1_s19,  ...
'~=', double( 0 ),  ...
'bitget(Mant_tmp, 1) ~= 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
BitSlice1_out1_s10,  ...
bitget_Mant_tmp_2___0_out1_s20,  ...
'~=', double( 0 ),  ...
'bitget(Mant_tmp, 2) ~= 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
BitSlice2_out1_s11,  ...
bitget_Mant_tmp_Mant_tmp_Word____out1_s21,  ...
'~=', double( 0 ),  ...
'bitget(Mant_tmp, Mant_tmp.Word...', 0 );


pirelab.getSwitchComp( hN,  ...
[ Mant_tmp_Cast_2__like__Man____out1_s18, BitConcat_out1_s8 ],  ...
if_bitget_Mant_tmp_1___0_______out1_s22,  ...
x_bitget_Mant_tmp_1___0_______out1_s3, 'if (bitget(Mant_tmp, 1) ~= 0) && ... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay1_out1_s15, Delay2_out1_s16 ],  ...
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s23,  ...
bitget_Mant_tmp_Mant_tmp_Word____out1_s21, 'if (bitget(Mant_tmp, Mant_tmp.Wor...',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s13, BitSlice3_out1_s12 ],  ...
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s24,  ...
bitget_Mant_tmp_Mant_tmp_Word____out1_s21, 'if (bitget(Mant_tmp, Mant_tmp.Wor...1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n5( p, hN, pipestage, slRate1 )
pirTyp10 = pir_boolean_t;
pirTyp6 = pir_sfixpt_t( 13, 0 );
pirTyp7 = pir_sfixpt_t( 17, 0 );
pirTyp8 = pir_sfixpt_t( 21, 0 );
pirTyp9 = pir_sfixpt_t( 25, 0 );
pirTyp4 = pir_sfixpt_t( 28, 0 );
pirTyp11 = pir_sfixpt_t( 5, 0 );
pirTyp5 = pir_sfixpt_t( 9, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp1 = pir_unsigned_t( 8 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt7 = numerictype( 0, 24, 0 );
nt3 = numerictype( 1, 13, 0 );
nt4 = numerictype( 1, 17, 0 );
nt5 = numerictype( 1, 21, 0 );
nt6 = numerictype( 1, 25, 0 );
nt1 = numerictype( 1, 28, 0 );
nt2 = numerictype( 1, 9, 0 );

hN.addInputPort( 'exp_a_cor' );
exp_a_cor_s0 = addSignal( hN, 'exp_a_cor', pirTyp1, slRate1 );
exp_a_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_a_cor' );
mant_a_cor_s1 = addSignal( hN, 'mant_a_cor', pirTyp2, slRate1 );
mant_a_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Exponent' );
Rounding_out1_s33 = addSignal( hN, 'Rounding_out1', pirTyp1, slRate1 );
Rounding_out1_s33.addReceiver( hN, 0 );

hN.addOutputPort( 'Mantissa' );
Rounding_out2_s34 = addSignal( hN, 'Rounding_out2', pirTyp3, slRate1 );
Rounding_out2_s34.addReceiver( hN, 1 );

Delay10_PS7_out1_s2 = addSignal( hN, 'Delay10_PS7_out1', pirTyp4, slRate1 );
Delay11_PS7_out1_s3 = addSignal( hN, 'Delay11_PS7_out1', pirTyp5, slRate1 );
Delay12_PS8_out1_s4 = addSignal( hN, 'Delay12_PS8_out1', pirTyp1, slRate1 );
Delay13_PS12_out1_s5 = addSignal( hN, 'Delay13_PS12_out1', pirTyp1, slRate1 );
Delay14_PS16_out1_s6 = addSignal( hN, 'Delay14_PS16_out1', pirTyp1, slRate1 );
Delay15_PS20_out1_s7 = addSignal( hN, 'Delay15_PS20_out1', pirTyp1, slRate1 );
Delay16_PS24_out1_s8 = addSignal( hN, 'Delay16_PS24_out1', pirTyp1, slRate1 );
Delay17_PS7_out1_s9 = addSignal( hN, 'Delay17_PS7_out1', pirTyp1, slRate1 );
Delay18_PS11_out1_s10 = addSignal( hN, 'Delay18_PS11_out1', pirTyp1, slRate1 );
Delay19_PS15_out1_s11 = addSignal( hN, 'Delay19_PS15_out1', pirTyp1, slRate1 );
Delay1_PS11_out1_s12 = addSignal( hN, 'Delay1_PS11_out1', pirTyp6, slRate1 );
Delay20_PS19_out1_s13 = addSignal( hN, 'Delay20_PS19_out1', pirTyp1, slRate1 );
Delay21_PS23_out1_s14 = addSignal( hN, 'Delay21_PS23_out1', pirTyp1, slRate1 );
Delay22_PS26_out1_s15 = addSignal( hN, 'Delay22_PS26_out1', pirTyp1, slRate1 );
Delay23_PS5_6_out1_s16 = addSignal( hN, 'Delay23_PS5_6_out1', pirTyp1, slRate1 );
Delay24_PS9_10_out1_s17 = addSignal( hN, 'Delay24_PS9_10_out1', pirTyp1, slRate1 );
Delay25_PS13_14_out1_s18 = addSignal( hN, 'Delay25_PS13_14_out1', pirTyp1, slRate1 );
Delay26_PS17_18_out1_s19 = addSignal( hN, 'Delay26_PS17_18_out1', pirTyp1, slRate1 );
Delay27_PS21_22_out1_s20 = addSignal( hN, 'Delay27_PS21_22_out1', pirTyp1, slRate1 );
Delay28_PS25_out1_s21 = addSignal( hN, 'Delay28_PS25_out1', pirTyp1, slRate1 );
Delay29_PS4_out1_s22 = addSignal( hN, 'Delay29_PS4_out1', pirTyp4, slRate1 );
Delay2_PS15_out1_s23 = addSignal( hN, 'Delay2_PS15_out1', pirTyp4, slRate1 );
Delay30_PS4_out1_s24 = addSignal( hN, 'Delay30_PS4_out1', pirTyp1, slRate1 );
Delay3_PS15_out1_s25 = addSignal( hN, 'Delay3_PS15_out1', pirTyp7, slRate1 );
Delay4_PS19_out1_s26 = addSignal( hN, 'Delay4_PS19_out1', pirTyp4, slRate1 );
Delay5_PS19_out1_s27 = addSignal( hN, 'Delay5_PS19_out1', pirTyp8, slRate1 );
Delay6_PS23_out1_s28 = addSignal( hN, 'Delay6_PS23_out1', pirTyp4, slRate1 );
Delay7_PS23_out1_s29 = addSignal( hN, 'Delay7_PS23_out1', pirTyp9, slRate1 );
Delay8_PS26_out1_s30 = addSignal( hN, 'Delay8_PS26_out1', pirTyp10, slRate1 );
Delay9_PS26_out1_s31 = addSignal( hN, 'Delay9_PS26_out1', pirTyp2, slRate1 );
Delay_PS11_out1_s32 = addSignal( hN, 'Delay_PS11_out1', pirTyp4, slRate1 );
Subsystem_out1_s35 = addSignal( hN, 'Subsystem_out1', pirTyp5, slRate1 );
Subsystem_out2_s36 = addSignal( hN, 'Subsystem_out2', pirTyp4, slRate1 );
Subsystem1_out1_s37 = addSignal( hN, 'Subsystem1_out1', pirTyp6, slRate1 );
Subsystem1_out2_s38 = addSignal( hN, 'Subsystem1_out2', pirTyp4, slRate1 );
Subsystem2_out1_s39 = addSignal( hN, 'Subsystem2_out1', pirTyp7, slRate1 );
Subsystem2_out2_s40 = addSignal( hN, 'Subsystem2_out2', pirTyp4, slRate1 );
Subsystem3_out1_s41 = addSignal( hN, 'Subsystem3_out1', pirTyp8, slRate1 );
Subsystem3_out2_s42 = addSignal( hN, 'Subsystem3_out2', pirTyp4, slRate1 );
Subsystem4_out1_s43 = addSignal( hN, 'Subsystem4_out1', pirTyp9, slRate1 );
Subsystem4_out2_s44 = addSignal( hN, 'Subsystem4_out2', pirTyp4, slRate1 );
y_s45 = addSignal( hN, 'y', pirTyp2, slRate1 );
Subsystem5_out2_s46 = addSignal( hN, 'Subsystem5_out2', pirTyp10, slRate1 );
sqrt_Long_get_digit_out1_s47 = addSignal( hN, 'sqrt_Long_get_digit_out1', pirTyp11, slRate1 );
sqrt_Long_get_digit_out2_s48 = addSignal( hN, 'sqrt_Long_get_digit_out2', pirTyp4, slRate1 );
sqrt_Normalize_out1_s49 = addSignal( hN, 'sqrt_Normalize_out1', pirTyp1, slRate1 );
sqrt_Normalize_out2_s50 = addSignal( hN, 'sqrt_Normalize_out2', pirTyp4, slRate1 );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Rounding' );
Rounding = hN.addComponent( 'ntwk_instance_comp', hRefN );
Rounding.Name = 'Rounding';
pirelab.connectNtwkInstComp( Rounding,  ...
[ Delay22_PS26_out1_s15, Delay9_PS26_out1_s31, Delay8_PS26_out1_s30 ],  ...
[ Rounding_out1_s33, Rounding_out2_s34 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem' );
Subsystem = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem.Name = 'Subsystem';
pirelab.connectNtwkInstComp( Subsystem,  ...
[ sqrt_Long_get_digit_out1_s47, sqrt_Long_get_digit_out2_s48 ],  ...
[ Subsystem_out1_s35, Subsystem_out2_s36 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem1' );
Subsystem1 = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem1.Name = 'Subsystem1';
pirelab.connectNtwkInstComp( Subsystem1,  ...
[ Delay11_PS7_out1_s3, Delay10_PS7_out1_s2 ],  ...
[ Subsystem1_out1_s37, Subsystem1_out2_s38 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem2' );
Subsystem2 = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem2.Name = 'Subsystem2';
pirelab.connectNtwkInstComp( Subsystem2,  ...
[ Delay1_PS11_out1_s12, Delay_PS11_out1_s32 ],  ...
[ Subsystem2_out1_s39, Subsystem2_out2_s40 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem3' );
Subsystem3 = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem3.Name = 'Subsystem3';
pirelab.connectNtwkInstComp( Subsystem3,  ...
[ Delay3_PS15_out1_s25, Delay2_PS15_out1_s23 ],  ...
[ Subsystem3_out1_s41, Subsystem3_out2_s42 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem4' );
Subsystem4 = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem4.Name = 'Subsystem4';
pirelab.connectNtwkInstComp( Subsystem4,  ...
[ Delay5_PS19_out1_s27, Delay4_PS19_out1_s26 ],  ...
[ Subsystem4_out1_s43, Subsystem4_out2_s44 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/Subsystem5' );
Subsystem5 = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem5.Name = 'Subsystem5';
pirelab.connectNtwkInstComp( Subsystem5,  ...
[ Delay7_PS23_out1_s29, Delay6_PS23_out1_s28 ],  ...
[ y_s45, Subsystem5_out2_s46 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Long_get_digit' );
sqrt_Long_get_digit = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Long_get_digit.Name = 'sqrt_Long_get_digit';
pirelab.connectNtwkInstComp( sqrt_Long_get_digit,  ...
Delay29_PS4_out1_s22,  ...
[ sqrt_Long_get_digit_out1_s47, sqrt_Long_get_digit_out2_s48 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long/sqrt_Normalize' );
sqrt_Normalize = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Normalize.Name = 'sqrt_Normalize';
pirelab.connectNtwkInstComp( sqrt_Normalize,  ...
[ exp_a_cor_s0, mant_a_cor_s1 ],  ...
[ sqrt_Normalize_out1_s49, sqrt_Normalize_out2_s50 ] );


pirelab.getIntDelayComp( hN,  ...
Subsystem_out2_s36,  ...
Delay10_PS7_out1_s2,  ...
pipestage( 7 ), 'Delay10_PS7',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem_out1_s35,  ...
Delay11_PS7_out1_s3,  ...
pipestage( 7 ), 'Delay11_PS7',  ...
fi( 0, nt2, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay17_PS7_out1_s9,  ...
Delay12_PS8_out1_s4,  ...
pipestage( 8 ), 'Delay12_PS8',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay18_PS11_out1_s10,  ...
Delay13_PS12_out1_s5,  ...
pipestage( 12 ), 'Delay13_PS12',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay19_PS15_out1_s11,  ...
Delay14_PS16_out1_s6,  ...
pipestage( 16 ), 'Delay14_PS16',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay20_PS19_out1_s13,  ...
Delay15_PS20_out1_s7,  ...
pipestage( 20 ), 'Delay15_PS20',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay21_PS23_out1_s14,  ...
Delay16_PS24_out1_s8,  ...
pipestage( 24 ), 'Delay16_PS24',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay23_PS5_6_out1_s16,  ...
Delay17_PS7_out1_s9,  ...
pipestage( 7 ), 'Delay17_PS7',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay24_PS9_10_out1_s17,  ...
Delay18_PS11_out1_s10,  ...
pipestage( 11 ), 'Delay18_PS11',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay25_PS13_14_out1_s18,  ...
Delay19_PS15_out1_s11,  ...
pipestage( 15 ), 'Delay19_PS15',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out1_s37,  ...
Delay1_PS11_out1_s12,  ...
pipestage( 11 ), 'Delay1_PS11',  ...
fi( 0, nt3, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay26_PS17_18_out1_s19,  ...
Delay20_PS19_out1_s13,  ...
pipestage( 19 ), 'Delay20_PS19',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay27_PS21_22_out1_s20,  ...
Delay21_PS23_out1_s14,  ...
pipestage( 23 ), 'Delay21_PS23',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay28_PS25_out1_s21,  ...
Delay22_PS26_out1_s15,  ...
pipestage( 26 ), 'Delay22_PS26',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay30_PS4_out1_s24,  ...
Delay23_PS5_6_out1_s16,  ...
sum( pipestage( 5:6 ) ), 'Delay23_PS5_6',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay12_PS8_out1_s4,  ...
Delay24_PS9_10_out1_s17,  ...
sum( pipestage( 9:10 ) ), 'Delay24_PS9_10',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay13_PS12_out1_s5,  ...
Delay25_PS13_14_out1_s18,  ...
sum( pipestage( 13:14 ) ), 'Delay25_PS13_14',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay14_PS16_out1_s6,  ...
Delay26_PS17_18_out1_s19,  ...
sum( pipestage( 17:18 ) ), 'Delay26_PS17_18',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay15_PS20_out1_s7,  ...
Delay27_PS21_22_out1_s20,  ...
sum( pipestage( 21:22 ) ), 'Delay27_PS21_22',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay16_PS24_out1_s8,  ...
Delay28_PS25_out1_s21,  ...
pipestage( 25 ), 'Delay28_PS25',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Normalize_out2_s50,  ...
Delay29_PS4_out1_s22,  ...
pipestage( 4 ), 'Delay29_PS4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s40,  ...
Delay2_PS15_out1_s23,  ...
pipestage( 15 ), 'Delay2_PS15',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Normalize_out1_s49,  ...
Delay30_PS4_out1_s24,  ...
pipestage( 4 ), 'Delay30_PS4',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out1_s39,  ...
Delay3_PS15_out1_s25,  ...
pipestage( 15 ), 'Delay3_PS15',  ...
fi( 0, nt4, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem3_out2_s42,  ...
Delay4_PS19_out1_s26,  ...
pipestage( 19 ), 'Delay4_PS19',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem3_out1_s41,  ...
Delay5_PS19_out1_s27,  ...
pipestage( 19 ), 'Delay5_PS19',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem4_out2_s44,  ...
Delay6_PS23_out1_s28,  ...
pipestage( 23 ), 'Delay6_PS23',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem4_out1_s43,  ...
Delay7_PS23_out1_s29,  ...
pipestage( 23 ), 'Delay7_PS23',  ...
fi( 0, nt6, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem5_out2_s46,  ...
Delay8_PS26_out1_s30,  ...
pipestage( 26 ), 'Delay8_PS26',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s45,  ...
Delay9_PS26_out1_s31,  ...
pipestage( 26 ), 'Delay9_PS26',  ...
fi( 0, nt7, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s38,  ...
Delay_PS11_out1_s32,  ...
pipestage( 11 ), 'Delay_PS11',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000' ),  ...
0, 0, [  ], 0, 0 );


end 


function hN = createNetwork_n4( ~, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt3 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 23, 0 );
nt1 = numerictype( 0, 8, 0 );


hN.addInputPort( 'aSign' );
aSign_s0 = addSignal( hN, 'aSign', pirTyp1, slRate1 );
aSign_s0.addDriver( hN, 0 );

hN.addInputPort( 'aExponent' );
aExponent_s1 = addSignal( hN, 'aExponent', pirTyp2, slRate1 );
aExponent_s1.addDriver( hN, 1 );

hN.addInputPort( 'aMantissa' );
aMantissa_s2 = addSignal( hN, 'aMantissa', pirTyp3, slRate1 );
aMantissa_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Exponent' );
if_aSign__0____aExponent______out1_s14 = addSignal( hN, 'if (aSign == 0) && (aExponent == ...  _out1', pirTyp2, slRate1 );
if_aSign__0____aExponent______out1_s14.addReceiver( hN, 0 );

hN.addOutputPort( 'Mantissa' );
if_aSign__0____aExponent_____1_out1_s15 = addSignal( hN, 'if (aSign == 0) && (aExponent == ...  1_out1', pirTyp3, slRate1 );
if_aSign__0____aExponent_____1_out1_s15.addReceiver( hN, 1 );

hN.addOutputPort( 'Sign' );
if_aSign__0____aExponent_____2_out1_s16 = addSignal( hN, 'if (aSign == 0) && (aExponent == ...  2_out1', pirTyp1, slRate1 );
if_aSign__0____aExponent_____2_out1_s16.addReceiver( hN, 2 );

x_aSign__0____aExponent______out1_s3 = addSignal( hN, '(aSign == 0) && (aExponent == ..._out1', pirTyp4, slRate1 );
x_aSign__0____aExponent______out1_s4 = addSignal( hN, '(aSign == 0) && (aExponent == ... _out1', pirTyp4, slRate1 );
x_aSign__0____aExponent_____1_out1_s5 = addSignal( hN, '(aSign == 0) && (aExponent == ... 1_out1', pirTyp4, slRate1 );
C_out1_s6 = addSignal( hN, 'C_out1', pirTyp2, slRate1 );
C1_out1_s7 = addSignal( hN, 'C1_out1', pirTyp3, slRate1 );
C2_out1_s8 = addSignal( hN, 'C2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s9 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp4, slRate1 );
aExponent__CfType_Exponent_I____out1_s10 = addSignal( hN, 'aExponent == cfType.Exponent_I..._out1', pirTyp4, slRate1 );
aMantissa__0_out1_s11 = addSignal( hN, 'aMantissa == 0_out1', pirTyp4, slRate1 );
aSign__0_out1_s12 = addSignal( hN, 'aSign == 0_out1', pirTyp4, slRate1 );
aSign__1_out1_s13 = addSignal( hN, 'aSign == 1_out1', pirTyp4, slRate1 );


pirelab.getConstComp( hN,  ...
C_out1_s6,  ...
fi( 0, nt1, fiMath1, 'hex', 'ff' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C1_out1_s7,  ...
fi( 0, nt2, fiMath1, 'hex', '400000' ),  ...
'C1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C2_out1_s8,  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
'C2', 'on', 1, '', '', '' );


pirelab.getLogicComp( hN,  ...
[ aSign__0_out1_s12, aExponent__CfType_Exponent_I____out1_s10 ],  ...
x_aSign__0____aExponent______out1_s3,  ...
'and', '(aSign == 0) && (aExponent == ...' );


pirelab.getLogicComp( hN,  ...
[ x_aSign__0____aExponent______out1_s3, aMantissa__0_out1_s11 ],  ...
x_aSign__0____aExponent______out1_s4,  ...
'and', '(aSign == 0) && (aExponent == ... ' );


pirelab.getLogicComp( hN,  ...
[ aMantissa__0_out1_s11, aSign__1_out1_s13 ],  ...
x_aSign__0____aExponent_____1_out1_s5,  ...
'and', '(aSign == 0) && (aExponent == ... 1' );


pirelab.getLogicComp( hN,  ...
[ x_aSign__0____aExponent______out1_s4, x_aSign__0____aExponent_____1_out1_s5 ],  ...
LogicalOperator_out1_s9,  ...
'or', sprintf( 'Logical\nOperator' ) );


pirelab.getCompareToValueComp( hN,  ...
aExponent_s1,  ...
aExponent__CfType_Exponent_I____out1_s10,  ...
'==', fi( 0, nt1, fiMath1, 'hex', 'ff' ),  ...
'aExponent == cfType.Exponent_I...', 0 );


pirelab.getCompareToValueComp( hN,  ...
aMantissa_s2,  ...
aMantissa__0_out1_s11,  ...
'==', double( 0 ),  ...
'aMantissa == 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
aSign_s0,  ...
aSign__0_out1_s12,  ...
'==', double( 0 ),  ...
'aSign == 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
aExponent_s1,  ...
aSign__1_out1_s13,  ...
'==', double( 0 ),  ...
'aSign == 1', 0 );


pirelab.getSwitchComp( hN,  ...
[ aExponent_s1, C_out1_s6 ],  ...
if_aSign__0____aExponent______out1_s14,  ...
LogicalOperator_out1_s9, 'if (aSign == 0) && (aExponent == ...  ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ aMantissa_s2, C1_out1_s7 ],  ...
if_aSign__0____aExponent_____1_out1_s15,  ...
LogicalOperator_out1_s9, 'if (aSign == 0) && (aExponent == ...  1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ C2_out1_s8, aSign_s0 ],  ...
if_aSign__0____aExponent_____2_out1_s16,  ...
x_aSign__0____aExponent_____1_out1_s5, 'if (aSign == 0) && (aExponent == ...  2',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n3( ~, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp2 = pir_ufixpt_t( 23, 0 );
pirTyp3 = pir_ufixpt_t( 24, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 8, 0 );




hN.addInputPort( 'Exponent' );
Exponent_s0 = addSignal( hN, 'Exponent', pirTyp1, slRate1 );
Exponent_s0.addDriver( hN, 0 );

hN.addInputPort( 'Mantissa' );
Mantissa_s1 = addSignal( hN, 'Mantissa', pirTyp2, slRate1 );
Mantissa_s1.addDriver( hN, 1 );

hN.addOutputPort( 'ExponentCorrected' );
if_Exponent__0__out1_s11 = addSignal( hN, 'if (Exponent == 0)_out1', pirTyp1, slRate1 );
if_Exponent__0__out1_s11.addReceiver( hN, 0 );

hN.addOutputPort( 'MantissaAppended' );
if_Exponent__0____Exponent_____out1_s12 = addSignal( hN, 'if (Exponent == 0) || (Exponent =... _out1', pirTyp3, slRate1 );
if_Exponent__0____Exponent_____out1_s12.addReceiver( hN, 1 );

x_Exponent__0____Exponent_____out1_s2 = addSignal( hN, '(Exponent == 0) || (Exponent =..._out1', pirTyp4, slRate1 );
x0_out1_s3 = addSignal( hN, '0_out1', pirTyp5, slRate1 );
x1_out1_s4 = addSignal( hN, '1_out1', pirTyp5, slRate1 );
BitConcat_out1_s5 = addSignal( hN, 'Bit Concat_out1', pirTyp3, slRate1 );
BitConcat1_out1_s6 = addSignal( hN, 'Bit Concat1_out1', pirTyp3, slRate1 );
C_out1_s7 = addSignal( hN, 'C_out1', pirTyp1, slRate1 );
Exponent__0_out1_s8 = addSignal( hN, 'Exponent == 0_out1', pirTyp4, slRate1 );
Exponent__0_out1_s9 = addSignal( hN, 'Exponent == 0 _out1', pirTyp4, slRate1 );
Exponent__CfType_Exponent_In____out1_s10 = addSignal( hN, 'Exponent == cfType.Exponent_In..._out1', pirTyp4, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s3,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s4,  ...
fi( 0, nt1, fiMath1, 'hex', '1' ),  ...
'1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s7,  ...
fi( 0, nt2, fiMath1, 'hex', '01' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getLogicComp( hN,  ...
[ Exponent__0_out1_s8, Exponent__CfType_Exponent_In____out1_s10 ],  ...
x_Exponent__0____Exponent_____out1_s2,  ...
'or', '(Exponent == 0) || (Exponent =...' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s3, Mantissa_s1 ],  ...
BitConcat_out1_s5,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ x1_out1_s4, Mantissa_s1 ],  ...
BitConcat1_out1_s6,  ...
'Bit Concat1' );


pirelab.getCompareToValueComp( hN,  ...
Exponent_s0,  ...
Exponent__0_out1_s8,  ...
'==', double( 0 ),  ...
'Exponent == 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
Exponent_s0,  ...
Exponent__0_out1_s9,  ...
'==', double( 0 ),  ...
'Exponent == 0 ', 0 );


pirelab.getCompareToValueComp( hN,  ...
Exponent_s0,  ...
Exponent__CfType_Exponent_In____out1_s10,  ...
'==', fi( 0, nt2, fiMath1, 'hex', 'ff' ),  ...
'Exponent == cfType.Exponent_In...', 0 );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s7, Exponent_s0 ],  ...
if_Exponent__0__out1_s11,  ...
Exponent__0_out1_s9, 'if (Exponent == 0)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitConcat_out1_s5, BitConcat1_out1_s6 ],  ...
if_Exponent__0____Exponent_____out1_s12,  ...
x_Exponent__0____Exponent_____out1_s2, 'if (Exponent == 0) || (Exponent =... ',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n2( ~, hN, latency, slRate1 )
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp4 = pir_ufixpt_t( 8, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 1, 0 );
nt1 = numerictype( 0, 8, 0 );




hN.addOutputPort( 'init' );

Constant8_out1_s2 = addSignal( hN, 'Constant8_out1', pirTyp3, slRate1 );
pirelab.getConstComp( hN,  ...
Constant8_out1_s2,  ...
fi( 0, nt2, fiMath1, 'hex', '1' ),  ...
'Constant8', 'on', 0, '', '', '' );

if latency < 1 || ( transformnfp.needNoInitialize(  ) )
Constant8_out1_s2.addReceiver( hN, 0 );
else 
RelationalOperator_out1_s7 = addSignal( hN, sprintf( 'Relational\nOperator_out1' ), pirTyp1, slRate1 );
RelationalOperator_out1_s7.addReceiver( hN, 0 );

Add_out1_s0 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Constant7_out1_s1 = addSignal( hN, 'Constant7_out1', pirTyp2, slRate1 );
Delay3_out1_s3 = addSignal( hN, 'Delay3_out1', pirTyp2, slRate1 );
Delay4_out1_s4 = addSignal( hN, 'Delay4_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s5 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp3, slRate1 );
LogicalOperator2_out1_s6 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp1, slRate1 );

if latency > 3
Constant7 = dec2hex( latency - 1 );
else 
Constant7 = dec2hex( latency );
end 

pirelab.getConstComp( hN,  ...
Constant7_out1_s1,  ...
fi( 0, nt1, fiMath1, 'hex', Constant7 ),  ...
'Constant7', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
Add_out1_s0,  ...
Delay3_out1_s3,  ...
transformnfp.Delay1, 'Delay3',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
RelationalOperator_out1_s7,  ...
Delay4_out1_s4,  ...
transformnfp.Delay1, 'Delay4',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getAddComp( hN,  ...
[ Delay3_out1_s3, LogicalOperator_out1_s5 ],  ...
Add_out1_s0,  ...
'Floor', 'Wrap', 'Add', pirTyp4, '++' );


pirelab.getLogicComp( hN,  ...
[ Constant8_out1_s2, LogicalOperator2_out1_s6 ],  ...
LogicalOperator_out1_s5,  ...
'and', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
Delay4_out1_s4,  ...
LogicalOperator2_out1_s6,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getRelOpComp( hN,  ...
[ Add_out1_s0, Constant7_out1_s1 ],  ...
RelationalOperator_out1_s7,  ...
'>', 0, sprintf( 'Relational\nOperator' ) );

end 
end 

function hN = createNetwork_n1( p, hN, slRate1 )
pirTyp1 = pir_ufixpt_t( 1, 0 );



hN.addOutputPort( 'init' );
init_s0 = addSignal( hN, 'init', pirTyp1, slRate1 );
init_s0.addReceiver( hN, 0 );


hRefN = p.findNetwork( 'fullname', 'SQRT_Single/InitCycles/InitCycles' );
InitCycles = hN.addComponent( 'ntwk_instance_comp', hRefN );
InitCycles.Name = 'InitCycles';
pirelab.connectNtwkInstComp( InitCycles,  ...
[  ],  ...
init_s0 );


end 

function hN = createNetwork_n0( p, hN, denormal, pipestage, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp5 = pir_ufixpt_t( 24, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt3 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 23, 0 );
nt1 = numerictype( 0, 8, 0 );




hN.addInputPort( 'aSign' );
aSign_s0 = addSignal( hN, 'aSign', pirTyp1, slRate1 );
aSign_s0.addDriver( hN, 0 );

hN.addInputPort( 'aExponent' );
aExponent_s1 = addSignal( hN, 'aExponent', pirTyp2, slRate1 );
aExponent_s1.addDriver( hN, 1 );

hN.addInputPort( 'aMantissa' );
aMantissa_s2 = addSignal( hN, 'aMantissa', pirTyp3, slRate1 );
aMantissa_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Sign' );
Delay2_out1_s12 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Delay2_out1_s12.addReceiver( hN, 0 );

hN.addOutputPort( 'Exponent' );
Delay1_out1_s10 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay1_out1_s10.addReceiver( hN, 1 );

hN.addOutputPort( 'Mantissa' );
Delay_out1_s9 = addSignal( hN, 'Delay_out1', pirTyp3, slRate1 );
Delay_out1_s9.addReceiver( hN, 2 );

x_aExponent__0____aMantissa____out1_s3 = addSignal( hN, '(aExponent == 0) && (aMantissa..._out1', pirTyp4, slRate1 );
x_aSign__1____aExponent______out1_s4 = addSignal( hN, '(aSign == 1) ||  (aExponent ==..._out1', pirTyp4, slRate1 );
C_out1_s5 = addSignal( hN, 'C_out1', pirTyp2, slRate1 );
C1_out1_s6 = addSignal( hN, 'C1_out1', pirTyp3, slRate1 );
Constant_out1_s7 = addSignal( hN, 'Constant_out1', pirTyp3, slRate1 );
Constant1_out1_s8 = addSignal( hN, 'Constant1_out1', pirTyp2, slRate1 );
Delay10_out1_s11 = addSignal( hN, 'Delay10_out1', pirTyp1, slRate1 );
Delay3_out1_s13 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
Delay4_out1_s14 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s15 = addSignal( hN, 'Delay5_out1', pirTyp3, slRate1 );
Delay6_out1_s16 = addSignal( hN, 'Delay6_out1', pirTyp4, slRate1 );
Delay7_out1_s17 = addSignal( hN, 'Delay7_out1', pirTyp4, slRate1 );
Delay8_out1_s18 = addSignal( hN, 'Delay8_out1', pirTyp3, slRate1 );
Delay9_out1_s19 = addSignal( hN, 'Delay9_out1', pirTyp2, slRate1 );
DenormalSupport_out1_s20 = addSignal( hN, 'Denormal Support_out1', pirTyp4, slRate1 );
InitCycles_out1_s21 = addSignal( hN, 'InitCycles_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s22 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp4, slRate1 );
LogicalOperator1_out1_s23 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp4, slRate1 );
Switch5_out1_s24 = addSignal( hN, 'Switch5_out1', pirTyp3, slRate1 );
Switch6_out1_s25 = addSignal( hN, 'Switch6_out1', pirTyp2, slRate1 );
aExponent__0_out1_s26 = addSignal( hN, 'aExponent == 0_out1', pirTyp4, slRate1 );
aExponent__CfType_Exponent_I____out1_s27 = addSignal( hN, 'aExponent == cfType.Exponent_I..._out1', pirTyp4, slRate1 );
aMantissa__0_out1_s28 = addSignal( hN, 'aMantissa == 0_out1', pirTyp4, slRate1 );
aSign__1_out1_s29 = addSignal( hN, 'aSign == 1_out1', pirTyp4, slRate1 );
appendMantissaAndCorrectExponent_out1_s30 = addSignal( hN, 'appendMantissaAndCorrectExponent_out1', pirTyp2, slRate1 );
appendMantissaAndCorrectExponent_out2_s31 = addSignal( hN, 'appendMantissaAndCorrectExponent_out2', pirTyp5, slRate1 );
if_aExponent__0____aMantissa____out1_s32 = addSignal( hN, 'if (aExponent == 0) && (aMantissa... _out1', pirTyp2, slRate1 );
if_aExponent__0____aMantissa___1_out1_s33 = addSignal( hN, 'if (aExponent == 0) && (aMantissa... 1_out1', pirTyp3, slRate1 );
if_aSign__1____aExponent______out1_s34 = addSignal( hN, 'if (aSign == 1) ||  (aExponent ==... _out1', pirTyp2, slRate1 );
if_aSign__1____aExponent_____1_out1_s35 = addSignal( hN, 'if (aSign == 1) ||  (aExponent ==... 1_out1', pirTyp3, slRate1 );
sqrt_Inf_or_NaN_out1_s36 = addSignal( hN, 'sqrt_Inf_or_NaN_out1', pirTyp2, slRate1 );
sqrt_Inf_or_NaN_out2_s37 = addSignal( hN, 'sqrt_Inf_or_NaN_out2', pirTyp3, slRate1 );
sqrt_Inf_or_NaN_out3_s38 = addSignal( hN, 'sqrt_Inf_or_NaN_out3', pirTyp1, slRate1 );
sqrt_Long_out1_s38 = addSignal( hN, 'sqrt_Long_out1', pirTyp2, slRate1 );
sqrt_Long_out2_s39 = addSignal( hN, 'sqrt_Long_out2', pirTyp3, slRate1 );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/InitCycles' );
InitCycles = hN.addComponent( 'ntwk_instance_comp', hRefN );
InitCycles.Name = 'InitCycles';
pirelab.connectNtwkInstComp( InitCycles,  ...
[  ],  ...
InitCycles_out1_s21 );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/appendMantissaAndCorrectExponent' );
appendMantissaAndCorrectExponent = hN.addComponent( 'ntwk_instance_comp', hRefN );
appendMantissaAndCorrectExponent.Name = 'appendMantissaAndCorrectExponent';
pirelab.connectNtwkInstComp( appendMantissaAndCorrectExponent,  ...
[ Delay4_out1_s14, Delay5_out1_s15 ],  ...
[ appendMantissaAndCorrectExponent_out1_s30, appendMantissaAndCorrectExponent_out2_s31 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Inf_or_NaN' );
sqrt_Inf_or_NaN = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Inf_or_NaN.Name = 'sqrt_Inf_or_NaN';
pirelab.connectNtwkInstComp( sqrt_Inf_or_NaN,  ...
[ Delay3_out1_s13, Delay4_out1_s14, Delay5_out1_s15 ],  ...
[ sqrt_Inf_or_NaN_out1_s36, sqrt_Inf_or_NaN_out2_s37, sqrt_Inf_or_NaN_out3_s38 ] );

hRefN = p.findNetwork( 'fullname', 'SQRT_Single/sqrt_Long' );
sqrt_Long = hN.addComponent( 'ntwk_instance_comp', hRefN );
sqrt_Long.Name = 'sqrt_Long';
pirelab.connectNtwkInstComp( sqrt_Long,  ...
[ appendMantissaAndCorrectExponent_out1_s30, appendMantissaAndCorrectExponent_out2_s31 ],  ...
[ sqrt_Long_out1_s38, sqrt_Long_out2_s39 ] );


pirelab.getConstComp( hN,  ...
C_out1_s5,  ...
fi( 0, nt1, fiMath1, 'hex', '00' ),  ...
'C', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
C1_out1_s6,  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
'C1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s7,  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s8,  ...
fi( 0, nt1, fiMath1, 'hex', '00' ),  ...
'Constant1', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
Switch5_out1_s24,  ...
Delay_out1_s9,  ...
pipestage( 28 ), 'Delay',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch6_out1_s25,  ...
Delay1_out1_s10,  ...
pipestage( 28 ), 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );

MDelay26 = sum( pipestage( 2:27 ) );

pirelab.getIntDelayComp( hN,  ...
sqrt_Inf_or_NaN_out3_s38,  ...
Delay10_out1_s11,  ...
MDelay26, 'Delay10',  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay10_out1_s11,  ...
Delay2_out1_s12,  ...
pipestage( 28 ), 'Delay2',  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
aSign_s0,  ...
Delay3_out1_s13,  ...
pipestage( 1 ), 'Delay3',  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
aExponent_s1,  ...
Delay4_out1_s14,  ...
pipestage( 1 ), 'Delay4',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
aMantissa_s2,  ...
Delay5_out1_s15,  ...
pipestage( 1 ), 'Delay5',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
x_aSign__1____aExponent______out1_s4,  ...
Delay6_out1_s16,  ...
MDelay26, 'Delay6',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
x_aExponent__0____aMantissa____out1_s3,  ...
Delay7_out1_s17,  ...
MDelay26, 'Delay7',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Inf_or_NaN_out2_s37,  ...
Delay8_out1_s18,  ...
MDelay26, 'Delay8',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
sqrt_Inf_or_NaN_out1_s36,  ...
Delay9_out1_s19,  ...
MDelay26, 'Delay9',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );

if ( denormal )
pirelab.getConstComp( hN,  ...
DenormalSupport_out1_s20,  ...
fi( 0, nt3, fiMath1, 'hex', '1' ),  ...
'Denormal Support', 'on', 0, '', '', '' );
else 
pirelab.getConstComp( hN,  ...
DenormalSupport_out1_s20,  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
'Denormal Support', 'on', 1, '', '', '' );
end 


pirelab.getLogicComp( hN,  ...
[ aExponent__0_out1_s26, LogicalOperator_out1_s22 ],  ...
x_aExponent__0____aMantissa____out1_s3,  ...
'and', '(aExponent == 0) && (aMantissa...' );


pirelab.getLogicComp( hN,  ...
[ aSign__1_out1_s29, aExponent__CfType_Exponent_I____out1_s27 ],  ...
x_aSign__1____aExponent______out1_s4,  ...
'or', '(aSign == 1) ||  (aExponent ==...' );


pirelab.getLogicComp( hN,  ...
[ aMantissa__0_out1_s28, LogicalOperator1_out1_s23 ],  ...
LogicalOperator_out1_s22,  ...
'or', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
DenormalSupport_out1_s20,  ...
LogicalOperator1_out1_s23,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getSwitchComp( hN,  ...
[ if_aSign__1____aExponent_____1_out1_s35, Constant_out1_s7 ],  ...
Switch5_out1_s24,  ...
InitCycles_out1_s21, 'Switch5',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_aSign__1____aExponent______out1_s34, Constant1_out1_s8 ],  ...
Switch6_out1_s25,  ...
InitCycles_out1_s21, 'Switch6',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getCompareToValueComp( hN,  ...
Delay4_out1_s14,  ...
aExponent__0_out1_s26,  ...
'==', double( 0 ),  ...
'aExponent == 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
Delay4_out1_s14,  ...
aExponent__CfType_Exponent_I____out1_s27,  ...
'==', fi( 0, nt1, fiMath1, 'hex', 'ff' ),  ...
'aExponent == cfType.Exponent_I...', 0 );


pirelab.getCompareToValueComp( hN,  ...
Delay5_out1_s15,  ...
aMantissa__0_out1_s28,  ...
'==', double( 0 ),  ...
'aMantissa == 0', 0 );


pirelab.getCompareToValueComp( hN,  ...
Delay3_out1_s13,  ...
aSign__1_out1_s29,  ...
'==', fi( 0, nt3, fiMath1, 'hex', '1' ),  ...
'aSign == 1', 0 );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s5, sqrt_Long_out1_s38 ],  ...
if_aExponent__0____aMantissa____out1_s32,  ...
Delay7_out1_s17, 'if (aExponent == 0) && (aMantissa... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ C1_out1_s6, sqrt_Long_out2_s39 ],  ...
if_aExponent__0____aMantissa___1_out1_s33,  ...
Delay7_out1_s17, 'if (aExponent == 0) && (aMantissa... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay9_out1_s19, if_aExponent__0____aMantissa____out1_s32 ],  ...
if_aSign__1____aExponent______out1_s34,  ...
Delay6_out1_s16, 'if (aSign == 1) ||  (aExponent ==... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay8_out1_s18, if_aExponent__0____aMantissa___1_out1_s33 ],  ...
if_aSign__1____aExponent_____1_out1_s35,  ...
Delay6_out1_s16, 'if (aSign == 1) ||  (aExponent ==... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hS = addSignal( hN, sigName, pirTyp, simulinkRate )
hS = hN.addSignal;
hS.Name = sigName;
hS.Type = pirTyp;
hS.SimulinkHandle = 0;
hS.SimulinkRate = simulinkRate;
end 

% Decoded using De-pcode utility v1.2 from file /tmp/tmp9WGVn_.p.
% Please follow local copyright laws when handling this file.

