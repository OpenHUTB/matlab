function hTopN=getConvertHalf2SingleComp(hN,slRate,denormal)
    p=pir(hN.getCtxName);
    hTopN=addNetworks(p,denormal);
    createNetworks(p,denormal,slRate);
end

function hTopN=addNetworks(p,denormal)
    hN=p.addNetwork;
    hN.Name='Convert_Half2Single';
    hN.FullPath='Convert_Half2Single';
    hTopN=hN;
    hN=p.addNetwork;
    hN.Name='NFP_Convert_Half2Single';
    hN.FullPath='Convert_Half2Single/NFP_Convert_Half2Single';
    if(denormal)
        hN=p.addNetwork;
        hN.Name='NFP_Convert_Half2Single_Denormals';
        hN.FullPath='Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals';
        hN=p.addNetwork;
        hN.Name='FindFirst1';
        hN.FullPath='Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals/FindFirst1';
    else
        hN=p.addNetwork;
        hN.Name='NFP_Convert_Half2Single_Normals';
        hN.FullPath='Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Normals';
    end
end

function createNetworks(p,denormal,slRate)
    if(denormal)
        hN_n3=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals/FindFirst1');
        createNetwork_n3(p,hN_n3,slRate);
        hN_n2=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals');
        createNetwork_n2(p,hN_n2,slRate);
    else
        hN_n2=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Normals');
        createNetwork_n2_normals(p,hN_n2,slRate);
    end
    hN_n1=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single');
    createNetwork_n1(p,hN_n1,denormal,slRate);
    hN_n0=p.findNetwork('fullname','Convert_Half2Single');
    createNetwork_n0(p,hN_n0,slRate);
end

function hN=createNetwork_n3(~,hN,slRate1)
    pirTyp6=pir_ufixpt_t(1,0);
    pirTyp5=pir_ufixpt_t(1,0);
    pirTyp1=pir_ufixpt_t(10,0);
    pirTyp3=pir_ufixpt_t(2,0);
    pirTyp4=pir_ufixpt_t(3,0);
    pirTyp2=pir_ufixpt_t(4,0);

    fiMath1=fimath('RoundingMethod','Nearest','OverflowAction','Saturate','ProductMode','FullPrecision','SumMode','FullPrecision');

    nt2=numerictype(0,1,0);
    nt1=numerictype(0,2,0);


    hN.addInputPort('In1');
    In1_s0=addSignal(hN,'In1',pirTyp1,slRate1);
    In1_s0.addDriver(hN,0);

    hN.addOutputPort('Out1');
    BitConcat2_out1_s3=addSignal(hN,'Bit Concat2_out1',pirTyp2,slRate1);
    BitConcat2_out1_s3.addReceiver(hN,0);

    BitConcat_out1_s1=addSignal(hN,'Bit Concat_out1',pirTyp2,slRate1);
    BitConcat1_out1_s2=addSignal(hN,'Bit Concat1_out1',pirTyp2,slRate1);
    BitConcat3_out1_s4=addSignal(hN,'Bit Concat3_out1',pirTyp3,slRate1);
    BitSlice_out1_s5=addSignal(hN,'Bit Slice_out1',pirTyp4,slRate1);
    BitSlice1_out1_s6=addSignal(hN,'Bit Slice1_out1',pirTyp2,slRate1);
    BitSlice2_out1_s7=addSignal(hN,'Bit Slice2_out1',pirTyp4,slRate1);
    BitSlice3_out1_s8=addSignal(hN,'Bit Slice3_out1',pirTyp3,slRate1);
    BitSlice4_out1_s9=addSignal(hN,'Bit Slice4_out1',pirTyp5,slRate1);
    BitSlice5_out1_s10=addSignal(hN,'Bit Slice5_out1',pirTyp5,slRate1);
    CompareToZero_out1_s11=addSignal(hN,sprintf('Compare\nTo Zero_out1'),pirTyp6,slRate1);
    CompareToZero1_out1_s12=addSignal(hN,sprintf('Compare\nTo Zero1_out1'),pirTyp6,slRate1);
    CompareToZero2_out1_s13=addSignal(hN,sprintf('Compare\nTo Zero2_out1'),pirTyp6,slRate1);
    Constant_out1_s14=addSignal(hN,'Constant_out1',pirTyp3,slRate1);
    Constant1_out1_s15=addSignal(hN,'Constant1_out1',pirTyp3,slRate1);
    Constant2_out1_s16=addSignal(hN,'Constant2_out1',pirTyp3,slRate1);
    Constant3_out1_s17=addSignal(hN,'Constant3_out1',pirTyp5,slRate1);
    Constant4_out1_s18=addSignal(hN,'Constant4_out1',pirTyp5,slRate1);
    LogicalOperator_out1_s19=addSignal(hN,sprintf('Logical\nOperator_out1'),pirTyp6,slRate1);
    LogicalOperator1_out1_s20=addSignal(hN,sprintf('Logical\nOperator1_out1'),pirTyp6,slRate1);
    Switch_out1_s21=addSignal(hN,'Switch_out1',pirTyp3,slRate1);
    Switch1_out1_s22=addSignal(hN,'Switch1_out1',pirTyp3,slRate1);
    Switch2_out1_s23=addSignal(hN,'Switch2_out1',pirTyp2,slRate1);
    Switch3_out1_s24=addSignal(hN,'Switch3_out1',pirTyp2,slRate1);
    Switch4_out1_s25=addSignal(hN,'Switch4_out1',pirTyp6,slRate1);


    pirelab.getConstComp(hN,...
    Constant_out1_s14,...
    fi(0,nt1,fiMath1,'hex','0'),...
    'Constant','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant1_out1_s15,...
    fi(0,nt1,fiMath1,'hex','1'),...
    'Constant1','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant2_out1_s16,...
    fi(0,nt1,fiMath1,'hex','2'),...
    'Constant2','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant3_out1_s17,...
    fi(0,nt2,fiMath1,'hex','0'),...
    'Constant3','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant4_out1_s18,...
    fi(0,nt2,fiMath1,'hex','0'),...
    'Constant4','on',1,'','','');


    pirelab.getBitConcatComp(hN,...
    [Constant3_out1_s17,BitSlice_out1_s5],...
    BitConcat_out1_s1,...
    'Bit Concat');


    pirelab.getBitConcatComp(hN,...
    [BitSlice2_out1_s7,Constant4_out1_s18],...
    BitConcat1_out1_s2,...
    'Bit Concat1');


    pirelab.getBitConcatComp(hN,...
    [Switch_out1_s21,BitConcat3_out1_s4],...
    BitConcat2_out1_s3,...
    'Bit Concat2');


    pirelab.getBitConcatComp(hN,...
    [CompareToZero2_out1_s13,Switch4_out1_s25],...
    BitConcat3_out1_s4,...
    'Bit Concat3');


    pirelab.getBitSliceComp(hN,...
    In1_s0,...
    BitSlice_out1_s5,...
    9,7,'Bit Slice');


    pirelab.getBitSliceComp(hN,...
    In1_s0,...
    BitSlice1_out1_s6,...
    6,3,'Bit Slice1');


    pirelab.getBitSliceComp(hN,...
    In1_s0,...
    BitSlice2_out1_s7,...
    2,0,'Bit Slice2');


    pirelab.getBitSliceComp(hN,...
    Switch2_out1_s23,...
    BitSlice3_out1_s8,...
    3,2,'Bit Slice3');


    pirelab.getBitSliceComp(hN,...
    Switch2_out1_s23,...
    BitSlice4_out1_s9,...
    3,3,'Bit Slice4');


    pirelab.getBitSliceComp(hN,...
    Switch2_out1_s23,...
    BitSlice5_out1_s10,...
    1,1,'Bit Slice5');


    pirelab.getCompareToValueComp(hN,...
    BitSlice_out1_s5,...
    CompareToZero_out1_s11,...
    '~=',double(0),...
    sprintf('Compare\nTo Zero'),0);


    pirelab.getCompareToValueComp(hN,...
    BitSlice1_out1_s6,...
    CompareToZero1_out1_s12,...
    '~=',double(0),...
    sprintf('Compare\nTo Zero1'),0);


    pirelab.getCompareToValueComp(hN,...
    BitSlice3_out1_s8,...
    CompareToZero2_out1_s13,...
    '==',double(0),...
    sprintf('Compare\nTo Zero2'),0);


    pirelab.getLogicComp(hN,...
    BitSlice5_out1_s10,...
    LogicalOperator_out1_s19,...
    'not',sprintf('Logical\nOperator'));


    pirelab.getLogicComp(hN,...
    BitSlice4_out1_s9,...
    LogicalOperator1_out1_s20,...
    'not',sprintf('Logical\nOperator1'));


    pirelab.getSwitchComp(hN,...
    [Constant_out1_s14,Switch1_out1_s22],...
    Switch_out1_s21,...
    CompareToZero_out1_s11,'Switch',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [Constant1_out1_s15,Constant2_out1_s16],...
    Switch1_out1_s22,...
    CompareToZero1_out1_s12,'Switch1',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [BitConcat_out1_s1,Switch3_out1_s24],...
    Switch2_out1_s23,...
    CompareToZero_out1_s11,'Switch2',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [BitSlice1_out1_s6,BitConcat1_out1_s2],...
    Switch3_out1_s24,...
    CompareToZero1_out1_s12,'Switch3',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [LogicalOperator_out1_s19,LogicalOperator1_out1_s20],...
    Switch4_out1_s25,...
    CompareToZero2_out1_s13,'Switch4',...
    '~=',0,'Floor','Wrap');


end

function hN=createNetwork_n2(p,hN,slRate1)
    pirTyp6=pir_ufixpt_t(1,0);
    pirTyp1=pir_ufixpt_t(1,0);
    pirTyp3=pir_ufixpt_t(10,0);
    pirTyp7=pir_ufixpt_t(13,0);
    pirTyp5=pir_ufixpt_t(23,0);
    pirTyp8=pir_ufixpt_t(4,0);
    pirTyp2=pir_ufixpt_t(5,0);
    pirTyp9=pir_ufixpt_t(8,0);
    pirTyp4=pir_ufixpt_t(8,0);

    fiMath1=fimath('RoundingMethod','Nearest','OverflowAction','Saturate','ProductMode','FullPrecision','SumMode','FullPrecision');

    nt3=numerictype(0,1,0);
    nt5=numerictype(0,10,0);
    nt2=numerictype(0,13,0);
    nt6=numerictype(0,23,0);
    nt4=numerictype(0,5,0);
    nt1=numerictype(0,8,0);


    hN.addInputPort('In1');
    In1_s0=addSignal(hN,'In1',pirTyp1,slRate1);
    In1_s0.addDriver(hN,0);

    hN.addInputPort('In2');
    In2_s1=addSignal(hN,'In2',pirTyp2,slRate1);
    In2_s1.addDriver(hN,1);

    hN.addInputPort('In3');
    In3_s2=addSignal(hN,'In3',pirTyp3,slRate1);
    In3_s2.addDriver(hN,2);

    hN.addOutputPort('Out1');
    Delay3_out1_s20=addSignal(hN,'Delay3_out1',pirTyp1,slRate1);
    Delay3_out1_s20.addReceiver(hN,0);

    hN.addOutputPort('Out2');
    Delay4_out1_s21=addSignal(hN,'Delay4_out1',pirTyp4,slRate1);
    Delay4_out1_s21.addReceiver(hN,1);

    hN.addOutputPort('Out3');
    Delay5_out1_s22=addSignal(hN,'Delay5_out1',pirTyp5,slRate1);
    Delay5_out1_s22.addReceiver(hN,2);

    Add_out1_s3=addSignal(hN,'Add_out1',pirTyp4,slRate1);
    Add1_out1_s4=addSignal(hN,'Add1_out1',pirTyp4,slRate1);
    BitConcat_out1_s5=addSignal(hN,'Bit Concat_out1',pirTyp5,slRate1);
    CompareToConstant_out1_s6=addSignal(hN,sprintf('Compare\nTo Constant_out1'),pirTyp6,slRate1);
    CompareToZero_out1_s7=addSignal(hN,sprintf('Compare\nTo Zero_out1'),pirTyp6,slRate1);
    CompareToZero1_out1_s8=addSignal(hN,sprintf('Compare\nTo Zero1_out1'),pirTyp6,slRate1);
    Constant_out1_s9=addSignal(hN,'Constant_out1',pirTyp4,slRate1);
    Constant2_out1_s10=addSignal(hN,'Constant2_out1',pirTyp4,slRate1);
    Constant3_out1_s11=addSignal(hN,'Constant3_out1',pirTyp4,slRate1);
    Constant4_out1_s12=addSignal(hN,'Constant4_out1',pirTyp7,slRate1);
    Constant5_out1_s13=addSignal(hN,'Constant5_out1',pirTyp4,slRate1);
    Delay_out1_s14=addSignal(hN,'Delay_out1',pirTyp1,slRate1);
    Delay1_out1_s15=addSignal(hN,'Delay1_out1',pirTyp2,slRate1);
    Delay10_out1_s16=addSignal(hN,'Delay10_out1',pirTyp6,slRate1);
    Delay11_out1_s17=addSignal(hN,'Delay11_out1',pirTyp3,slRate1);
    Delay12_out1_s18=addSignal(hN,'Delay12_out1',pirTyp8,slRate1);
    Delay2_out1_s19=addSignal(hN,'Delay2_out1',pirTyp3,slRate1);
    Delay6_out1_s23=addSignal(hN,'Delay6_out1',pirTyp1,slRate1);
    Delay7_out1_s24=addSignal(hN,'Delay7_out1',pirTyp6,slRate1);
    Delay8_out1_s25=addSignal(hN,'Delay8_out1',pirTyp6,slRate1);
    Delay9_out1_s26=addSignal(hN,'Delay9_out1',pirTyp2,slRate1);
    y_s27=addSignal(hN,'y',pirTyp8,slRate1);
    LogicalOperator_out1_s28=addSignal(hN,sprintf('Logical\nOperator_out1'),pirTyp6,slRate1);
    ShiftArithmetic_out1_s29=addSignal(hN,sprintf('Shift\nArithmetic_out1'),pirTyp3,slRate1);
    Switch_out1_s30=addSignal(hN,'Switch_out1',pirTyp4,slRate1);
    Switch2_out1_s31=addSignal(hN,'Switch2_out1',pirTyp4,slRate1);
    Switch3_out1_s32=addSignal(hN,'Switch3_out1',pirTyp3,slRate1);
    Switch4_out1_s33=addSignal(hN,'Switch4_out1',pirTyp4,slRate1);

    hRefN=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals/FindFirst1');
    FindFirst1=hN.addComponent('ntwk_instance_comp',hRefN);
    FindFirst1.Name='FindFirst1';
    pirelab.connectNtwkInstComp(FindFirst1,...
    Delay2_out1_s19,...
    y_s27);


    pirelab.getConstComp(hN,...
    Constant_out1_s9,...
    fi(0,nt1,fiMath1,'hex','ff'),...
    'Constant','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant2_out1_s10,...
    fi(0,nt1,fiMath1,'hex','70'),...
    'Constant2','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant3_out1_s11,...
    fi(0,nt1,fiMath1,'hex','00'),...
    'Constant3','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant4_out1_s12,...
    fi(0,nt2,fiMath1,'hex','0000'),...
    'Constant4','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant5_out1_s13,...
    fi(0,nt1,fiMath1,'hex','71'),...
    'Constant5','on',0,'','','');


    pirelab.getIntDelayComp(hN,...
    In1_s0,...
    Delay_out1_s14,...
    transformnfp.MinLatencyDelay1,'Delay',...
    fi(0,nt3,fiMath1,'hex','0'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    In2_s1,...
    Delay1_out1_s15,...
    transformnfp.MinLatencyDelay1,'Delay1',...
    fi(0,nt4,fiMath1,'hex','00'),...
    0,0,[],0,0);


    pirelab.getWireComp(hN,...
    CompareToZero_out1_s7,...
    Delay10_out1_s16,...
    'Delay10');


    pirelab.getWireComp(hN,...
    Delay2_out1_s19,...
    Delay11_out1_s17,...
    'Delay11');


    pirelab.getWireComp(hN,...
    y_s27,...
    Delay12_out1_s18,...
    'Delay12');


    pirelab.getIntDelayComp(hN,...
    In3_s2,...
    Delay2_out1_s19,...
    transformnfp.MinLatencyDelay1,'Delay2',...
    fi(0,nt5,fiMath1,'hex','000'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    Delay6_out1_s23,...
    Delay3_out1_s20,...
    transformnfp.Delay1,'Delay3',...
    fi(0,nt3,fiMath1,'hex','0'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    Switch_out1_s30,...
    Delay4_out1_s21,...
    transformnfp.Delay1,'Delay4',...
    uint8(0),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    BitConcat_out1_s5,...
    Delay5_out1_s22,...
    transformnfp.Delay1,'Delay5',...
    fi(0,nt6,fiMath1,'hex','000000'),...
    0,0,[],0,0);


    pirelab.getWireComp(hN,...
    Delay_out1_s14,...
    Delay6_out1_s23,...
    'Delay6');


    pirelab.getWireComp(hN,...
    CompareToConstant_out1_s6,...
    Delay7_out1_s24,...
    'Delay7');


    pirelab.getWireComp(hN,...
    CompareToZero1_out1_s8,...
    Delay8_out1_s25,...
    'Delay8');


    pirelab.getWireComp(hN,...
    Delay1_out1_s15,...
    Delay9_out1_s26,...
    'Delay9');


    pirelab.getAddComp(hN,...
    [Constant2_out1_s10,Delay9_out1_s26],...
    Add_out1_s3,...
    'Floor','Wrap','Add',pirTyp9,'++');


    pirelab.getAddComp(hN,...
    [Constant5_out1_s13,Delay12_out1_s18],...
    Add1_out1_s4,...
    'Floor','Wrap','Add1',pirTyp9,'+-');


    pirelab.getBitConcatComp(hN,...
    [Switch3_out1_s32,Constant4_out1_s12],...
    BitConcat_out1_s5,...
    'Bit Concat');


    pirelab.getCompareToValueComp(hN,...
    Delay1_out1_s15,...
    CompareToConstant_out1_s6,...
    '==',fi(0,nt4,fiMath1,'hex','1f'),...
    sprintf('Compare\nTo Constant'),0);


    pirelab.getCompareToValueComp(hN,...
    Delay2_out1_s19,...
    CompareToZero_out1_s7,...
    '==',double(0),...
    sprintf('Compare\nTo Zero'),0);


    pirelab.getCompareToValueComp(hN,...
    Delay1_out1_s15,...
    CompareToZero1_out1_s8,...
    '==',double(0),...
    sprintf('Compare\nTo Zero1'),0);


    pirelab.getLogicComp(hN,...
    [Delay8_out1_s25,Delay10_out1_s16],...
    LogicalOperator_out1_s28,...
    'and',sprintf('Logical\nOperator'));


    pirelab.getDynamicBitShiftComp(hN,...
    [Delay11_out1_s17,Delay12_out1_s18],...
    ShiftArithmetic_out1_s29,...
    'left','dynamic_shift');


    pirelab.getSwitchComp(hN,...
    [Constant_out1_s9,Switch2_out1_s31],...
    Switch_out1_s30,...
    Delay7_out1_s24,'Switch',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [Constant3_out1_s11,Switch4_out1_s33],...
    Switch2_out1_s31,...
    LogicalOperator_out1_s28,'Switch2',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [ShiftArithmetic_out1_s29,Delay11_out1_s17],...
    Switch3_out1_s32,...
    Delay8_out1_s25,'Switch3',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [Add1_out1_s4,Add_out1_s3],...
    Switch4_out1_s33,...
    Delay8_out1_s25,'Switch4',...
    '~=',0,'Floor','Wrap');


end

function hN=createNetwork_n2_normals(~,hN,slRate1)
    pirTyp6=pir_ufixpt_t(1,0);
    pirTyp1=pir_ufixpt_t(1,0);
    pirTyp3=pir_ufixpt_t(10,0);
    pirTyp7=pir_ufixpt_t(13,0);
    pirTyp5=pir_ufixpt_t(23,0);
    pirTyp2=pir_ufixpt_t(5,0);
    pirTyp8=pir_ufixpt_t(8,0);
    pirTyp4=pir_ufixpt_t(8,0);

    fiMath1=fimath('RoundingMethod','Nearest','OverflowAction','Saturate','ProductMode','FullPrecision','SumMode','FullPrecision');

    nt4=numerictype(0,1,0);
    nt2=numerictype(0,10,0);
    nt3=numerictype(0,13,0);
    nt6=numerictype(0,23,0);
    nt5=numerictype(0,5,0);
    nt1=numerictype(0,8,0);


    hN.addInputPort('In1');
    In1_s0=addSignal(hN,'In1',pirTyp1,slRate1);
    In1_s0.addDriver(hN,0);

    hN.addInputPort('In2');
    In2_s1=addSignal(hN,'In2',pirTyp2,slRate1);
    In2_s1.addDriver(hN,1);

    hN.addInputPort('In3');
    In3_s2=addSignal(hN,'In3',pirTyp3,slRate1);
    In3_s2.addDriver(hN,2);

    hN.addOutputPort('Out1');
    Delay3_out1_s16=addSignal(hN,'Delay3_out1',pirTyp1,slRate1);
    Delay3_out1_s16.addReceiver(hN,0);

    hN.addOutputPort('Out2');
    Delay4_out1_s17=addSignal(hN,'Delay4_out1',pirTyp4,slRate1);
    Delay4_out1_s17.addReceiver(hN,1);

    hN.addOutputPort('Out3');
    Delay5_out1_s18=addSignal(hN,'Delay5_out1',pirTyp5,slRate1);
    Delay5_out1_s18.addReceiver(hN,2);

    Add_out1_s3=addSignal(hN,'Add_out1',pirTyp4,slRate1);
    BitConcat_out1_s4=addSignal(hN,'Bit Concat_out1',pirTyp5,slRate1);
    CompareToConstant_out1_s5=addSignal(hN,sprintf('Compare\nTo Constant_out1'),pirTyp6,slRate1);
    CompareToZero1_out1_s6=addSignal(hN,sprintf('Compare\nTo Zero1_out1'),pirTyp6,slRate1);
    Constant_out1_s7=addSignal(hN,'Constant_out1',pirTyp4,slRate1);
    Constant1_out1_s8=addSignal(hN,'Constant1_out1',pirTyp3,slRate1);
    Constant2_out1_s9=addSignal(hN,'Constant2_out1',pirTyp4,slRate1);
    Constant3_out1_s10=addSignal(hN,'Constant3_out1',pirTyp4,slRate1);
    Constant4_out1_s11=addSignal(hN,'Constant4_out1',pirTyp7,slRate1);
    Delay_out1_s12=addSignal(hN,'Delay_out1',pirTyp1,slRate1);
    Delay1_out1_s13=addSignal(hN,'Delay1_out1',pirTyp2,slRate1);
    Delay11_out1_s14=addSignal(hN,'Delay11_out1',pirTyp3,slRate1);
    Delay2_out1_s15=addSignal(hN,'Delay2_out1',pirTyp3,slRate1);
    Delay6_out1_s19=addSignal(hN,'Delay6_out1',pirTyp1,slRate1);
    Delay7_out1_s20=addSignal(hN,'Delay7_out1',pirTyp6,slRate1);
    Delay8_out1_s21=addSignal(hN,'Delay8_out1',pirTyp6,slRate1);
    Delay9_out1_s22=addSignal(hN,'Delay9_out1',pirTyp2,slRate1);
    Switch_out1_s23=addSignal(hN,'Switch_out1',pirTyp4,slRate1);
    Switch2_out1_s24=addSignal(hN,'Switch2_out1',pirTyp4,slRate1);
    Switch3_out1_s25=addSignal(hN,'Switch3_out1',pirTyp3,slRate1);


    pirelab.getConstComp(hN,...
    Constant_out1_s7,...
    fi(0,nt1,fiMath1,'hex','ff'),...
    'Constant','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant1_out1_s8,...
    fi(0,nt2,fiMath1,'hex','000'),...
    'Constant1','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant2_out1_s9,...
    fi(0,nt1,fiMath1,'hex','70'),...
    'Constant2','on',0,'','','');


    pirelab.getConstComp(hN,...
    Constant3_out1_s10,...
    fi(0,nt1,fiMath1,'hex','00'),...
    'Constant3','on',1,'','','');


    pirelab.getConstComp(hN,...
    Constant4_out1_s11,...
    fi(0,nt3,fiMath1,'hex','0000'),...
    'Constant4','on',1,'','','');


    pirelab.getIntDelayComp(hN,...
    In1_s0,...
    Delay_out1_s12,...
    transformnfp.MinLatencyDelay1,'Delay',...
    fi(0,nt4,fiMath1,'hex','0'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    In2_s1,...
    Delay1_out1_s13,...
    transformnfp.MinLatencyDelay1,'Delay1',...
    fi(0,nt5,fiMath1,'hex','00'),...
    0,0,[],0,0);


    pirelab.getWireComp(hN,...
    Delay2_out1_s15,...
    Delay11_out1_s14,...
    'Delay11');


    pirelab.getIntDelayComp(hN,...
    In3_s2,...
    Delay2_out1_s15,...
    transformnfp.MinLatencyDelay1,'Delay2',...
    fi(0,nt2,fiMath1,'hex','000'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    Delay6_out1_s19,...
    Delay3_out1_s16,...
    transformnfp.Delay1,'Delay3',...
    fi(0,nt4,fiMath1,'hex','0'),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    Switch_out1_s23,...
    Delay4_out1_s17,...
    transformnfp.Delay1,'Delay4',...
    uint8(0),...
    0,0,[],0,0);


    pirelab.getIntDelayComp(hN,...
    BitConcat_out1_s4,...
    Delay5_out1_s18,...
    transformnfp.Delay1,'Delay5',...
    fi(0,nt6,fiMath1,'hex','000000'),...
    0,0,[],0,0);


    pirelab.getWireComp(hN,...
    Delay_out1_s12,...
    Delay6_out1_s19,...
    'Delay6');


    pirelab.getWireComp(hN,...
    CompareToConstant_out1_s5,...
    Delay7_out1_s20,...
    'Delay7');


    pirelab.getWireComp(hN,...
    CompareToZero1_out1_s6,...
    Delay8_out1_s21,...
    'Delay8');


    pirelab.getWireComp(hN,...
    Delay1_out1_s13,...
    Delay9_out1_s22,...
    'Delay9');


    pirelab.getAddComp(hN,...
    [Constant2_out1_s9,Delay9_out1_s22],...
    Add_out1_s3,...
    'Floor','Wrap','Add',pirTyp8,'++');


    pirelab.getBitConcatComp(hN,...
    [Switch3_out1_s25,Constant4_out1_s11],...
    BitConcat_out1_s4,...
    'Bit Concat');


    pirelab.getCompareToValueComp(hN,...
    Delay1_out1_s13,...
    CompareToConstant_out1_s5,...
    '==',fi(0,nt5,fiMath1,'hex','1f'),...
    sprintf('Compare\nTo Constant'),0);


    pirelab.getCompareToValueComp(hN,...
    Delay1_out1_s13,...
    CompareToZero1_out1_s6,...
    '==',double(0),...
    sprintf('Compare\nTo Zero1'),0);


    pirelab.getSwitchComp(hN,...
    [Constant_out1_s7,Switch2_out1_s24],...
    Switch_out1_s23,...
    Delay7_out1_s20,'Switch',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [Constant3_out1_s10,Add_out1_s3],...
    Switch2_out1_s24,...
    Delay8_out1_s21,'Switch2',...
    '~=',0,'Floor','Wrap');


    pirelab.getSwitchComp(hN,...
    [Constant1_out1_s8,Delay11_out1_s14],...
    Switch3_out1_s25,...
    Delay8_out1_s21,'Switch3',...
    '~=',0,'Floor','Wrap');


end

function hN=createNetwork_n1(p,hN,denormal,slRate1)
    if(denormal)
        pirTyp1=pir_ufixpt_t(1,0);
        pirTyp3=pir_ufixpt_t(10,0);
        pirTyp5=pir_ufixpt_t(23,0);
        pirTyp2=pir_ufixpt_t(5,0);
        pirTyp4=pir_ufixpt_t(8,0);




        hN.addInputPort('In1 ');
        In1_s0=addSignal(hN,'In1 ',pirTyp1,slRate1);
        In1_s0.addDriver(hN,0);

        hN.addInputPort('In2 ');
        In2_s1=addSignal(hN,'In2 ',pirTyp2,slRate1);
        In2_s1.addDriver(hN,1);

        hN.addInputPort('In3 ');
        In3_s2=addSignal(hN,'In3 ',pirTyp3,slRate1);
        In3_s2.addDriver(hN,2);

        hN.addOutputPort(' Out1');
        NFP_Convert_Half2Single_Denormals_out1_s3=addSignal(hN,'NFP_Convert_Half2Single_Denormals_out1',pirTyp1,slRate1);
        NFP_Convert_Half2Single_Denormals_out1_s3.addReceiver(hN,0);

        hN.addOutputPort(' Out2');
        NFP_Convert_Half2Single_Denormals_out2_s4=addSignal(hN,'NFP_Convert_Half2Single_Denormals_out2',pirTyp4,slRate1);
        NFP_Convert_Half2Single_Denormals_out2_s4.addReceiver(hN,1);

        hN.addOutputPort(' Out3');
        NFP_Convert_Half2Single_Denormals_out3_s5=addSignal(hN,'NFP_Convert_Half2Single_Denormals_out3',pirTyp5,slRate1);
        NFP_Convert_Half2Single_Denormals_out3_s5.addReceiver(hN,2);


        hRefN=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Denormals');
        NFP_Convert_Half2Single_Denormals=hN.addComponent('ntwk_instance_comp',hRefN);
        NFP_Convert_Half2Single_Denormals.Name='NFP_Convert_Half2Single_Denormals';
        pirelab.connectNtwkInstComp(NFP_Convert_Half2Single_Denormals,...
        [In1_s0,In2_s1,In3_s2],...
        [NFP_Convert_Half2Single_Denormals_out1_s3,NFP_Convert_Half2Single_Denormals_out2_s4,NFP_Convert_Half2Single_Denormals_out3_s5]);
    else
        pirTyp1=pir_ufixpt_t(1,0);
        pirTyp3=pir_ufixpt_t(10,0);
        pirTyp5=pir_ufixpt_t(23,0);
        pirTyp2=pir_ufixpt_t(5,0);
        pirTyp4=pir_ufixpt_t(8,0);




        hN.addInputPort('In1 ');
        In1_s0=addSignal(hN,'In1 ',pirTyp1,slRate1);
        In1_s0.addDriver(hN,0);

        hN.addInputPort('In2 ');
        In2_s1=addSignal(hN,'In2 ',pirTyp2,slRate1);
        In2_s1.addDriver(hN,1);

        hN.addInputPort('In3 ');
        In3_s2=addSignal(hN,'In3 ',pirTyp3,slRate1);
        In3_s2.addDriver(hN,2);

        hN.addOutputPort(' Out1');
        NFP_Convert_Half2Single_Normals_out1_s3=addSignal(hN,'NFP_Convert_Half2Single_Normals_out1',pirTyp1,slRate1);
        NFP_Convert_Half2Single_Normals_out1_s3.addReceiver(hN,0);

        hN.addOutputPort(' Out2');
        NFP_Convert_Half2Single_Normals_out2_s4=addSignal(hN,'NFP_Convert_Half2Single_Normals_out2',pirTyp4,slRate1);
        NFP_Convert_Half2Single_Normals_out2_s4.addReceiver(hN,1);

        hN.addOutputPort(' Out3');
        NFP_Convert_Half2Single_Normals_out3_s5=addSignal(hN,'NFP_Convert_Half2Single_Normals_out3',pirTyp5,slRate1);
        NFP_Convert_Half2Single_Normals_out3_s5.addReceiver(hN,2);


        hRefN=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single/NFP_Convert_Half2Single_Normals');
        NFP_Convert_Half2Single_Normals=hN.addComponent('ntwk_instance_comp',hRefN);
        NFP_Convert_Half2Single_Normals.Name='NFP_Convert_Half2Single_Normals';
        pirelab.connectNtwkInstComp(NFP_Convert_Half2Single_Normals,...
        [In1_s0,In2_s1,In3_s2],...
        [NFP_Convert_Half2Single_Normals_out1_s3,NFP_Convert_Half2Single_Normals_out2_s4,NFP_Convert_Half2Single_Normals_out3_s5]);
    end

end

function hN=createNetwork_n0(p,hN,slRate1)
    pirTyp1=pir_ufixpt_t(1,0);
    pirTyp3=pir_ufixpt_t(10,0);
    pirTyp5=pir_ufixpt_t(23,0);
    pirTyp2=pir_ufixpt_t(5,0);
    pirTyp4=pir_ufixpt_t(8,0);






    hN.addInputPort('aSign');
    aSign_s0=addSignal(hN,'aSign',pirTyp1,slRate1);
    aSign_s0.addDriver(hN,0);

    hN.addInputPort('aExponent');
    aExponent_s1=addSignal(hN,'aExponent',pirTyp2,slRate1);
    aExponent_s1.addDriver(hN,1);

    hN.addInputPort('aMantissa');
    aMantissa_s2=addSignal(hN,'aMantissa',pirTyp3,slRate1);
    aMantissa_s2.addDriver(hN,2);

    hN.addOutputPort('Sign');
    NFP_Convert_Half2Single_out1_s3=addSignal(hN,'NFP_Convert_Half2Single_out1',pirTyp1,slRate1);
    NFP_Convert_Half2Single_out1_s3.addReceiver(hN,0);

    hN.addOutputPort('Exponent');
    NFP_Convert_Half2Single_out2_s4=addSignal(hN,'NFP_Convert_Half2Single_out2',pirTyp4,slRate1);
    NFP_Convert_Half2Single_out2_s4.addReceiver(hN,1);

    hN.addOutputPort('Mantissa');
    NFP_Convert_Half2Single_out3_s5=addSignal(hN,'NFP_Convert_Half2Single_out3',pirTyp5,slRate1);
    NFP_Convert_Half2Single_out3_s5.addReceiver(hN,2);


    hRefN=p.findNetwork('fullname','Convert_Half2Single/NFP_Convert_Half2Single');
    NFP_Convert_Half2Single=hN.addComponent('ntwk_instance_comp',hRefN);
    NFP_Convert_Half2Single.Name='NFP_Convert_Half2Single';
    pirelab.connectNtwkInstComp(NFP_Convert_Half2Single,...
    [aSign_s0,aExponent_s1,aMantissa_s2],...
    [NFP_Convert_Half2Single_out1_s3,NFP_Convert_Half2Single_out2_s4,NFP_Convert_Half2Single_out3_s5]);


end

function hS=addSignal(hN,sigName,pirTyp,simulinkRate)
    hS=hN.addSignal;
    hS.Name=sigName;
    hS.Type=pirTyp;
    hS.SimulinkHandle=0;
    hS.SimulinkRate=simulinkRate;
end
