function hTopN = getSingleTanhComp( hN, slRate )




p = pir( hN.getCtxName );

hTopN = addNetworks( p );

createNetworks( p, slRate );
end 

function hTopN = addNetworks( p )
hN = p.addNetwork;
hN.Name = 'Tanh_Single';
hN.FullPath = 'Tanh_Single';
hTopN = hN;
hN = p.addNetwork;
hN.Name = 'InitCycles';
hN.FullPath = 'Tanh_Single/InitCycles';
hN = p.addNetwork;
hN.Name = 'InitCycles';
hN.FullPath = 'Tanh_Single/InitCycles/InitCycles';
hN = p.addNetwork;
hN.Name = 'appendMantissaAndCorrectExponent';
hN.FullPath = 'Tanh_Single/appendMantissaAndCorrectExponent';
hN = p.addNetwork;
hN.Name = 'tanh_Inf_or_NaN';
hN.FullPath = 'Tanh_Single/tanh_Inf_or_NaN';
hN = p.addNetwork;
hN.Name = 'tanh_Main';
hN.FullPath = 'Tanh_Single/tanh_Main';
hN = p.addNetwork;
hN.Name = 'Rounding';
hN.FullPath = 'Tanh_Single/tanh_Main/Rounding';
hN = p.addNetwork;
hN.Name = 'exp_Final_Approximation_Shared';
hN.FullPath = 'Tanh_Single/tanh_Main/exp_Final_Approximation_Shared';
hN = p.addNetwork;
hN.Name = 'tanh_Check_Exp_Range_and_Shift_Mant';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Check_Exp_Range_and_Shift_Mant';
hN = p.addNetwork;
hN.Name = 'tanh_Divide';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Divide';
hN = p.addNetwork;
hN.Name = 'Subsystem';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Divide/Subsystem';
hN = p.addNetwork;
hN.Name = 'rdivide_Long_Div_Radix4';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Divide/rdivide_Long_Div_Radix4';
hN = p.addNetwork;
hN.Name = 'tanh_Extract_Exp_Mant';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Extract_Exp_Mant';
hN = p.addNetwork;
hN.Name = 'tanh_Multiply_by_Log2_E';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_Multiply_by_Log2_E';
hN = p.addNetwork;
hN.Name = 'tanh_One_Plus_Minus_E';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_One_Plus_Minus_E';
hN = p.addNetwork;
hN.Name = 'tanh_exp_neg_Iterations';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations';
hN = p.addNetwork;
hN.Name = 'exp_First_Iteration';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_First_Iteration';
hN = p.addNetwork;
hN.Name = 'exp_Main_Iterations';
hN.FullPath = 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_Main_Iterations';
end 

function createNetworks( p, slRate1 )
hN_n37 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_Main_Iterations' );
createNetwork_n37( p, hN_n37, slRate1 );
hN_n36 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_First_Iteration' );
createNetwork_n36( p, hN_n36, slRate1 );
hN_n35 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations' );
createNetwork_n35( p, hN_n35, slRate1 );
hN_n32 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_One_Plus_Minus_E' );
createNetwork_n32( p, hN_n32, slRate1 );
hN_n31 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Multiply_by_Log2_E' );
createNetwork_n31( p, hN_n31, slRate1 );
hN_n30 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Extract_Exp_Mant' );
createNetwork_n30( p, hN_n30, slRate1 );
hN_n12 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide/rdivide_Long_Div_Radix4' );
createNetwork_n12( p, hN_n12, slRate1 );
hN_n11 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide/Subsystem' );
createNetwork_n11( p, hN_n11, slRate1 );
hN_n10 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide' );
createNetwork_n10( p, hN_n10, slRate1 );
hN_n9 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Check_Exp_Range_and_Shift_Mant' );
createNetwork_n9( p, hN_n9, slRate1 );
hN_n8 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/exp_Final_Approximation_Shared' );
createNetwork_n8( p, hN_n8, slRate1 );
hN_n7 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/Rounding' );
createNetwork_n7( p, hN_n7, slRate1 );
hN_n6 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main' );
createNetwork_n6( p, hN_n6, slRate1 );
hN_n5 = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Inf_or_NaN' );
createNetwork_n5( p, hN_n5, slRate1 );
hN_n4 = p.findNetwork( 'fullname', 'Tanh_Single/appendMantissaAndCorrectExponent' );
createNetwork_n4( p, hN_n4, slRate1 );
hN_n2 = p.findNetwork( 'fullname', 'Tanh_Single/InitCycles/InitCycles' );
createNetwork_n2( p, hN_n2, slRate1 );
hN_n1 = p.findNetwork( 'fullname', 'Tanh_Single/InitCycles' );
createNetwork_n1( p, hN_n1, slRate1 );
hN_n0 = p.findNetwork( 'fullname', 'Tanh_Single' );
createNetwork_n0( p, hN_n0, slRate1 );
end 

function hN = createNetwork_n37( ~, hN, slRate1 )
pirTyp11 = pir_ufixpt_t( 1, 0 );
pirTyp9 = pir_sfixpt_t( 13,  - 10 );
pirTyp7 = pir_sfixpt_t( 18,  - 15 );
pirTyp4 = pir_sfixpt_t( 23,  - 21 );
pirTyp10 = pir_sfixpt_t( 24,  - 21 );
pirTyp8 = pir_sfixpt_t( 31,  - 28 );
pirTyp2 = pir_sfixpt_t( 35,  - 33 );
pirTyp3 = pir_sfixpt_t( 36,  - 33 );
pirTyp1 = pir_sfixpt_t( 4,  - 1 );
pirTyp5 = pir_sfixpt_t( 6,  - 3 );
pirTyp6 = pir_sfixpt_t( 9,  - 6 );
pirTyp12 = pir_ufixpt_t( 1, 0 );
pirTyp18 = pir_ufixpt_t( 13, 0 );
pirTyp20 = pir_ufixpt_t( 18, 0 );
pirTyp15 = pir_ufixpt_t( 2, 0 );
pirTyp13 = pir_ufixpt_t( 23, 0 );
pirTyp22 = pir_ufixpt_t( 24, 0 );
pirTyp17 = pir_ufixpt_t( 3, 0 );
pirTyp23 = pir_ufixpt_t( 31, 0 );
pirTyp25 = pir_ufixpt_t( 36, 0 );
pirTyp19 = pir_ufixpt_t( 4, 0 );
pirTyp21 = pir_ufixpt_t( 5, 0 );
pirTyp14 = pir_ufixpt_t( 6, 0 );
pirTyp24 = pir_ufixpt_t( 7, 0 );
pirTyp16 = pir_ufixpt_t( 9, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt3 = numerictype( 0, 2, 0 );
nt4 = numerictype( 0, 3, 0 );
nt5 = numerictype( 0, 4, 0 );
nt6 = numerictype( 0, 5, 0 );
nt7 = numerictype( 0, 6, 0 );
nt8 = numerictype( 0, 7, 0 );
nt14 = numerictype( 1, 13, 10 );
nt11 = numerictype( 1, 18, 15 );
nt2 = numerictype( 1, 23, 21 );
nt15 = numerictype( 1, 24, 21 );
nt12 = numerictype( 1, 31, 28 );
nt1 = numerictype( 1, 35, 33 );
nt13 = numerictype( 1, 36, 33 );
nt9 = numerictype( 1, 6, 3 );
nt10 = numerictype( 1, 9, 6 );




hN.addInputPort( 'y' );
y_s0 = addSignal( hN, 'y', pirTyp1, slRate1 );
y_s0.addDriver( hN, 0 );

hN.addInputPort( 'w' );
w_s1 = addSignal( hN, 'w', pirTyp2, slRate1 );
w_s1.addDriver( hN, 1 );

hN.addOutputPort( 'y1' );
exp_Iteration14_out1_s34 = addSignal( hN, 'exp_Iteration14_out1', pirTyp3, slRate1 );
exp_Iteration14_out1_s34.addReceiver( hN, 0 );

hN.addOutputPort( 'w1' );
exp_Iteration14_out2_s35 = addSignal( hN, 'exp_Iteration14_out2', pirTyp4, slRate1 );
exp_Iteration14_out2_s35.addReceiver( hN, 1 );

Delay_out1_s2 = addSignal( hN, 'Delay_out1', pirTyp5, slRate1 );
Delay1_out1_s3 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay10_out1_s4 = addSignal( hN, 'Delay10_out1', pirTyp6, slRate1 );
Delay11_out1_s5 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay12_out1_s6 = addSignal( hN, 'Delay12_out1', pirTyp7, slRate1 );
Delay13_out1_s7 = addSignal( hN, 'Delay13_out1', pirTyp2, slRate1 );
Delay14_out1_s8 = addSignal( hN, 'Delay14_out1', pirTyp8, slRate1 );
Delay15_out1_s9 = addSignal( hN, 'Delay15_out1', pirTyp2, slRate1 );
Delay16_out1_s10 = addSignal( hN, 'Delay16_out1', pirTyp3, slRate1 );
Delay17_out1_s11 = addSignal( hN, 'Delay17_out1', pirTyp2, slRate1 );
Delay18_out1_s12 = addSignal( hN, 'Delay18_out1', pirTyp3, slRate1 );
Delay19_out1_s13 = addSignal( hN, 'Delay19_out1', pirTyp2, slRate1 );
Delay2_out1_s14 = addSignal( hN, 'Delay2_out1', pirTyp9, slRate1 );
Delay20_out1_s15 = addSignal( hN, 'Delay20_out1', pirTyp3, slRate1 );
Delay21_out1_s16 = addSignal( hN, 'Delay21_out1', pirTyp2, slRate1 );
Delay22_out1_s17 = addSignal( hN, 'Delay22_out1', pirTyp3, slRate1 );
Delay23_out1_s18 = addSignal( hN, 'Delay23_out1', pirTyp2, slRate1 );
Delay3_out1_s19 = addSignal( hN, 'Delay3_out1', pirTyp2, slRate1 );
Delay4_out1_s20 = addSignal( hN, 'Delay4_out1', pirTyp10, slRate1 );
Delay5_out1_s21 = addSignal( hN, 'Delay5_out1', pirTyp2, slRate1 );
Delay6_out1_s22 = addSignal( hN, 'Delay6_out1', pirTyp3, slRate1 );
Delay7_out1_s23 = addSignal( hN, 'Delay7_out1', pirTyp2, slRate1 );
Delay8_out1_s24 = addSignal( hN, 'Delay8_out1', pirTyp3, slRate1 );
Delay9_out1_s25 = addSignal( hN, 'Delay9_out1', pirTyp2, slRate1 );
exp_Iteration10_out1_s26 = addSignal( hN, 'exp_Iteration10_out1', pirTyp3, slRate1 );
exp_Iteration10_out2_s27 = addSignal( hN, 'exp_Iteration10_out2', pirTyp2, slRate1 );
exp_Iteration11_out1_s28 = addSignal( hN, 'exp_Iteration11_out1', pirTyp3, slRate1 );
exp_Iteration11_out2_s29 = addSignal( hN, 'exp_Iteration11_out2', pirTyp2, slRate1 );
exp_Iteration12_out1_s30 = addSignal( hN, 'exp_Iteration12_out1', pirTyp3, slRate1 );
exp_Iteration12_out2_s31 = addSignal( hN, 'exp_Iteration12_out2', pirTyp2, slRate1 );
exp_Iteration13_out1_s32 = addSignal( hN, 'exp_Iteration13_out1', pirTyp3, slRate1 );
exp_Iteration13_out2_s33 = addSignal( hN, 'exp_Iteration13_out2', pirTyp2, slRate1 );
exp_Iteration2_out1_s36 = addSignal( hN, 'exp_Iteration2_out1', pirTyp5, slRate1 );
exp_Iteration2_out2_s37 = addSignal( hN, 'exp_Iteration2_out2', pirTyp2, slRate1 );
exp_Iteration3_out1_s38 = addSignal( hN, 'exp_Iteration3_out1', pirTyp6, slRate1 );
exp_Iteration3_out2_s39 = addSignal( hN, 'exp_Iteration3_out2', pirTyp2, slRate1 );
exp_Iteration4_out1_s40 = addSignal( hN, 'exp_Iteration4_out1', pirTyp9, slRate1 );
exp_Iteration4_out2_s41 = addSignal( hN, 'exp_Iteration4_out2', pirTyp2, slRate1 );
exp_Iteration5_out1_s42 = addSignal( hN, 'exp_Iteration5_out1', pirTyp7, slRate1 );
exp_Iteration5_out2_s43 = addSignal( hN, 'exp_Iteration5_out2', pirTyp2, slRate1 );
exp_Iteration6_out1_s44 = addSignal( hN, 'exp_Iteration6_out1', pirTyp10, slRate1 );
exp_Iteration6_out2_s45 = addSignal( hN, 'exp_Iteration6_out2', pirTyp2, slRate1 );
exp_Iteration7_out1_s46 = addSignal( hN, 'exp_Iteration7_out1', pirTyp8, slRate1 );
exp_Iteration7_out2_s47 = addSignal( hN, 'exp_Iteration7_out2', pirTyp2, slRate1 );
exp_Iteration8_out1_s48 = addSignal( hN, 'exp_Iteration8_out1', pirTyp3, slRate1 );
exp_Iteration8_out2_s49 = addSignal( hN, 'exp_Iteration8_out2', pirTyp2, slRate1 );
exp_Iteration9_out1_s50 = addSignal( hN, 'exp_Iteration9_out1', pirTyp3, slRate1 );
exp_Iteration9_out2_s51 = addSignal( hN, 'exp_Iteration9_out2', pirTyp2, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s54 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s55 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s56 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Log2MinusTable_int32_10___out1_s57 = addSignal( hN, 'Log2MinusTable(int32(10)) _out1', pirTyp2, slRate1 );
Log2Table_int32_10___out1_s58 = addSignal( hN, 'Log2Table(int32(10)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s59 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s60 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s61 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s62 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s63 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s64 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s65 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s66 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s67 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s70 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s71 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s72 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Log2MinusTable_int32_11___out1_s73 = addSignal( hN, 'Log2MinusTable(int32(11)) _out1', pirTyp2, slRate1 );
Log2Table_int32_11___out1_s74 = addSignal( hN, 'Log2Table(int32(11)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s75 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s76 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s77 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s78 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s79 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s80 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s81 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s82 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s83 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s86 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s87 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s88 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Log2MinusTable_int32_12___out1_s89 = addSignal( hN, 'Log2MinusTable(int32(12)) _out1', pirTyp2, slRate1 );
Log2Table_int32_12___out1_s90 = addSignal( hN, 'Log2Table(int32(12)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s91 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s92 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s93 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s94 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s95 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s96 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s97 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s98 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s99 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s102 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s103 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s104 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Log2MinusTable_int32_13___out1_s105 = addSignal( hN, 'Log2MinusTable(int32(13)) _out1', pirTyp2, slRate1 );
Log2Table_int32_13___out1_s106 = addSignal( hN, 'Log2Table(int32(13)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s107 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s108 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s109 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s110 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s111 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s112 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s113 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s114 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s115 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s118 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s119 = addSignal( hN, 'Bit Slice_out1', pirTyp13, slRate1 );
BitSlice_out1_s120 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s121 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
DataTypeConversion_out1_s122 = addSignal( hN, 'Data Type Conversion_out1', pirTyp4, slRate1 );
Log2MinusTable_int32_14___out1_s123 = addSignal( hN, 'Log2MinusTable(int32(14)) _out1', pirTyp4, slRate1 );
Log2Table_int32_14___out1_s124 = addSignal( hN, 'Log2Table(int32(14)) _out1', pirTyp4, slRate1 );
bitsrl_y_Int32_2___out1_s125 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s126 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp4, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s127 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s128 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp4, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s129 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s130 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp4, slRate1 );
y_Tmp1_out1_s131 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s132 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s135 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s136 = addSignal( hN, 'Bit Concat_out1', pirTyp14, slRate1 );
BitSlice_out1_s137 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s138 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s139 = addSignal( hN, 'Constant_out1', pirTyp15, slRate1 );
Log2MinusTable_int32_2___out1_s140 = addSignal( hN, 'Log2MinusTable(int32(2)) _out1', pirTyp2, slRate1 );
Log2Table_int32_2___out1_s141 = addSignal( hN, 'Log2Table(int32(2)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s142 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s143 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp5, slRate1 );
dtc1_out1_s144 = addSignal( hN, 'dtc1_out1', pirTyp5, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s145 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s146 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp5, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s147 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s148 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp5, slRate1 );
w_Log2MinusTable_int32_2__1_out1_s149 = addSignal( hN, 'w + Log2MinusTable(int32(2))1_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s150 = addSignal( hN, 'y + tmp1_out1', pirTyp5, slRate1 );
y_Tmp1_out1_s151 = addSignal( hN, 'y - tmp1_out1', pirTyp5, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s154 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s155 = addSignal( hN, 'Bit Concat_out1', pirTyp16, slRate1 );
BitSlice_out1_s156 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s157 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s158 = addSignal( hN, 'Constant_out1', pirTyp17, slRate1 );
Log2MinusTable_int32_3___out1_s159 = addSignal( hN, 'Log2MinusTable(int32(3)) _out1', pirTyp2, slRate1 );
Log2Table_int32_3___out1_s160 = addSignal( hN, 'Log2Table(int32(3)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s161 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s162 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp6, slRate1 );
dtc1_out1_s163 = addSignal( hN, 'dtc1_out1', pirTyp6, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s164 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s165 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp6, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s166 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s167 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp6, slRate1 );
w_Log2MinusTable_int32_2___out1_s168 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s169 = addSignal( hN, 'y + tmp1_out1', pirTyp6, slRate1 );
y_Tmp1_out1_s170 = addSignal( hN, 'y - tmp1_out1', pirTyp6, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s173 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s174 = addSignal( hN, 'Bit Concat_out1', pirTyp18, slRate1 );
BitSlice_out1_s175 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s176 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s177 = addSignal( hN, 'Constant_out1', pirTyp19, slRate1 );
Log2MinusTable_int32_4___out1_s178 = addSignal( hN, 'Log2MinusTable(int32(4)) _out1', pirTyp2, slRate1 );
Log2Table_int32_4___out1_s179 = addSignal( hN, 'Log2Table(int32(4)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s180 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s181 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp9, slRate1 );
dtc1_out1_s182 = addSignal( hN, 'dtc1_out1', pirTyp9, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s183 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s184 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp9, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s185 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s186 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp9, slRate1 );
w_Log2MinusTable_int32_2___out1_s187 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s188 = addSignal( hN, 'y + tmp1_out1', pirTyp9, slRate1 );
y_Tmp1_out1_s189 = addSignal( hN, 'y - tmp1_out1', pirTyp9, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s192 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s193 = addSignal( hN, 'Bit Concat_out1', pirTyp20, slRate1 );
BitSlice_out1_s194 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s195 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s196 = addSignal( hN, 'Constant_out1', pirTyp21, slRate1 );
Log2MinusTable_int32_5___out1_s197 = addSignal( hN, 'Log2MinusTable(int32(5)) _out1', pirTyp2, slRate1 );
Log2Table_int32_5___out1_s198 = addSignal( hN, 'Log2Table(int32(5)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s199 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s200 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp7, slRate1 );
dtc1_out1_s201 = addSignal( hN, 'dtc1_out1', pirTyp7, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s202 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s203 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp7, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s204 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s205 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp7, slRate1 );
w_Log2MinusTable_int32_2___out1_s206 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s207 = addSignal( hN, 'y + tmp1_out1', pirTyp7, slRate1 );
y_Tmp1_out1_s208 = addSignal( hN, 'y - tmp1_out1', pirTyp7, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s211 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s212 = addSignal( hN, 'Bit Concat_out1', pirTyp22, slRate1 );
BitSlice_out1_s213 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s214 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s215 = addSignal( hN, 'Constant_out1', pirTyp14, slRate1 );
Log2MinusTable_int32_6___out1_s216 = addSignal( hN, 'Log2MinusTable(int32(6)) _out1', pirTyp2, slRate1 );
Log2Table_int32_6___out1_s217 = addSignal( hN, 'Log2Table(int32(6)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s218 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s219 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp10, slRate1 );
dtc1_out1_s220 = addSignal( hN, 'dtc1_out1', pirTyp10, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s221 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s222 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp10, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s223 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s224 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp10, slRate1 );
w_Log2MinusTable_int32_2___out1_s225 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s226 = addSignal( hN, 'y + tmp1_out1', pirTyp10, slRate1 );
y_Tmp1_out1_s227 = addSignal( hN, 'y - tmp1_out1', pirTyp10, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s230 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s231 = addSignal( hN, 'Bit Concat_out1', pirTyp23, slRate1 );
BitSlice_out1_s232 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s233 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s234 = addSignal( hN, 'Constant_out1', pirTyp24, slRate1 );
Log2MinusTable_int32_7___out1_s235 = addSignal( hN, 'Log2MinusTable(int32(7)) _out1', pirTyp2, slRate1 );
Log2Table_int32_7___out1_s236 = addSignal( hN, 'Log2Table(int32(7)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s237 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s238 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp8, slRate1 );
dtc1_out1_s239 = addSignal( hN, 'dtc1_out1', pirTyp8, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s240 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s241 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp8, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s242 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s243 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp8, slRate1 );
w_Log2MinusTable_int32_2___out1_s244 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s245 = addSignal( hN, 'y + tmp1_out1', pirTyp8, slRate1 );
y_Tmp1_out1_s246 = addSignal( hN, 'y - tmp1_out1', pirTyp8, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s249 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitConcat_out1_s250 = addSignal( hN, 'Bit Concat_out1', pirTyp25, slRate1 );
BitSlice_out1_s251 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s252 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Constant_out1_s253 = addSignal( hN, 'Constant_out1', pirTyp21, slRate1 );
Log2MinusTable_int32_8___out1_s254 = addSignal( hN, 'Log2MinusTable(int32(8)) _out1', pirTyp2, slRate1 );
Log2Table_int32_8___out1_s255 = addSignal( hN, 'Log2Table(int32(8)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s256 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s257 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
dtc1_out1_s258 = addSignal( hN, 'dtc1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s259 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s260 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s261 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s262 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s263 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s264 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s265 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );
x_bitget_w_W_WordLength___1_____out1_s268 = addSignal( hN, '(bitget(w, w.WordLength) == 1)..._out1', pirTyp11, slRate1 );
BitSlice_out1_s269 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
BitSlice1_out1_s270 = addSignal( hN, 'BitSlice1_out1', pirTyp12, slRate1 );
Log2MinusTable_int32_9___out1_s271 = addSignal( hN, 'Log2MinusTable(int32(9)) _out1', pirTyp2, slRate1 );
Log2Table_int32_9___out1_s272 = addSignal( hN, 'Log2Table(int32(9)) _out1', pirTyp2, slRate1 );
bitsll_w_1__out1_s273 = addSignal( hN, 'bitsll(w, 1)_out1', pirTyp2, slRate1 );
bitsrl_y_Int32_2___out1_s274 = addSignal( hN, 'bitsrl(y, int32(2))_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___0_____out1_s275 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___0____1_out1_s276 = addSignal( hN, 'if (bitget(w, w.WordLength) == 0)... 1_out1', pirTyp3, slRate1 );
if_bitget_w_W_WordLength___1_____out1_s277 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... _out1', pirTyp2, slRate1 );
if_bitget_w_W_WordLength___1____1_out1_s278 = addSignal( hN, 'if (bitget(w, w.WordLength) == 1)... 1_out1', pirTyp3, slRate1 );
w_Log2MinusTable_int32_2___out1_s279 = addSignal( hN, 'w + Log2MinusTable(int32(2))_out1', pirTyp2, slRate1 );
y_Tmp1_out1_s280 = addSignal( hN, 'y + tmp1_out1', pirTyp3, slRate1 );
y_Tmp1_out1_s281 = addSignal( hN, 'y - tmp1_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_10___out1_s57,  ...
fi( 0, nt1, fiMath1, 'hex', '2e305512a' ),  ...
'Log2MinusTable(int32(10)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_10___out1_s58,  ...
fi( 0, nt1, fiMath1, 'hex', '51db35918' ),  ...
'Log2Table(int32(10)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_11___out1_s73,  ...
fi( 0, nt1, fiMath1, 'hex', '2e2d71b0e' ),  ...
'Log2MinusTable(int32(11)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_11___out1_s74,  ...
fi( 0, nt1, fiMath1, 'hex', '51d853a11' ),  ...
'Log2Table(int32(11)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_12___out1_s89,  ...
fi( 0, nt1, fiMath1, 'hex', '2e2c002e3' ),  ...
'Log2MinusTable(int32(12)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_12___out1_s90,  ...
fi( 0, nt1, fiMath1, 'hex', '51d6e27ac' ),  ...
'Log2Table(int32(12)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_13___out1_s105,  ...
fi( 0, nt1, fiMath1, 'hex', '2e2b47787' ),  ...
'Log2MinusTable(int32(13)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_13___out1_s106,  ...
fi( 0, nt1, fiMath1, 'hex', '51d629dc1' ),  ...
'Log2Table(int32(13)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_14___out1_s123,  ...
fi( 0, nt2, fiMath1, 'hex', '2e2aeb' ),  ...
'Log2MinusTable(int32(14)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_14___out1_s124,  ...
fi( 0, nt2, fiMath1, 'hex', '51d5ce' ),  ...
'Log2Table(int32(14)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s139,  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_2___out1_s140,  ...
fi( 0, nt1, fiMath1, 'hex', '351ff2e30' ),  ...
'Log2MinusTable(int32(2)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_2___out1_s141,  ...
fi( 0, nt1, fiMath1, 'hex', '56cb0f687' ),  ...
'Log2Table(int32(2)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s158,  ...
fi( 0, nt4, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_3___out1_s159,  ...
fi( 0, nt1, fiMath1, 'hex', '315130158' ),  ...
'Log2MinusTable(int32(3)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_3___out1_s160,  ...
fi( 0, nt1, fiMath1, 'hex', '547fcb8c1' ),  ...
'Log2Table(int32(3)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s177,  ...
fi( 0, nt5, fiMath1, 'hex', '0' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_4___out1_s178,  ...
fi( 0, nt1, fiMath1, 'hex', '2fac092da' ),  ...
'Log2MinusTable(int32(4)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_4___out1_s179,  ...
fi( 0, nt1, fiMath1, 'hex', '5338120a7' ),  ...
'Log2Table(int32(4)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s196,  ...
fi( 0, nt6, fiMath1, 'hex', '00' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_5___out1_s197,  ...
fi( 0, nt1, fiMath1, 'hex', '2ee72993b' ),  ...
'Log2MinusTable(int32(5)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_5___out1_s198,  ...
fi( 0, nt1, fiMath1, 'hex', '528a5914e' ),  ...
'Log2Table(int32(5)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s215,  ...
fi( 0, nt7, fiMath1, 'hex', '00' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_6___out1_s216,  ...
fi( 0, nt1, fiMath1, 'hex', '2e87dd0c4' ),  ...
'Log2MinusTable(int32(6)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_6___out1_s217,  ...
fi( 0, nt1, fiMath1, 'hex', '5230d2f48' ),  ...
'Log2Table(int32(6)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s234,  ...
fi( 0, nt8, fiMath1, 'hex', '00' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_7___out1_s235,  ...
fi( 0, nt1, fiMath1, 'hex', '2e58f7442' ),  ...
'Log2MinusTable(int32(7)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_7___out1_s236,  ...
fi( 0, nt1, fiMath1, 'hex', '52035e922' ),  ...
'Log2Table(int32(7)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s253,  ...
fi( 0, nt6, fiMath1, 'hex', '00' ),  ...
'Constant', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_8___out1_s254,  ...
fi( 0, nt1, fiMath1, 'hex', '2e41b380e' ),  ...
'Log2MinusTable(int32(8)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_8___out1_s255,  ...
fi( 0, nt1, fiMath1, 'hex', '51ec77251' ),  ...
'Log2Table(int32(8)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2MinusTable_int32_9___out1_s271,  ...
fi( 0, nt1, fiMath1, 'hex', '2e361d486' ),  ...
'Log2MinusTable(int32(9)) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_int32_9___out1_s272,  ...
fi( 0, nt1, fiMath1, 'hex', '51e0f801f' ),  ...
'Log2Table(int32(9)) ', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration2_out1_s36,  ...
Delay_out1_s2,  ...
transformnfp.MinLatencyDelay1, 'Delay',  ...
fi( 0, nt9, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration2_out2_s37,  ...
Delay1_out1_s3,  ...
transformnfp.MinLatencyDelay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration3_out1_s38,  ...
Delay10_out1_s4,  ...
transformnfp.Delay1, 'Delay10',  ...
fi( 0, nt10, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration3_out2_s39,  ...
Delay11_out1_s5,  ...
transformnfp.Delay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration5_out1_s42,  ...
Delay12_out1_s6,  ...
transformnfp.Delay1, 'Delay12',  ...
fi( 0, nt11, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration5_out2_s43,  ...
Delay13_out1_s7,  ...
transformnfp.Delay1, 'Delay13',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration7_out1_s46,  ...
Delay14_out1_s8,  ...
transformnfp.Delay1, 'Delay14',  ...
fi( 0, nt12, fiMath1, 'hex', '00000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration7_out2_s47,  ...
Delay15_out1_s9,  ...
transformnfp.Delay1, 'Delay15',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration9_out1_s50,  ...
Delay16_out1_s10,  ...
transformnfp.Delay1, 'Delay16',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration9_out2_s51,  ...
Delay17_out1_s11,  ...
transformnfp.Delay1, 'Delay17',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration11_out1_s28,  ...
Delay18_out1_s12,  ...
transformnfp.Delay1, 'Delay18',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration11_out2_s29,  ...
Delay19_out1_s13,  ...
transformnfp.Delay1, 'Delay19',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration4_out1_s40,  ...
Delay2_out1_s14,  ...
transformnfp.MinLatencyDelay1, 'Delay2',  ...
fi( 0, nt14, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration13_out1_s32,  ...
Delay20_out1_s15,  ...
transformnfp.Delay1, 'Delay20',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration13_out2_s33,  ...
Delay21_out1_s16,  ...
transformnfp.Delay1, 'Delay21',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration12_out1_s30,  ...
Delay22_out1_s17,  ...
transformnfp.MinLatencyDelay1, 'Delay22',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration12_out2_s31,  ...
Delay23_out1_s18,  ...
transformnfp.MinLatencyDelay1, 'Delay23',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration4_out2_s41,  ...
Delay3_out1_s19,  ...
transformnfp.MinLatencyDelay1, 'Delay3',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration6_out1_s44,  ...
Delay4_out1_s20,  ...
transformnfp.MinLatencyDelay1, 'Delay4',  ...
fi( 0, nt15, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration6_out2_s45,  ...
Delay5_out1_s21,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration8_out1_s48,  ...
Delay6_out1_s22,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration8_out2_s49,  ...
Delay7_out1_s23,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration10_out1_s26,  ...
Delay8_out1_s24,  ...
transformnfp.MinLatencyDelay1, 'Delay8',  ...
fi( 0, nt13, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_Iteration10_out2_s27,  ...
Delay9_out1_s25,  ...
transformnfp.MinLatencyDelay1, 'Delay9',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s64,  ...
exp_Iteration10_out1_s26,  ...
'exp_Iteration10_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s63,  ...
exp_Iteration10_out2_s27,  ...
'exp_Iteration10_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s80,  ...
exp_Iteration11_out1_s28,  ...
'exp_Iteration11_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s79,  ...
exp_Iteration11_out2_s29,  ...
'exp_Iteration11_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s96,  ...
exp_Iteration12_out1_s30,  ...
'exp_Iteration12_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s95,  ...
exp_Iteration12_out2_s31,  ...
'exp_Iteration12_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s112,  ...
exp_Iteration13_out1_s32,  ...
'exp_Iteration13_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s111,  ...
exp_Iteration13_out2_s33,  ...
'exp_Iteration13_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s129,  ...
exp_Iteration14_out1_s34,  ...
'exp_Iteration14_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s128,  ...
exp_Iteration14_out2_s35,  ...
'exp_Iteration14_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s148,  ...
exp_Iteration2_out1_s36,  ...
'exp_Iteration2_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s147,  ...
exp_Iteration2_out2_s37,  ...
'exp_Iteration2_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s167,  ...
exp_Iteration3_out1_s38,  ...
'exp_Iteration3_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s166,  ...
exp_Iteration3_out2_s39,  ...
'exp_Iteration3_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s186,  ...
exp_Iteration4_out1_s40,  ...
'exp_Iteration4_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s185,  ...
exp_Iteration4_out2_s41,  ...
'exp_Iteration4_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s205,  ...
exp_Iteration5_out1_s42,  ...
'exp_Iteration5_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s204,  ...
exp_Iteration5_out2_s43,  ...
'exp_Iteration5_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s224,  ...
exp_Iteration6_out1_s44,  ...
'exp_Iteration6_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s223,  ...
exp_Iteration6_out2_s45,  ...
'exp_Iteration6_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s243,  ...
exp_Iteration7_out1_s46,  ...
'exp_Iteration7_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s242,  ...
exp_Iteration7_out2_s47,  ...
'exp_Iteration7_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s262,  ...
exp_Iteration8_out1_s48,  ...
'exp_Iteration8_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s261,  ...
exp_Iteration8_out2_s49,  ...
'exp_Iteration8_out2' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1____1_out1_s278,  ...
exp_Iteration9_out1_s50,  ...
'exp_Iteration9_out1' );

pirelab.getWireComp( hN,  ...
if_bitget_w_W_WordLength___1_____out1_s277,  ...
exp_Iteration9_out2_s51,  ...
'exp_Iteration9_out2' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s56, BitSlice_out1_s55 ],  ...
x_bitget_w_W_WordLength___1_____out1_s54,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s59,  ...
BitSlice_out1_s55,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s59,  ...
BitSlice1_out1_s56,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay17_out1_s11,  ...
bitsll_w_1__out1_s59,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay16_out1_s10,  ...
bitsrl_y_Int32_2___out1_s60,  ...
'srl', 10, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_10___out1_s57, Log2Table_int32_10___out1_s58 ],  ...
if_bitget_w_W_WordLength___0_____out1_s61,  ...
BitSlice_out1_s55, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s66, y_Tmp1_out1_s67 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s62,  ...
BitSlice1_out1_s56, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s65, bitsll_w_1__out1_s59 ],  ...
if_bitget_w_W_WordLength___1_____out1_s63,  ...
x_bitget_w_W_WordLength___1_____out1_s54, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s62, Delay16_out1_s10 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s64,  ...
x_bitget_w_W_WordLength___1_____out1_s54, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s59, if_bitget_w_W_WordLength___0_____out1_s61 ],  ...
w_Log2MinusTable_int32_2___out1_s65,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay16_out1_s10, bitsrl_y_Int32_2___out1_s60 ],  ...
y_Tmp1_out1_s66,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay16_out1_s10, bitsrl_y_Int32_2___out1_s60 ],  ...
y_Tmp1_out1_s67,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s72, BitSlice_out1_s71 ],  ...
x_bitget_w_W_WordLength___1_____out1_s70,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s75,  ...
BitSlice_out1_s71,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s75,  ...
BitSlice1_out1_s72,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay9_out1_s25,  ...
bitsll_w_1__out1_s75,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay8_out1_s24,  ...
bitsrl_y_Int32_2___out1_s76,  ...
'srl', 11, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_11___out1_s73, Log2Table_int32_11___out1_s74 ],  ...
if_bitget_w_W_WordLength___0_____out1_s77,  ...
BitSlice_out1_s71, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s82, y_Tmp1_out1_s83 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s78,  ...
BitSlice1_out1_s72, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s81, bitsll_w_1__out1_s75 ],  ...
if_bitget_w_W_WordLength___1_____out1_s79,  ...
x_bitget_w_W_WordLength___1_____out1_s70, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s78, Delay8_out1_s24 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s80,  ...
x_bitget_w_W_WordLength___1_____out1_s70, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s75, if_bitget_w_W_WordLength___0_____out1_s77 ],  ...
w_Log2MinusTable_int32_2___out1_s81,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay8_out1_s24, bitsrl_y_Int32_2___out1_s76 ],  ...
y_Tmp1_out1_s82,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay8_out1_s24, bitsrl_y_Int32_2___out1_s76 ],  ...
y_Tmp1_out1_s83,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s88, BitSlice_out1_s87 ],  ...
x_bitget_w_W_WordLength___1_____out1_s86,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s91,  ...
BitSlice_out1_s87,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s91,  ...
BitSlice1_out1_s88,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay19_out1_s13,  ...
bitsll_w_1__out1_s91,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay18_out1_s12,  ...
bitsrl_y_Int32_2___out1_s92,  ...
'srl', 12, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_12___out1_s89, Log2Table_int32_12___out1_s90 ],  ...
if_bitget_w_W_WordLength___0_____out1_s93,  ...
BitSlice_out1_s87, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s98, y_Tmp1_out1_s99 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s94,  ...
BitSlice1_out1_s88, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s97, bitsll_w_1__out1_s91 ],  ...
if_bitget_w_W_WordLength___1_____out1_s95,  ...
x_bitget_w_W_WordLength___1_____out1_s86, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s94, Delay18_out1_s12 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s96,  ...
x_bitget_w_W_WordLength___1_____out1_s86, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s91, if_bitget_w_W_WordLength___0_____out1_s93 ],  ...
w_Log2MinusTable_int32_2___out1_s97,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay18_out1_s12, bitsrl_y_Int32_2___out1_s92 ],  ...
y_Tmp1_out1_s98,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay18_out1_s12, bitsrl_y_Int32_2___out1_s92 ],  ...
y_Tmp1_out1_s99,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s104, BitSlice_out1_s103 ],  ...
x_bitget_w_W_WordLength___1_____out1_s102,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s107,  ...
BitSlice_out1_s103,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s107,  ...
BitSlice1_out1_s104,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay23_out1_s18,  ...
bitsll_w_1__out1_s107,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay22_out1_s17,  ...
bitsrl_y_Int32_2___out1_s108,  ...
'srl', 13, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_13___out1_s105, Log2Table_int32_13___out1_s106 ],  ...
if_bitget_w_W_WordLength___0_____out1_s109,  ...
BitSlice_out1_s103, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s114, y_Tmp1_out1_s115 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s110,  ...
BitSlice1_out1_s104, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s113, bitsll_w_1__out1_s107 ],  ...
if_bitget_w_W_WordLength___1_____out1_s111,  ...
x_bitget_w_W_WordLength___1_____out1_s102, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s110, Delay22_out1_s17 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s112,  ...
x_bitget_w_W_WordLength___1_____out1_s102, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s107, if_bitget_w_W_WordLength___0_____out1_s109 ],  ...
w_Log2MinusTable_int32_2___out1_s113,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay22_out1_s17, bitsrl_y_Int32_2___out1_s108 ],  ...
y_Tmp1_out1_s114,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay22_out1_s17, bitsrl_y_Int32_2___out1_s108 ],  ...
y_Tmp1_out1_s115,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s121, BitSlice_out1_s120 ],  ...
x_bitget_w_W_WordLength___1_____out1_s118,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
Delay21_out1_s16,  ...
BitSlice_out1_s119,  ...
33, 11, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Delay21_out1_s16,  ...
BitSlice_out1_s120,  ...
33, 33, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
Delay21_out1_s16,  ...
BitSlice1_out1_s121,  ...
32, 32, 'BitSlice1' );


pirelab.getDTCComp( hN,  ...
BitSlice_out1_s119,  ...
DataTypeConversion_out1_s122,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion' );


pirelab.getBitShiftComp( hN,  ...
Delay20_out1_s15,  ...
bitsrl_y_Int32_2___out1_s125,  ...
'srl', 14, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_14___out1_s123, Log2Table_int32_14___out1_s124 ],  ...
if_bitget_w_W_WordLength___0_____out1_s126,  ...
BitSlice_out1_s120, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s131, y_Tmp1_out1_s132 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s127,  ...
BitSlice1_out1_s121, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s130, DataTypeConversion_out1_s122 ],  ...
if_bitget_w_W_WordLength___1_____out1_s128,  ...
x_bitget_w_W_WordLength___1_____out1_s118, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s127, Delay20_out1_s15 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s129,  ...
x_bitget_w_W_WordLength___1_____out1_s118, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion_out1_s122, if_bitget_w_W_WordLength___0_____out1_s126 ],  ...
w_Log2MinusTable_int32_2___out1_s130,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp4, '++' );


pirelab.getAddComp( hN,  ...
[ Delay20_out1_s15, bitsrl_y_Int32_2___out1_s125 ],  ...
y_Tmp1_out1_s131,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay20_out1_s15, bitsrl_y_Int32_2___out1_s125 ],  ...
y_Tmp1_out1_s132,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s138, BitSlice_out1_s137 ],  ...
x_bitget_w_W_WordLength___1_____out1_s135,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ y_s0, Constant_out1_s139 ],  ...
BitConcat_out1_s136,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s142,  ...
BitSlice_out1_s137,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s142,  ...
BitSlice1_out1_s138,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
w_s1,  ...
bitsll_w_1__out1_s142,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s144,  ...
bitsrl_y_Int32_2___out1_s143,  ...
'srl', 2, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s136,  ...
dtc1_out1_s144,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_2___out1_s140, Log2Table_int32_2___out1_s141 ],  ...
if_bitget_w_W_WordLength___0_____out1_s145,  ...
BitSlice_out1_s137, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s150, y_Tmp1_out1_s151 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s146,  ...
BitSlice1_out1_s138, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2__1_out1_s149, bitsll_w_1__out1_s142 ],  ...
if_bitget_w_W_WordLength___1_____out1_s147,  ...
x_bitget_w_W_WordLength___1_____out1_s135, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s146, dtc1_out1_s144 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s148,  ...
x_bitget_w_W_WordLength___1_____out1_s135, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s142, if_bitget_w_W_WordLength___0_____out1_s145 ],  ...
w_Log2MinusTable_int32_2__1_out1_s149,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s144, bitsrl_y_Int32_2___out1_s143 ],  ...
y_Tmp1_out1_s150,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp5, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s144, bitsrl_y_Int32_2___out1_s143 ],  ...
y_Tmp1_out1_s151,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp5, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s157, BitSlice_out1_s156 ],  ...
x_bitget_w_W_WordLength___1_____out1_s154,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay_out1_s2, Constant_out1_s158 ],  ...
BitConcat_out1_s155,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s161,  ...
BitSlice_out1_s156,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s161,  ...
BitSlice1_out1_s157,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s3,  ...
bitsll_w_1__out1_s161,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s163,  ...
bitsrl_y_Int32_2___out1_s162,  ...
'srl', 3, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s155,  ...
dtc1_out1_s163,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_3___out1_s159, Log2Table_int32_3___out1_s160 ],  ...
if_bitget_w_W_WordLength___0_____out1_s164,  ...
BitSlice_out1_s156, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s169, y_Tmp1_out1_s170 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s165,  ...
BitSlice1_out1_s157, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s168, bitsll_w_1__out1_s161 ],  ...
if_bitget_w_W_WordLength___1_____out1_s166,  ...
x_bitget_w_W_WordLength___1_____out1_s154, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s165, dtc1_out1_s163 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s167,  ...
x_bitget_w_W_WordLength___1_____out1_s154, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s161, if_bitget_w_W_WordLength___0_____out1_s164 ],  ...
w_Log2MinusTable_int32_2___out1_s168,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s163, bitsrl_y_Int32_2___out1_s162 ],  ...
y_Tmp1_out1_s169,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp6, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s163, bitsrl_y_Int32_2___out1_s162 ],  ...
y_Tmp1_out1_s170,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp6, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s176, BitSlice_out1_s175 ],  ...
x_bitget_w_W_WordLength___1_____out1_s173,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay10_out1_s4, Constant_out1_s177 ],  ...
BitConcat_out1_s174,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s180,  ...
BitSlice_out1_s175,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s180,  ...
BitSlice1_out1_s176,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s5,  ...
bitsll_w_1__out1_s180,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s182,  ...
bitsrl_y_Int32_2___out1_s181,  ...
'srl', 4, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s174,  ...
dtc1_out1_s182,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_4___out1_s178, Log2Table_int32_4___out1_s179 ],  ...
if_bitget_w_W_WordLength___0_____out1_s183,  ...
BitSlice_out1_s175, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s188, y_Tmp1_out1_s189 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s184,  ...
BitSlice1_out1_s176, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s187, bitsll_w_1__out1_s180 ],  ...
if_bitget_w_W_WordLength___1_____out1_s185,  ...
x_bitget_w_W_WordLength___1_____out1_s173, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s184, dtc1_out1_s182 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s186,  ...
x_bitget_w_W_WordLength___1_____out1_s173, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s180, if_bitget_w_W_WordLength___0_____out1_s183 ],  ...
w_Log2MinusTable_int32_2___out1_s187,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s182, bitsrl_y_Int32_2___out1_s181 ],  ...
y_Tmp1_out1_s188,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp9, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s182, bitsrl_y_Int32_2___out1_s181 ],  ...
y_Tmp1_out1_s189,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp9, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s195, BitSlice_out1_s194 ],  ...
x_bitget_w_W_WordLength___1_____out1_s192,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay2_out1_s14, Constant_out1_s196 ],  ...
BitConcat_out1_s193,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s199,  ...
BitSlice_out1_s194,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s199,  ...
BitSlice1_out1_s195,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay3_out1_s19,  ...
bitsll_w_1__out1_s199,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s201,  ...
bitsrl_y_Int32_2___out1_s200,  ...
'srl', 5, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s193,  ...
dtc1_out1_s201,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_5___out1_s197, Log2Table_int32_5___out1_s198 ],  ...
if_bitget_w_W_WordLength___0_____out1_s202,  ...
BitSlice_out1_s194, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s207, y_Tmp1_out1_s208 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s203,  ...
BitSlice1_out1_s195, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s206, bitsll_w_1__out1_s199 ],  ...
if_bitget_w_W_WordLength___1_____out1_s204,  ...
x_bitget_w_W_WordLength___1_____out1_s192, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s203, dtc1_out1_s201 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s205,  ...
x_bitget_w_W_WordLength___1_____out1_s192, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s199, if_bitget_w_W_WordLength___0_____out1_s202 ],  ...
w_Log2MinusTable_int32_2___out1_s206,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s201, bitsrl_y_Int32_2___out1_s200 ],  ...
y_Tmp1_out1_s207,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp7, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s201, bitsrl_y_Int32_2___out1_s200 ],  ...
y_Tmp1_out1_s208,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp7, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s214, BitSlice_out1_s213 ],  ...
x_bitget_w_W_WordLength___1_____out1_s211,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay12_out1_s6, Constant_out1_s215 ],  ...
BitConcat_out1_s212,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s218,  ...
BitSlice_out1_s213,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s218,  ...
BitSlice1_out1_s214,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay13_out1_s7,  ...
bitsll_w_1__out1_s218,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s220,  ...
bitsrl_y_Int32_2___out1_s219,  ...
'srl', 6, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s212,  ...
dtc1_out1_s220,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_6___out1_s216, Log2Table_int32_6___out1_s217 ],  ...
if_bitget_w_W_WordLength___0_____out1_s221,  ...
BitSlice_out1_s213, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s226, y_Tmp1_out1_s227 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s222,  ...
BitSlice1_out1_s214, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s225, bitsll_w_1__out1_s218 ],  ...
if_bitget_w_W_WordLength___1_____out1_s223,  ...
x_bitget_w_W_WordLength___1_____out1_s211, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s222, dtc1_out1_s220 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s224,  ...
x_bitget_w_W_WordLength___1_____out1_s211, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s218, if_bitget_w_W_WordLength___0_____out1_s221 ],  ...
w_Log2MinusTable_int32_2___out1_s225,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s220, bitsrl_y_Int32_2___out1_s219 ],  ...
y_Tmp1_out1_s226,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp10, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s220, bitsrl_y_Int32_2___out1_s219 ],  ...
y_Tmp1_out1_s227,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp10, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s233, BitSlice_out1_s232 ],  ...
x_bitget_w_W_WordLength___1_____out1_s230,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay4_out1_s20, Constant_out1_s234 ],  ...
BitConcat_out1_s231,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s237,  ...
BitSlice_out1_s232,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s237,  ...
BitSlice1_out1_s233,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay5_out1_s21,  ...
bitsll_w_1__out1_s237,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s239,  ...
bitsrl_y_Int32_2___out1_s238,  ...
'srl', 7, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s231,  ...
dtc1_out1_s239,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_7___out1_s235, Log2Table_int32_7___out1_s236 ],  ...
if_bitget_w_W_WordLength___0_____out1_s240,  ...
BitSlice_out1_s232, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s245, y_Tmp1_out1_s246 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s241,  ...
BitSlice1_out1_s233, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s244, bitsll_w_1__out1_s237 ],  ...
if_bitget_w_W_WordLength___1_____out1_s242,  ...
x_bitget_w_W_WordLength___1_____out1_s230, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s241, dtc1_out1_s239 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s243,  ...
x_bitget_w_W_WordLength___1_____out1_s230, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s237, if_bitget_w_W_WordLength___0_____out1_s240 ],  ...
w_Log2MinusTable_int32_2___out1_s244,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s239, bitsrl_y_Int32_2___out1_s238 ],  ...
y_Tmp1_out1_s245,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp8, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s239, bitsrl_y_Int32_2___out1_s238 ],  ...
y_Tmp1_out1_s246,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp8, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s252, BitSlice_out1_s251 ],  ...
x_bitget_w_W_WordLength___1_____out1_s249,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitConcatComp( hN,  ...
[ Delay14_out1_s8, Constant_out1_s253 ],  ...
BitConcat_out1_s250,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s256,  ...
BitSlice_out1_s251,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s256,  ...
BitSlice1_out1_s252,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay15_out1_s9,  ...
bitsll_w_1__out1_s256,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
dtc1_out1_s258,  ...
bitsrl_y_Int32_2___out1_s257,  ...
'srl', 8, 0, 'bitsrl(y, int32(2))' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s250,  ...
dtc1_out1_s258,  ...
'Floor', 'Wrap', 'SI', 'dtc1' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_8___out1_s254, Log2Table_int32_8___out1_s255 ],  ...
if_bitget_w_W_WordLength___0_____out1_s259,  ...
BitSlice_out1_s251, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s264, y_Tmp1_out1_s265 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s260,  ...
BitSlice1_out1_s252, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s263, bitsll_w_1__out1_s256 ],  ...
if_bitget_w_W_WordLength___1_____out1_s261,  ...
x_bitget_w_W_WordLength___1_____out1_s249, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s260, dtc1_out1_s258 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s262,  ...
x_bitget_w_W_WordLength___1_____out1_s249, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s256, if_bitget_w_W_WordLength___0_____out1_s259 ],  ...
w_Log2MinusTable_int32_2___out1_s263,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s258, bitsrl_y_Int32_2___out1_s257 ],  ...
y_Tmp1_out1_s264,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ dtc1_out1_s258, bitsrl_y_Int32_2___out1_s257 ],  ...
y_Tmp1_out1_s265,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s270, BitSlice_out1_s269 ],  ...
x_bitget_w_W_WordLength___1_____out1_s268,  ...
'xor', '(bitget(w, w.WordLength) == 1)...' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s273,  ...
BitSlice_out1_s269,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
bitsll_w_1__out1_s273,  ...
BitSlice1_out1_s270,  ...
33, 33, 'BitSlice1' );


pirelab.getBitShiftComp( hN,  ...
Delay7_out1_s23,  ...
bitsll_w_1__out1_s273,  ...
'sll', 1, 0, 'bitsll(w, 1)' );


pirelab.getBitShiftComp( hN,  ...
Delay6_out1_s22,  ...
bitsrl_y_Int32_2___out1_s274,  ...
'srl', 9, 0, 'bitsrl(y, int32(2))' );


pirelab.getSwitchComp( hN,  ...
[ Log2MinusTable_int32_9___out1_s271, Log2Table_int32_9___out1_s272 ],  ...
if_bitget_w_W_WordLength___0_____out1_s275,  ...
BitSlice_out1_s269, 'if (bitget(w, w.WordLength) == 0)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ y_Tmp1_out1_s280, y_Tmp1_out1_s281 ],  ...
if_bitget_w_W_WordLength___0____1_out1_s276,  ...
BitSlice1_out1_s270, 'if (bitget(w, w.WordLength) == 0)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2MinusTable_int32_2___out1_s279, bitsll_w_1__out1_s273 ],  ...
if_bitget_w_W_WordLength___1_____out1_s277,  ...
x_bitget_w_W_WordLength___1_____out1_s268, 'if (bitget(w, w.WordLength) == 1)... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ if_bitget_w_W_WordLength___0____1_out1_s276, Delay6_out1_s22 ],  ...
if_bitget_w_W_WordLength___1____1_out1_s278,  ...
x_bitget_w_W_WordLength___1_____out1_s268, 'if (bitget(w, w.WordLength) == 1)... 1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ bitsll_w_1__out1_s273, if_bitget_w_W_WordLength___0_____out1_s275 ],  ...
w_Log2MinusTable_int32_2___out1_s279,  ...
'Floor', 'Wrap', 'w + Log2MinusTable(int32(2))', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay6_out1_s22, bitsrl_y_Int32_2___out1_s274 ],  ...
y_Tmp1_out1_s280,  ...
'Floor', 'Wrap', 'y + tmp1', pirTyp3, '++' );


pirelab.getAddComp( hN,  ...
[ Delay6_out1_s22, bitsrl_y_Int32_2___out1_s274 ],  ...
y_Tmp1_out1_s281,  ...
'Floor', 'Wrap', 'y - tmp1', pirTyp3, '+-' );


end 

function hN = createNetwork_n36( ~, hN, slRate1 )
pirTyp3 = pir_sfixpt_t( 35,  - 33 );
pirTyp2 = pir_sfixpt_t( 4,  - 1 );
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 35,  - 33 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 1, 35, 33 );
nt1 = numerictype( 1, 4, 1 );




hN.addInputPort( 'mant_frac' );
mant_frac_s0 = addSignal( hN, 'mant_frac', pirTyp1, slRate1 );
mant_frac_s0.addDriver( hN, 0 );

hN.addOutputPort( 'y' );
ifBitget_w_W_WordLength_1_1_out1_s8 = addSignal( hN, 'if bitget(w, w.WordLength - 1)1_out1', pirTyp2, slRate1 );
ifBitget_w_W_WordLength_1_1_out1_s8.addReceiver( hN, 0 );

hN.addOutputPort( 'w' );
ifBitget_w_W_WordLength_1__out1_s7 = addSignal( hN, 'if bitget(w, w.WordLength - 1)_out1', pirTyp3, slRate1 );
ifBitget_w_W_WordLength_1__out1_s7.addReceiver( hN, 1 );

BitShift_out1_s1 = addSignal( hN, 'Bit Shift_out1', pirTyp1, slRate1 );
BitSlice_out1_s2 = addSignal( hN, 'BitSlice_out1', pirTyp4, slRate1 );
C_out1_s3 = addSignal( hN, 'C_out1', pirTyp2, slRate1 );
C1_out1_s4 = addSignal( hN, 'C1_out1', pirTyp2, slRate1 );
DataTypeConversion_out1_s5 = addSignal( hN, 'Data Type Conversion_out1', pirTyp3, slRate1 );
Log2Table_1__out1_s6 = addSignal( hN, 'Log2Table(1) _out1', pirTyp3, slRate1 );
w_Log2Table_1__out1_s9 = addSignal( hN, 'w - Log2Table(1)_out1', pirTyp3, slRate1 );


pirelab.getConstComp( hN,  ...
C_out1_s3,  ...
fi( 0, nt1, fiMath1, 'hex', '3' ),  ...
'C', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
C1_out1_s4,  ...
fi( 0, nt1, fiMath1, 'hex', '2' ),  ...
'C1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Log2Table_1__out1_s6,  ...
fi( 0, nt2, fiMath1, 'hex', '5a8ff9718' ),  ...
'Log2Table(1) ', 'on', 0, '', '', '' );


pirelab.getBitShiftComp( hN,  ...
mant_frac_s0,  ...
BitShift_out1_s1,  ...
'sll', 1, 0, 'Bit Shift' );


pirelab.getBitSliceComp( hN,  ...
DataTypeConversion_out1_s5,  ...
BitSlice_out1_s2,  ...
33, 33, 'BitSlice' );


pirelab.getDTCComp( hN,  ...
BitShift_out1_s1,  ...
DataTypeConversion_out1_s5,  ...
'Nearest', 'Wrap', 'SI', 'Data Type Conversion' );


pirelab.getSwitchComp( hN,  ...
[ w_Log2Table_1__out1_s9, DataTypeConversion_out1_s5 ],  ...
ifBitget_w_W_WordLength_1__out1_s7,  ...
BitSlice_out1_s2, 'if bitget(w, w.WordLength - 1)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s3, C1_out1_s4 ],  ...
ifBitget_w_W_WordLength_1_1_out1_s8,  ...
BitSlice_out1_s2, 'if bitget(w, w.WordLength - 1)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion_out1_s5, Log2Table_1__out1_s6 ],  ...
w_Log2Table_1__out1_s9,  ...
'Floor', 'Wrap', 'w - Log2Table(1)', pirTyp3, '++' );


end 

function hN = createNetwork_n35( p, hN, slRate1 )
pirTyp3 = pir_sfixpt_t( 23,  - 21 );
pirTyp5 = pir_sfixpt_t( 35,  - 33 );
pirTyp2 = pir_sfixpt_t( 36,  - 33 );
pirTyp4 = pir_sfixpt_t( 4,  - 1 );
pirTyp1 = pir_ufixpt_t( 35,  - 33 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 1, 35, 33 );
nt1 = numerictype( 1, 4, 1 );




hN.addInputPort( 'w' );
w_s0 = addSignal( hN, 'w', pirTyp1, slRate1 );
w_s0.addDriver( hN, 0 );

hN.addOutputPort( 'y' );
exp_Main_Iterations_out1_s5 = addSignal( hN, 'exp_Main_Iterations_out1', pirTyp2, slRate1 );
exp_Main_Iterations_out1_s5.addReceiver( hN, 0 );

hN.addOutputPort( 'w1' );
exp_Main_Iterations_out2_s6 = addSignal( hN, 'exp_Main_Iterations_out2', pirTyp3, slRate1 );
exp_Main_Iterations_out2_s6.addReceiver( hN, 1 );

Delay11_out1_s1 = addSignal( hN, 'Delay11_out1', pirTyp4, slRate1 );
Delay12_out1_s2 = addSignal( hN, 'Delay12_out1', pirTyp5, slRate1 );
exp_First_Iteration_out1_s3 = addSignal( hN, 'exp_First_Iteration_out1', pirTyp4, slRate1 );
exp_First_Iteration_out2_s4 = addSignal( hN, 'exp_First_Iteration_out2', pirTyp5, slRate1 );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_First_Iteration' );
exp_First_Iteration = hN.addComponent( 'ntwk_instance_comp', hRefN );
exp_First_Iteration.Name = 'exp_First_Iteration';
pirelab.connectNtwkInstComp( exp_First_Iteration,  ...
w_s0,  ...
[ exp_First_Iteration_out1_s3, exp_First_Iteration_out2_s4 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations/exp_Main_Iterations' );
exp_Main_Iterations = hN.addComponent( 'ntwk_instance_comp', hRefN );
exp_Main_Iterations.Name = 'exp_Main_Iterations';
pirelab.connectNtwkInstComp( exp_Main_Iterations,  ...
[ Delay11_out1_s1, Delay12_out1_s2 ],  ...
[ exp_Main_Iterations_out1_s5, exp_Main_Iterations_out2_s6 ] );


pirelab.getIntDelayComp( hN,  ...
exp_First_Iteration_out1_s3,  ...
Delay11_out1_s1,  ...
transformnfp.Delay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_First_Iteration_out2_s4,  ...
Delay12_out1_s2,  ...
transformnfp.Delay1, 'Delay12',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


end 

function hN = createNetwork_n32( ~, hN, slRate1 )
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp6 = pir_sfixpt_t( 8, 0 );
pirTyp2 = pir_sfixpt_t( 36,  - 33 );
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 7, 0 );
pirTyp7 = pir_ufixpt_t( 8, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 8, 0 );
nt3 = numerictype( 1, 36, 33 );
nt1 = numerictype( 1, 8, 0 );




hN.addInputPort( 'exp_out' );
exp_out_s0 = addSignal( hN, 'exp_out', pirTyp1, slRate1 );
exp_out_s0.addDriver( hN, 0 );

hN.addInputPort( 'y' );
y_s1 = addSignal( hN, 'y', pirTyp2, slRate1 );
y_s1.addDriver( hN, 1 );

hN.addInputPort( 'useCubicApprx' );
useCubicApprx_s2 = addSignal( hN, 'useCubicApprx', pirTyp3, slRate1 );
useCubicApprx_s2.addDriver( hN, 2 );

hN.addInputPort( 'ONE' );
ONE_s3 = addSignal( hN, 'ONE', pirTyp2, slRate1 );
ONE_s3.addDriver( hN, 3 );

hN.addInputPort( 'shift_length' );
shift_length_s4 = addSignal( hN, 'shift_length', pirTyp1, slRate1 );
shift_length_s4.addDriver( hN, 4 );

hN.addOutputPort( 'exp_out1' );
Switch1_out1_s28 = addSignal( hN, 'Switch1_out1', pirTyp1, slRate1 );
Switch1_out1_s28.addReceiver( hN, 0 );

hN.addOutputPort( 'OneMinusE' );
Switch_out1_s27 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch_out1_s27.addReceiver( hN, 1 );

hN.addOutputPort( 'OnePlusE' );
Delay6_out1_s22 = addSignal( hN, 'Delay6_out1', pirTyp2, slRate1 );
Delay6_out1_s22.addReceiver( hN, 2 );

hN.addOutputPort( 'useCubicApprx1' );
Delay7_out1_s23 = addSignal( hN, 'Delay7_out1', pirTyp3, slRate1 );
Delay7_out1_s23.addReceiver( hN, 3 );

Add_out1_s5 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s6 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s7 = addSignal( hN, 'Add2_out1', pirTyp1, slRate1 );
Add3_out1_s8 = addSignal( hN, 'Add3_out1', pirTyp1, slRate1 );
BitShift_out1_s9 = addSignal( hN, 'Bit Shift_out1', pirTyp2, slRate1 );
BitSlice_out1_s10 = addSignal( hN, 'Bit Slice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s11 = addSignal( hN, 'Bit Slice1_out1', pirTyp5, slRate1 );
Constant1_out1_s12 = addSignal( hN, 'Constant1_out1', pirTyp1, slRate1 );
Constant2_out1_s13 = addSignal( hN, 'Constant2_out1', pirTyp2, slRate1 );
Constant3_out1_s14 = addSignal( hN, 'Constant3_out1', pirTyp2, slRate1 );
DTC_out1_s15 = addSignal( hN, 'DTC_out1', pirTyp1, slRate1 );
Delay_out1_s16 = addSignal( hN, 'Delay_out1', pirTyp2, slRate1 );
Delay1_out1_s17 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay2_out1_s18 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Delay3_out1_s19 = addSignal( hN, 'Delay3_out1', pirTyp3, slRate1 );
Delay4_out1_s20 = addSignal( hN, 'Delay4_out1', pirTyp1, slRate1 );
Delay5_out1_s21 = addSignal( hN, 'Delay5_out1', pirTyp2, slRate1 );
FindFirst1_out1_s24 = addSignal( hN, 'FindFirst1_out1', pirTyp6, slRate1 );
ShiftArithmetic_out1_s25 = addSignal( hN, sprintf( 'Shift\nArithmetic_out1' ), pirTyp2, slRate1 );
ShiftArithmetic1_out1_s26 = addSignal( hN, sprintf( 'Shift\nArithmetic1_out1' ), pirTyp2, slRate1 );
Switch4_out1_s29 = addSignal( hN, 'Switch4_out1', pirTyp2, slRate1 );
BitSlice4_out1_s31 = addSignal( hN, 'Bit Slice4_out1', pirTyp5, slRate1 );
Bottom7Bits_out1_s32 = addSignal( hN, 'Bottom 7 bits_out1', pirTyp6, slRate1 );
BitSlice_out1_s33 = addSignal( hN, 'Bit Slice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s34 = addSignal( hN, 'Bit Slice1_out1', pirTyp4, slRate1 );
BitSlice2_out1_s35 = addSignal( hN, 'Bit Slice2_out1', pirTyp4, slRate1 );
BitSlice3_out1_s36 = addSignal( hN, 'Bit Slice3_out1', pirTyp4, slRate1 );
BitSlice5_out1_s37 = addSignal( hN, 'Bit Slice5_out1', pirTyp4, slRate1 );
BitSlice6_out1_s38 = addSignal( hN, 'Bit Slice6_out1', pirTyp4, slRate1 );
BitSlice7_out1_s39 = addSignal( hN, 'Bit Slice7_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s40 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp3, slRate1 );
LogicalOperator1_out1_s41 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp3, slRate1 );
LogicalOperator3_out1_s42 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp3, slRate1 );
LogicalOperator4_out1_s43 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp3, slRate1 );
Start_out1_s44 = addSignal( hN, 'Start_out1', pirTyp6, slRate1 );
Start_1_out1_s45 = addSignal( hN, sprintf( 'Start + 1\n_out1' ), pirTyp6, slRate1 );
Start_2_out1_s46 = addSignal( hN, 'Start + 2_out1', pirTyp6, slRate1 );
Start_3_out1_s47 = addSignal( hN, 'Start + 3_out1', pirTyp6, slRate1 );
Start_4_out1_s48 = addSignal( hN, 'Start + 4_out1', pirTyp6, slRate1 );
Start_5_out1_s49 = addSignal( hN, 'Start + 5_out1', pirTyp6, slRate1 );
Start_6_out1_s50 = addSignal( hN, 'Start + 6_out1', pirTyp6, slRate1 );
Start_7_out1_s51 = addSignal( hN, 'Start + 7_out1', pirTyp6, slRate1 );
Switch_out1_s52 = addSignal( hN, 'Switch_out1', pirTyp6, slRate1 );
Switch1_out1_s53 = addSignal( hN, 'Switch1_out1', pirTyp6, slRate1 );
Switch2_out1_s54 = addSignal( hN, 'Switch2_out1', pirTyp6, slRate1 );
Switch4_out1_s55 = addSignal( hN, 'Switch4_out1', pirTyp6, slRate1 );
Switch5_out1_s56 = addSignal( hN, 'Switch5_out1', pirTyp6, slRate1 );
Switch6_out1_s57 = addSignal( hN, 'Switch6_out1', pirTyp6, slRate1 );
Switch7_out1_s58 = addSignal( hN, 'Switch7_out1', pirTyp6, slRate1 );

pirelab.getConstComp( hN,  ...
Start_out1_s44,  ...
fi( 0, nt1, fiMath1, 'hex', '07' ),  ...
'Start', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_1_out1_s45,  ...
fi( 0, nt1, fiMath1, 'hex', '06' ),  ...
sprintf( 'Start + 1\n' ), 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_2_out1_s46,  ...
fi( 0, nt1, fiMath1, 'hex', '05' ),  ...
'Start + 2', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_3_out1_s47,  ...
fi( 0, nt1, fiMath1, 'hex', '04' ),  ...
'Start + 3', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_4_out1_s48,  ...
fi( 0, nt1, fiMath1, 'hex', '03' ),  ...
'Start + 4', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_5_out1_s49,  ...
fi( 0, nt1, fiMath1, 'hex', '02' ),  ...
'Start + 5', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_6_out1_s50,  ...
fi( 0, nt1, fiMath1, 'hex', '01' ),  ...
'Start + 6', 'on', 0, '', '', '' );

pirelab.getConstComp( hN,  ...
Start_7_out1_s51,  ...
fi( 0, nt1, fiMath1, 'hex', '00' ),  ...
'Start + 7', 'on', 1, '', '', '' );

pirelab.getWireComp( hN,  ...
Switch4_out1_s55,  ...
Bottom7Bits_out1_s32,  ...
'Bottom 7 bits_out1' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s12,  ...
fi( 0, nt2, fiMath1, 'hex', '01' ),  ...
'Constant1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant2_out1_s13,  ...
fi( 0, nt3, fiMath1, 'hex', 'e00000000' ),  ...
'Constant2', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant3_out1_s14,  ...
fi( 0, nt3, fiMath1, 'hex', '200000000' ),  ...
'Constant3', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
ShiftArithmetic_out1_s25,  ...
Delay_out1_s16,  ...
transformnfp.MinLatencyDelay1, 'Delay',  ...
fi( 0, nt3, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch4_out1_s29,  ...
Delay1_out1_s17,  ...
transformnfp.MinLatencyDelay1, 'Delay1',  ...
fi( 0, nt3, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_out_s0,  ...
Delay2_out1_s18,  ...
transformnfp.MinLatencyDelay1, 'Delay2',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
useCubicApprx_s2,  ...
Delay3_out1_s19,  ...
transformnfp.MinLatencyDelay1, 'Delay3',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay2_out1_s18,  ...
Delay4_out1_s20,  ...
transformnfp.Delay1, 'Delay4',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Add_out1_s5,  ...
Delay5_out1_s21,  ...
transformnfp.Delay1, 'Delay5',  ...
fi( 0, nt3, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Add1_out1_s6,  ...
Delay6_out1_s22,  ...
transformnfp.Delay1, 'Delay6',  ...
fi( 0, nt3, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay3_out1_s19,  ...
Delay7_out1_s23,  ...
transformnfp.Delay1, 'Delay7',  ...
false,  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
Bottom7Bits_out1_s32,  ...
FindFirst1_out1_s24,  ...
'FindFirst1_out1' );


pirelab.getAddComp( hN,  ...
[ Delay1_out1_s17, Delay_out1_s16 ],  ...
Add_out1_s5,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Delay_out1_s16, Constant2_out1_s13 ],  ...
Add1_out1_s6,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ Constant1_out1_s12, Delay4_out1_s20 ],  ...
Add2_out1_s7,  ...
'Floor', 'Wrap', 'Add2', pirTyp7, '++' );


pirelab.getAddComp( hN,  ...
[ Delay4_out1_s20, DTC_out1_s15 ],  ...
Add3_out1_s8,  ...
'Floor', 'Wrap', 'Add3', pirTyp7, '+-' );


pirelab.getBitShiftComp( hN,  ...
Delay5_out1_s21,  ...
BitShift_out1_s9,  ...
'sra', 1, 0, 'Bit Shift' );


pirelab.getBitSliceComp( hN,  ...
Delay5_out1_s21,  ...
BitSlice_out1_s10,  ...
34, 34, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Delay5_out1_s21,  ...
BitSlice1_out1_s11,  ...
33, 27, 'Bit Slice1' );


pirelab.getDTCComp( hN,  ...
FindFirst1_out1_s24,  ...
DTC_out1_s15,  ...
'Floor', 'Wrap', 'SI', 'DTC' );


pirelab.getWireComp( hN,  ...
BitSlice1_out1_s11,  ...
BitSlice4_out1_s31,  ...
'Bit Slice4' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice_out1_s33,  ...
0, 0, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice1_out1_s34,  ...
1, 1, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice2_out1_s35,  ...
2, 2, 'Bit Slice2' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice3_out1_s36,  ...
3, 3, 'Bit Slice3' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice5_out1_s37,  ...
4, 4, 'Bit Slice5' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice6_out1_s38,  ...
5, 5, 'Bit Slice6' );


pirelab.getBitSliceComp( hN,  ...
BitSlice4_out1_s31,  ...
BitSlice7_out1_s39,  ...
6, 6, 'Bit Slice7' );


pirelab.getLogicComp( hN,  ...
[ BitSlice5_out1_s37, BitSlice3_out1_s36 ],  ...
LogicalOperator_out1_s40,  ...
'or', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator3_out1_s42, LogicalOperator_out1_s40 ],  ...
LogicalOperator1_out1_s41,  ...
'or', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice7_out1_s39, BitSlice6_out1_s38 ],  ...
LogicalOperator3_out1_s42,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ BitSlice2_out1_s35, BitSlice1_out1_s34 ],  ...
LogicalOperator4_out1_s43,  ...
'or', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ Start_1_out1_s45, Start_out1_s44 ],  ...
Switch_out1_s52,  ...
BitSlice_out1_s33, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch2_out1_s54, Switch_out1_s52 ],  ...
Switch1_out1_s53,  ...
LogicalOperator4_out1_s43, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Start_3_out1_s47, Start_2_out1_s46 ],  ...
Switch2_out1_s54,  ...
BitSlice2_out1_s35, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch6_out1_s57, Switch1_out1_s53 ],  ...
Switch4_out1_s55,  ...
LogicalOperator1_out1_s41, 'Switch4',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Start_5_out1_s49, Start_4_out1_s48 ],  ...
Switch5_out1_s56,  ...
BitSlice5_out1_s37, 'Switch5',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch7_out1_s58, Switch5_out1_s56 ],  ...
Switch6_out1_s57,  ...
LogicalOperator3_out1_s42, 'Switch6',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Start_7_out1_s51, Start_6_out1_s50 ],  ...
Switch7_out1_s58,  ...
BitSlice7_out1_s39, 'Switch7',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getDynamicBitShiftComp( hN,  ...
[ y_s1, shift_length_s4 ],  ...
ShiftArithmetic_out1_s25,  ...
'right', 'dynamic_shift' );


pirelab.getDynamicBitShiftComp( hN,  ...
[ Delay5_out1_s21, DTC_out1_s15 ],  ...
ShiftArithmetic1_out1_s26,  ...
'left', 'dynamic_shift' );


pirelab.getSwitchComp( hN,  ...
[ BitShift_out1_s9, ShiftArithmetic1_out1_s26 ],  ...
Switch_out1_s27,  ...
BitSlice_out1_s10, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Add2_out1_s7, Add3_out1_s8 ],  ...
Switch1_out1_s28,  ...
BitSlice_out1_s10, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ ONE_s3, Constant3_out1_s14 ],  ...
Switch4_out1_s29,  ...
useCubicApprx_s2, 'Switch4',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n31( ~, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp7 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 10, 0 );
pirTyp2 = pir_ufixpt_t( 24,  - 23 );
pirTyp9 = pir_ufixpt_t( 32, 0 );
pirTyp6 = pir_ufixpt_t( 34, 0 );
pirTyp3 = pir_ufixpt_t( 34,  - 33 );
pirTyp8 = pir_ufixpt_t( 35,  - 33 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 10, 0 );
nt4 = numerictype( 0, 24, 23 );
nt5 = numerictype( 0, 34, 33 );
nt3 = numerictype( 0, 35, 33 );
nt1 = numerictype( 0, 8, 0 );




hN.addInputPort( 'exp_cor' );
exp_cor_s0 = addSignal( hN, 'exp_cor', pirTyp1, slRate1 );
exp_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_cor' );
mant_cor_s1 = addSignal( hN, 'mant_cor', pirTyp2, slRate1 );
mant_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'exp_m' );
if_bitget_tmp2_Tmp2_WordLength_____out1_s24 = addSignal( hN, 'if (bitget(tmp2, tmp2.WordLength)..._out1', pirTyp1, slRate1 );
if_bitget_tmp2_Tmp2_WordLength_____out1_s24.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_m' );
if_bitget_tmp2_Tmp2_WordLength____1_out1_s25 = addSignal( hN, 'if (bitget(tmp2, tmp2.WordLength)...1_out1', pirTyp3, slRate1 );
if_bitget_tmp2_Tmp2_WordLength____1_out1_s25.addReceiver( hN, 1 );

hN.addOutputPort( 'exp_out_Cubic' );
Delay1_out1_s11 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay9_out1 = addSignal( hN, 'Delay9_out1', pirTyp1, slRate1 );
Delay9_out1.addReceiver( hN, 2 );

hN.addOutputPort( 'mant_cor1' );
Delay11_out1_s13 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay11_out1_s13.addReceiver( hN, 3 );

hN.addOutputPort( 'useCubicApprx' );
Delay8_out1_s20 = addSignal( hN, 'Delay8_out1', pirTyp4, slRate1 );
Delay8_out1_s20.addReceiver( hN, 4 );

x1_out1_s2 = addSignal( hN, '1_out1', pirTyp1, slRate1 );
x127_6_out1_s3 = addSignal( hN, '127-6_out1', pirTyp4, slRate1 );
x2_out1_s4 = addSignal( hN, '2_out1', pirTyp5, slRate1 );
BitConcat_out1_s5 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitSlice_out1_s6 = addSignal( hN, 'BitSlice_out1', pirTyp7, slRate1 );
BitSlice1_out1_s7 = addSignal( hN, 'BitSlice1_out1', pirTyp6, slRate1 );
BitSlice2_out1_s8 = addSignal( hN, 'BitSlice2_out1', pirTyp6, slRate1 );
DataTypeConversion_out1_s9 = addSignal( hN, 'Data Type Conversion_out1', pirTyp3, slRate1 );
Delay_out1_s10 = addSignal( hN, 'Delay_out1', pirTyp8, slRate1 );
Delay10_out1_s12 = addSignal( hN, 'Delay10_out1', pirTyp2, slRate1 );
Delay2_out1_s14 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Delay3_out1_s15 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
Delay4_out1_s16 = addSignal( hN, 'Delay4_out1', pirTyp3, slRate1 );
Delay5_out1_s17 = addSignal( hN, 'Delay5_out1', pirTyp2, slRate1 );
Delay6_out1_s18 = addSignal( hN, 'Delay6_out1', pirTyp1, slRate1 );
Delay7_out1_s19 = addSignal( hN, 'Delay7_out1', pirTyp4, slRate1 );
Log2_E_out1_s21 = addSignal( hN, 'Log2_E_out1', pirTyp3, slRate1 );
Switch_out1_s22 = addSignal( hN, 'Switch_out1', pirTyp3, slRate1 );
exp_cor_1_out1_s23 = addSignal( hN, 'exp_cor + 1_out1', pirTyp1, slRate1 );
reinterpretcast_Bitsliceget_t_____out1_s26 = addSignal( hN, 'reinterpretcast( bitsliceget(t...  : _out1', pirTyp3, slRate1 );
reinterpretcast_Bitsliceget_t_____out1_s27 = addSignal( hN, 'reinterpretcast( bitsliceget(t... : _out1', pirTyp3, slRate1 );
tmp1_1_66096404753625392914_out1_s28 = addSignal( hN, 'tmp1*1.66096404753625392914_out1', pirTyp8, slRate1 );


pirelab.getConstComp( hN,  ...
x1_out1_s2,  ...
fi( 0, nt1, fiMath1, 'hex', '01' ),  ...
'1', 'off', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
x2_out1_s4,  ...
fi( 0, nt2, fiMath1, 'hex', '000' ),  ...
'2', 'off', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
tmp1_1_66096404753625392914_out1_s28,  ...
Delay_out1_s10,  ...
transformnfp.Delay2, 'Delay',  ...
fi( 0, nt3, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay6_out1_s18,  ...
Delay1_out1_s11,  ...
transformnfp.Delay1, 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_cor_s1,  ...
Delay10_out1_s12,  ...
transformnfp.MinLatencyDelay1, 'Delay10',  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay10_out1_s12,  ...
Delay11_out1_s13,  ...
transformnfp.Delay2, 'Delay11',  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_cor_1_out1_s23,  ...
Delay2_out1_s14,  ...
transformnfp.Delay1, 'Delay2',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay1_out1_s11,  ...
Delay3_out1_s15,  ...
transformnfp.Delay1, 'Delay3',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );

pirelab.getIntDelayComp( hN,  ...
Delay1_out1_s11,  ...
Delay9_out1,  ...
transformnfp.Delay1, 'Delay9',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );

pirelab.getIntDelayComp( hN,  ...
Switch_out1_s22,  ...
Delay4_out1_s16,  ...
transformnfp.MinLatencyDelay1, 'Delay4',  ...
fi( 0, nt5, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_cor_s1,  ...
Delay5_out1_s17,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt4, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_cor_s0,  ...
Delay6_out1_s18,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
x127_6_out1_s3,  ...
Delay7_out1_s19,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay7_out1_s19,  ...
Delay8_out1_s20,  ...
transformnfp.Delay2, 'Delay8',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getConstComp( hN,  ...
Log2_E_out1_s21,  ...
fi( 0, nt5, fiMath1, 'hex', '2e2a8eca5' ),  ...
'Log2_E', 'off', 0, '', '', '' );


pirelab.getCompareToValueComp( hN,  ...
exp_cor_s0,  ...
x127_6_out1_s3,  ...
'<', fi( 0, nt1, fiMath1, 'hex', '79' ),  ...
'127-6', 0 );


pirelab.getBitConcatComp( hN,  ...
[ mant_cor_s1, x2_out1_s4 ],  ...
BitConcat_out1_s5,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
Delay_out1_s10,  ...
BitSlice_out1_s6,  ...
34, 34, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
Delay_out1_s10,  ...
BitSlice1_out1_s7,  ...
34, 1, 'BitSlice1' );


pirelab.getBitSliceComp( hN,  ...
Delay_out1_s10,  ...
BitSlice2_out1_s8,  ...
33, 0, 'BitSlice2' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s5,  ...
DataTypeConversion_out1_s9,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion' );


pirelab.getSwitchComp( hN,  ...
[ DataTypeConversion_out1_s9, Log2_E_out1_s21 ],  ...
Switch_out1_s22,  ...
x127_6_out1_s3, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ Delay1_out1_s11, x1_out1_s2 ],  ...
exp_cor_1_out1_s23,  ...
'Floor', 'Saturate', 'exp_cor + 1', pirTyp9, '++' );


pirelab.getSwitchComp( hN,  ...
[ Delay2_out1_s14, Delay3_out1_s15 ],  ...
if_bitget_tmp2_Tmp2_WordLength_____out1_s24,  ...
BitSlice_out1_s6, 'if (bitget(tmp2, tmp2.WordLength)...',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ reinterpretcast_Bitsliceget_t_____out1_s27, reinterpretcast_Bitsliceget_t_____out1_s26 ],  ...
if_bitget_tmp2_Tmp2_WordLength____1_out1_s25,  ...
BitSlice_out1_s6, 'if (bitget(tmp2, tmp2.WordLength)...1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getDTCComp( hN,  ...
BitSlice2_out1_s8,  ...
reinterpretcast_Bitsliceget_t_____out1_s26,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast( bitsliceget(t...  : ' );


pirelab.getDTCComp( hN,  ...
BitSlice1_out1_s7,  ...
reinterpretcast_Bitsliceget_t_____out1_s27,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast( bitsliceget(t... : ' );


pirelab.getMulComp( hN,  ...
[ Delay5_out1_s17, Delay4_out1_s16 ],  ...
tmp1_1_66096404753625392914_out1_s28,  ...
'Floor', 'Wrap', 'tmp1*1.66096404753625392914', '**', '',  - 1, 0 );


end 

function hN = createNetwork_n30( ~, hN, slRate1 )
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp4 = pir_sfixpt_t( 36,  - 33 );
pirTyp10 = pir_ufixpt_t( 1, 0 );
pirTyp7 = pir_ufixpt_t( 2, 0 );
pirTyp3 = pir_ufixpt_t( 24,  - 23 );
pirTyp9 = pir_ufixpt_t( 33, 0 );
pirTyp8 = pir_ufixpt_t( 35, 0 );
pirTyp6 = pir_ufixpt_t( 35,  - 33 );
pirTyp1 = pir_ufixpt_t( 39,  - 33 );
pirTyp11 = pir_ufixpt_t( 6, 0 );
pirTyp12 = pir_ufixpt_t( 8, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 2, 0 );
nt3 = numerictype( 0, 35, 33 );
nt2 = numerictype( 0, 8, 0 );




hN.addInputPort( 'mant_ext' );
mant_ext_s0 = addSignal( hN, 'mant_ext', pirTyp1, slRate1 );
mant_ext_s0.addDriver( hN, 0 );

hN.addInputPort( 'exp_out_Cubic' );
exp_out_Cubic_s1 = addSignal( hN, 'exp_out_Cubic', pirTyp2, slRate1 );
exp_out_Cubic_s1.addDriver( hN, 1 );

hN.addInputPort( 'shift_length_Cubic' );
shift_length_Cubic_s2 = addSignal( hN, 'shift_length_Cubic', pirTyp2, slRate1 );
shift_length_Cubic_s2.addDriver( hN, 2 );

hN.addInputPort( 'mant_cor' );
mant_cor_s3 = addSignal( hN, 'mant_cor', pirTyp3, slRate1 );
mant_cor_s3.addDriver( hN, 3 );

hN.addInputPort( 'mant_squared' );
mant_squared_s4 = addSignal( hN, 'mant_squared', pirTyp4, slRate1 );
mant_squared_s4.addDriver( hN, 4 );

hN.addInputPort( 'useCubicApprx' );
useCubicApprx_s5 = addSignal( hN, 'useCubicApprx', pirTyp5, slRate1 );
useCubicApprx_s5.addDriver( hN, 5 );

hN.addOutputPort( 'exp_out' );
if_sticky_3_out1_s22 = addSignal( hN, 'if (sticky)3_out1', pirTyp2, slRate1 );
if_sticky_3_out1_s22.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_frac_neg' );
if_sticky_1_out1_s20 = addSignal( hN, 'if (sticky)1_out1', pirTyp6, slRate1 );
if_sticky_1_out1_s20.addReceiver( hN, 1 );

hN.addOutputPort( 'useCubicApprx1' );
useCubicApprx_s5.addReceiver( hN, 2 );

hN.addOutputPort( 'mant_squared1' );
mant_squared_s4.addReceiver( hN, 3 );

hN.addOutputPort( 'mant_cor1' );
mant_cor_s3.addReceiver( hN, 4 );

hN.addOutputPort( 'shift_length' );
if_sticky_2_out1_s21 = addSignal( hN, 'if (sticky)2_out1', pirTyp2, slRate1 );
if_sticky_2_out1_s21.addReceiver( hN, 5 );

hN.addOutputPort( 'sticky' );
LogicalOperator1_out1_s17 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp5, slRate1 );
LogicalOperator1_out1_s17.addReceiver( hN, 6 );

x0_out1_s6 = addSignal( hN, '0_out1', pirTyp7, slRate1 );
x1_out1_s7 = addSignal( hN, '1_out1', pirTyp7, slRate1 );
x127_out1_s8 = addSignal( hN, '127 _out1', pirTyp2, slRate1 );
x127_Exp_tmp_out1_s9 = addSignal( hN, '127 + exp_tmp_out1', pirTyp2, slRate1 );
x1271_out1_s10 = addSignal( hN, '127 1_out1', pirTyp2, slRate1 );
BitConcat_out1_s11 = addSignal( hN, 'Bit Concat_out1', pirTyp8, slRate1 );
BitConcat1_out1_s12 = addSignal( hN, 'Bit Concat1_out1', pirTyp2, slRate1 );
BitSlice_out1_s13 = addSignal( hN, 'BitSlice_out1', pirTyp9, slRate1 );
BitSlice1_out1_s14 = addSignal( hN, 'BitSlice1_out1', pirTyp10, slRate1 );
BitSlice2_out1_s15 = addSignal( hN, 'BitSlice2_out1', pirTyp11, slRate1 );
LogicalOperator_out1_s16 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp5, slRate1 );
cast_1__like__Mant_frac__out1_s18 = addSignal( hN, 'cast(1, like, mant_frac) _out1', pirTyp6, slRate1 );
cast_1__like__Mant_frac__M____out1_s19 = addSignal( hN, 'cast(1, like, mant_frac) - m..._out1', pirTyp6, slRate1 );
if_sticky_4_out1_s23 = addSignal( hN, 'if (sticky)4_out1', pirTyp2, slRate1 );
reinterpretcast_bitconcat_fi_0_____out1_s24 = addSignal( hN, 'reinterpretcast(bitconcat(fi(0... : _out1', pirTyp6, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s6,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s7,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x127_out1_s8,  ...
fi( 0, nt2, fiMath1, 'hex', '7f' ),  ...
'127 ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
x1271_out1_s10,  ...
fi( 0, nt2, fiMath1, 'hex', '01' ),  ...
'127 1', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
cast_1__like__Mant_frac__out1_s18,  ...
fi( 0, nt3, fiMath1, 'hex', '200000000' ),  ...
'cast(1, like, mant_frac) ', 'on', 0, '', '', '' );


pirelab.getAddComp( hN,  ...
[ BitConcat1_out1_s12, x1271_out1_s10 ],  ...
x127_Exp_tmp_out1_s9,  ...
'Floor', 'Wrap', '127 + exp_tmp', pirTyp12, '++' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s6, BitSlice_out1_s13 ],  ...
BitConcat_out1_s11,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ x1_out1_s7, BitSlice2_out1_s15 ],  ...
BitConcat1_out1_s12,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
mant_ext_s0,  ...
BitSlice_out1_s13,  ...
32, 0, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
cast_1__like__Mant_frac__M____out1_s19,  ...
BitSlice1_out1_s14,  ...
33, 33, 'BitSlice1' );


pirelab.getBitSliceComp( hN,  ...
mant_ext_s0,  ...
BitSlice2_out1_s15,  ...
38, 33, 'BitSlice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s14,  ...
LogicalOperator_out1_s16,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator_out1_s16, useCubicApprx_s5 ],  ...
LogicalOperator1_out1_s17,  ...
'or', sprintf( 'Logical\nOperator1' ) );


pirelab.getAddComp( hN,  ...
[ cast_1__like__Mant_frac__out1_s18, reinterpretcast_bitconcat_fi_0_____out1_s24 ],  ...
cast_1__like__Mant_frac__M____out1_s19,  ...
'Floor', 'Wrap', 'cast(1, like, mant_frac) - m...', pirTyp6, '+-' );


pirelab.getSwitchComp( hN,  ...
[ cast_1__like__Mant_frac__M____out1_s19, reinterpretcast_bitconcat_fi_0_____out1_s24 ],  ...
if_sticky_1_out1_s20,  ...
LogicalOperator_out1_s16, 'if (sticky)1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ shift_length_Cubic_s2, if_sticky_4_out1_s23 ],  ...
if_sticky_2_out1_s21,  ...
useCubicApprx_s5, 'if (sticky)2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ exp_out_Cubic_s1, x127_out1_s8 ],  ...
if_sticky_3_out1_s22,  ...
useCubicApprx_s5, 'if (sticky)3',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ x127_Exp_tmp_out1_s9, BitConcat1_out1_s12 ],  ...
if_sticky_4_out1_s23,  ...
LogicalOperator_out1_s16, 'if (sticky)4',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s11,  ...
reinterpretcast_bitconcat_fi_0_____out1_s24,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(bitconcat(fi(0... : ' );


end 

function hN = createNetwork_n12( ~, hN, slRate1 )
pirTyp10 = pir_ufixpt_t( 1, 0 );
pirTyp2 = pir_sfixpt_t( 37,  - 33 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp13 = pir_ufixpt_t( 11, 0 );
pirTyp4 = pir_ufixpt_t( 13, 0 );
pirTyp12 = pir_ufixpt_t( 15, 0 );
pirTyp11 = pir_ufixpt_t( 17, 0 );
pirTyp5 = pir_ufixpt_t( 19, 0 );
pirTyp16 = pir_ufixpt_t( 21, 0 );
pirTyp15 = pir_ufixpt_t( 23, 0 );
pirTyp3 = pir_ufixpt_t( 24, 0 );
pirTyp7 = pir_ufixpt_t( 25, 0 );
pirTyp9 = pir_ufixpt_t( 3, 0 );
pirTyp8 = pir_ufixpt_t( 5, 0 );
pirTyp6 = pir_ufixpt_t( 7, 0 );
pirTyp14 = pir_ufixpt_t( 9, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt3 = numerictype( 0, 1, 0 );
nt7 = numerictype( 0, 11, 0 );
nt11 = numerictype( 0, 13, 0 );
nt6 = numerictype( 0, 15, 0 );
nt5 = numerictype( 0, 17, 0 );
nt12 = numerictype( 0, 19, 0 );
nt10 = numerictype( 0, 21, 0 );
nt9 = numerictype( 0, 23, 0 );
nt4 = numerictype( 0, 3, 0 );
nt2 = numerictype( 0, 5, 0 );
nt13 = numerictype( 0, 7, 0 );
nt8 = numerictype( 0, 9, 0 );
nt1 = numerictype( 1, 37, 33 );




hN.addInputPort( 'Q_in' );
Q_in_s0 = addSignal( hN, 'Q_in', pirTyp1, slRate1 );
Q_in_s0.addDriver( hN, 0 );

hN.addInputPort( 'R_in' );
R_in_s1 = addSignal( hN, 'R_in', pirTyp2, slRate1 );
R_in_s1.addDriver( hN, 1 );

hN.addInputPort( '-B' );
x_B_s2 = addSignal( hN, '-B', pirTyp2, slRate1 );
x_B_s2.addDriver( hN, 2 );

hN.addInputPort( '-3B' );
x_3B_s3 = addSignal( hN, '-3B', pirTyp2, slRate1 );
x_3B_s3.addDriver( hN, 3 );

hN.addOutputPort( 'Q' );
BitSlice_out1_s4 = addSignal( hN, 'Bit Slice_out1', pirTyp3, slRate1 );
BitSlice_out1_s4.addReceiver( hN, 0 );

Delay1_out1_s5 = addSignal( hN, 'Delay1_out1', pirTyp4, slRate1 );
Delay10_out1_s6 = addSignal( hN, 'Delay10_out1', pirTyp2, slRate1 );
Delay11_out1_s7 = addSignal( hN, 'Delay11_out1', pirTyp5, slRate1 );
Delay12_out1_s8 = addSignal( hN, 'Delay12_out1', pirTyp2, slRate1 );
Delay2_out1_s9 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay3_out1_s10 = addSignal( hN, 'Delay3_out1', pirTyp2, slRate1 );
Delay4_out1_s11 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s12 = addSignal( hN, 'Delay5_out1', pirTyp6, slRate1 );
Delay6_out1_s13 = addSignal( hN, 'Delay6_out1', pirTyp2, slRate1 );
Delay7_out1_s14 = addSignal( hN, 'Delay7_out1', pirTyp2, slRate1 );
Delay8_out1_s15 = addSignal( hN, 'Delay8_out1', pirTyp2, slRate1 );
Delay9_out1_s16 = addSignal( hN, 'Delay9_out1', pirTyp2, slRate1 );
y_s17 = addSignal( hN, 'y', pirTyp6, slRate1 );
Subsystem_out2_s18 = addSignal( hN, 'Subsystem_out2', pirTyp2, slRate1 );
Subsystem_out3_s19 = addSignal( hN, 'Subsystem_out3', pirTyp2, slRate1 );
Subsystem_out4_s20 = addSignal( hN, 'Subsystem_out4', pirTyp2, slRate1 );
y_s21 = addSignal( hN, 'y', pirTyp5, slRate1 );
Subsystem1_out2_s22 = addSignal( hN, 'Subsystem1_out2', pirTyp2, slRate1 );
Subsystem1_out3_s23 = addSignal( hN, 'Subsystem1_out3', pirTyp2, slRate1 );
Subsystem1_out4_s24 = addSignal( hN, 'Subsystem1_out4', pirTyp2, slRate1 );
y_s25 = addSignal( hN, 'y', pirTyp4, slRate1 );
Subsystem2_out2_s26 = addSignal( hN, 'Subsystem2_out2', pirTyp2, slRate1 );
Subsystem2_out3_s27 = addSignal( hN, 'Subsystem2_out3', pirTyp2, slRate1 );
Subsystem2_out4_s28 = addSignal( hN, 'Subsystem2_out4', pirTyp2, slRate1 );
y_s29 = addSignal( hN, 'y', pirTyp7, slRate1 );
Delay1_out1_s34 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay10_out1_s35 = addSignal( hN, 'Delay10_out1', pirTyp8, slRate1 );
Delay11_out1_s36 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay12_out1_s37 = addSignal( hN, 'Delay12_out1', pirTyp2, slRate1 );
Delay14_out1_s38 = addSignal( hN, 'Delay14_out1', pirTyp2, slRate1 );
Delay2_out1_s39 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay3_out1_s40 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
Delay4_out1_s41 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s42 = addSignal( hN, 'Delay5_out1', pirTyp9, slRate1 );
Delay6_out1_s43 = addSignal( hN, 'Delay6_out1', pirTyp2, slRate1 );
Delay7_out1_s44 = addSignal( hN, 'Delay7_out1', pirTyp2, slRate1 );
Delay9_out1_s45 = addSignal( hN, 'Delay9_out1', pirTyp2, slRate1 );
y_s46 = addSignal( hN, 'y', pirTyp9, slRate1 );
Subsystem1_out2_s47 = addSignal( hN, 'Subsystem1_out2', pirTyp2, slRate1 );
Subsystem1_out3_s48 = addSignal( hN, 'Subsystem1_out3', pirTyp2, slRate1 );
Subsystem1_out4_s49 = addSignal( hN, 'Subsystem1_out4', pirTyp2, slRate1 );
y_s50 = addSignal( hN, 'y', pirTyp8, slRate1 );
Subsystem2_out2_s51 = addSignal( hN, 'Subsystem2_out2', pirTyp2, slRate1 );
Subsystem2_out3_s52 = addSignal( hN, 'Subsystem2_out3', pirTyp2, slRate1 );
Subsystem2_out4_s53 = addSignal( hN, 'Subsystem2_out4', pirTyp2, slRate1 );
y_s54 = addSignal( hN, 'y', pirTyp6, slRate1 );
Subsystem3_out2_s55 = addSignal( hN, 'Subsystem3_out2', pirTyp2, slRate1 );
Subsystem3_out3_s56 = addSignal( hN, 'Subsystem3_out3', pirTyp2, slRate1 );
Subsystem3_out4_s57 = addSignal( hN, 'Subsystem3_out4', pirTyp2, slRate1 );
Add_out1_s58 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s59 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s60 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s61 = addSignal( hN, 'Bit Concat_out1', pirTyp9, slRate1 );
BitShift1_out1_s62 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s63 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s64 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s65 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s66 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s67 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s68 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s69 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s70 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s71 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s72 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s73 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s74 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s75 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s76 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s77 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s78 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s79 = addSignal( hN, 'Bit Concat_out1', pirTyp8, slRate1 );
BitShift1_out1_s80 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s81 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s82 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s83 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s84 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s85 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s86 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s87 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s88 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s89 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s90 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s91 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s92 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s93 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s94 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s95 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s96 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s97 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitShift1_out1_s98 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s99 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s100 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s101 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s102 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s103 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s104 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s105 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s106 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s107 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s108 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s109 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s110 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s111 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Delay1_out1_s116 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay10_out1_s117 = addSignal( hN, 'Delay10_out1', pirTyp11, slRate1 );
Delay11_out1_s118 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay12_out1_s119 = addSignal( hN, 'Delay12_out1', pirTyp2, slRate1 );
Delay14_out1_s120 = addSignal( hN, 'Delay14_out1', pirTyp2, slRate1 );
Delay2_out1_s121 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay4_out1_s122 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s123 = addSignal( hN, 'Delay5_out1', pirTyp12, slRate1 );
y_s124 = addSignal( hN, 'y', pirTyp12, slRate1 );
Subsystem1_out2_s125 = addSignal( hN, 'Subsystem1_out2', pirTyp2, slRate1 );
Subsystem1_out3_s126 = addSignal( hN, 'Subsystem1_out3', pirTyp2, slRate1 );
Subsystem1_out4_s127 = addSignal( hN, 'Subsystem1_out4', pirTyp2, slRate1 );
y_s128 = addSignal( hN, 'y', pirTyp11, slRate1 );
Subsystem2_out2_s129 = addSignal( hN, 'Subsystem2_out2', pirTyp2, slRate1 );
Subsystem2_out3_s130 = addSignal( hN, 'Subsystem2_out3', pirTyp2, slRate1 );
Subsystem2_out4_s131 = addSignal( hN, 'Subsystem2_out4', pirTyp2, slRate1 );
y_s132 = addSignal( hN, 'y', pirTyp5, slRate1 );
Subsystem3_out2_s133 = addSignal( hN, 'Subsystem3_out2', pirTyp2, slRate1 );
Subsystem3_out3_s134 = addSignal( hN, 'Subsystem3_out3', pirTyp2, slRate1 );
Subsystem3_out4_s135 = addSignal( hN, 'Subsystem3_out4', pirTyp2, slRate1 );
Add_out1_s136 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s137 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s138 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s139 = addSignal( hN, 'Bit Concat_out1', pirTyp12, slRate1 );
BitShift1_out1_s140 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s141 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s142 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s143 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s144 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s145 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s146 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s147 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s148 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s149 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s150 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s151 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s152 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s153 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s154 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s155 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s156 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s157 = addSignal( hN, 'Bit Concat_out1', pirTyp11, slRate1 );
BitShift1_out1_s158 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s159 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s160 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s161 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s162 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s163 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s164 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s165 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s166 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s167 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s168 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s169 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s170 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s171 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s172 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s173 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s174 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s175 = addSignal( hN, 'Bit Concat_out1', pirTyp5, slRate1 );
BitShift1_out1_s176 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s177 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s178 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s179 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s180 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s181 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s182 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s183 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s184 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s185 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s186 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s187 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s188 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s189 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Delay1_out1_s194 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay10_out1_s195 = addSignal( hN, 'Delay10_out1', pirTyp13, slRate1 );
Delay11_out1_s196 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay12_out1_s197 = addSignal( hN, 'Delay12_out1', pirTyp2, slRate1 );
Delay14_out1_s198 = addSignal( hN, 'Delay14_out1', pirTyp2, slRate1 );
Delay2_out1_s199 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay4_out1_s200 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s201 = addSignal( hN, 'Delay5_out1', pirTyp14, slRate1 );
y_s202 = addSignal( hN, 'y', pirTyp14, slRate1 );
Subsystem1_out2_s203 = addSignal( hN, 'Subsystem1_out2', pirTyp2, slRate1 );
Subsystem1_out3_s204 = addSignal( hN, 'Subsystem1_out3', pirTyp2, slRate1 );
Subsystem1_out4_s205 = addSignal( hN, 'Subsystem1_out4', pirTyp2, slRate1 );
y_s206 = addSignal( hN, 'y', pirTyp13, slRate1 );
Subsystem2_out2_s207 = addSignal( hN, 'Subsystem2_out2', pirTyp2, slRate1 );
Subsystem2_out3_s208 = addSignal( hN, 'Subsystem2_out3', pirTyp2, slRate1 );
Subsystem2_out4_s209 = addSignal( hN, 'Subsystem2_out4', pirTyp2, slRate1 );
y_s210 = addSignal( hN, 'y', pirTyp4, slRate1 );
Subsystem3_out2_s211 = addSignal( hN, 'Subsystem3_out2', pirTyp2, slRate1 );
Subsystem3_out3_s212 = addSignal( hN, 'Subsystem3_out3', pirTyp2, slRate1 );
Subsystem3_out4_s213 = addSignal( hN, 'Subsystem3_out4', pirTyp2, slRate1 );
Add_out1_s214 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s215 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s216 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s217 = addSignal( hN, 'Bit Concat_out1', pirTyp14, slRate1 );
BitShift1_out1_s218 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s219 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s220 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s221 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s222 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s223 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s224 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s225 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s226 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s227 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s228 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s229 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s230 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s231 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s232 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s233 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s234 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s235 = addSignal( hN, 'Bit Concat_out1', pirTyp13, slRate1 );
BitShift1_out1_s236 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s237 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s238 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s239 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s240 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s241 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s242 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s243 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s244 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s245 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s246 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s247 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s248 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s249 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s250 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s251 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s252 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s253 = addSignal( hN, 'Bit Concat_out1', pirTyp4, slRate1 );
BitShift1_out1_s254 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s255 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s256 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s257 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s258 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s259 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s260 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s261 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s262 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s263 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s264 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s265 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s266 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s267 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Delay1_out1_s272 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay10_out1_s273 = addSignal( hN, 'Delay10_out1', pirTyp15, slRate1 );
Delay11_out1_s274 = addSignal( hN, 'Delay11_out1', pirTyp2, slRate1 );
Delay12_out1_s275 = addSignal( hN, 'Delay12_out1', pirTyp2, slRate1 );
Delay14_out1_s276 = addSignal( hN, 'Delay14_out1', pirTyp2, slRate1 );
Delay2_out1_s277 = addSignal( hN, 'Delay2_out1', pirTyp2, slRate1 );
Delay4_out1_s278 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay5_out1_s279 = addSignal( hN, 'Delay5_out1', pirTyp16, slRate1 );
y_s280 = addSignal( hN, 'y', pirTyp16, slRate1 );
Subsystem1_out2_s281 = addSignal( hN, 'Subsystem1_out2', pirTyp2, slRate1 );
Subsystem1_out3_s282 = addSignal( hN, 'Subsystem1_out3', pirTyp2, slRate1 );
Subsystem1_out4_s283 = addSignal( hN, 'Subsystem1_out4', pirTyp2, slRate1 );
y_s284 = addSignal( hN, 'y', pirTyp15, slRate1 );
Subsystem2_out2_s285 = addSignal( hN, 'Subsystem2_out2', pirTyp2, slRate1 );
Subsystem2_out3_s286 = addSignal( hN, 'Subsystem2_out3', pirTyp2, slRate1 );
Subsystem2_out4_s287 = addSignal( hN, 'Subsystem2_out4', pirTyp2, slRate1 );
y_s288 = addSignal( hN, 'y', pirTyp7, slRate1 );
Add_out1_s289 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s290 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s291 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s292 = addSignal( hN, 'Bit Concat_out1', pirTyp16, slRate1 );
BitShift1_out1_s293 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s294 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s295 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s296 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s297 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s298 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s299 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s300 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s301 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s302 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s303 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s304 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s305 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s306 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s307 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s308 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s309 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s310 = addSignal( hN, 'Bit Concat_out1', pirTyp15, slRate1 );
BitShift1_out1_s311 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s312 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitShift3_out1_s313 = addSignal( hN, 'Bit Shift3_out1', pirTyp2, slRate1 );
BitSlice_out1_s314 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s315 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s316 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s317 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s318 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s319 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s320 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s321 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );
Switch_out1_s322 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch1_out1_s323 = addSignal( hN, 'Switch1_out1', pirTyp2, slRate1 );
Switch2_out1_s324 = addSignal( hN, 'Switch2_out1', pirTyp2, slRate1 );
Add_out1_s325 = addSignal( hN, 'Add_out1', pirTyp2, slRate1 );
Add1_out1_s326 = addSignal( hN, 'Add1_out1', pirTyp2, slRate1 );
Add2_out1_s327 = addSignal( hN, 'Add2_out1', pirTyp2, slRate1 );
BitConcat_out1_s328 = addSignal( hN, 'Bit Concat_out1', pirTyp7, slRate1 );
BitShift1_out1_s329 = addSignal( hN, 'Bit Shift1_out1', pirTyp2, slRate1 );
BitShift2_out1_s330 = addSignal( hN, 'Bit Shift2_out1', pirTyp2, slRate1 );
BitSlice_out1_s331 = addSignal( hN, 'Bit Slice_out1', pirTyp1, slRate1 );
BitSlice1_out1_s332 = addSignal( hN, 'Bit Slice1_out1', pirTyp1, slRate1 );
BitSlice2_out1_s333 = addSignal( hN, 'Bit Slice2_out1', pirTyp1, slRate1 );
LogicalOperator_out1_s334 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp10, slRate1 );
LogicalOperator1_out1_s335 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp10, slRate1 );
LogicalOperator2_out1_s336 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp10, slRate1 );
LogicalOperator3_out1_s337 = addSignal( hN, sprintf( 'Logical\nOperator3_out1' ), pirTyp10, slRate1 );
LogicalOperator4_out1_s338 = addSignal( hN, sprintf( 'Logical\nOperator4_out1' ), pirTyp10, slRate1 );


pirelab.getIntDelayComp( hN,  ...
R_in_s1,  ...
Delay1_out1_s34,  ...
transformnfp.Delay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s50,  ...
Delay10_out1_s35,  ...
transformnfp.Delay1, 'Delay10',  ...
fi( 0, nt2, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s51,  ...
Delay11_out1_s36,  ...
transformnfp.Delay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out3_s52,  ...
Delay12_out1_s37,  ...
transformnfp.Delay1, 'Delay12',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out4_s53,  ...
Delay14_out1_s38,  ...
transformnfp.Delay1, 'Delay14',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
x_B_s2,  ...
Delay2_out1_s39,  ...
transformnfp.Delay1, 'Delay2',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Q_in_s0,  ...
Delay3_out1_s40,  ...
transformnfp.Delay1, 'Delay3',  ...
fi( 0, nt3, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
x_3B_s3,  ...
Delay4_out1_s41,  ...
transformnfp.Delay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s46,  ...
Delay5_out1_s42,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt4, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s47,  ...
Delay6_out1_s43,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out3_s48,  ...
Delay7_out1_s44,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out4_s49,  ...
Delay9_out1_s45,  ...
transformnfp.MinLatencyDelay1, 'Delay9',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s61,  ...
y_s46,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s75,  ...
Subsystem1_out2_s47,  ...
'Subsystem1_out2' );

pirelab.getWireComp( hN,  ...
Delay2_out1_s39,  ...
Subsystem1_out3_s48,  ...
'Subsystem1_out3' );

pirelab.getWireComp( hN,  ...
Delay4_out1_s41,  ...
Subsystem1_out4_s49,  ...
'Subsystem1_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s79,  ...
y_s50,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s93,  ...
Subsystem2_out2_s51,  ...
'Subsystem2_out2' );

pirelab.getWireComp( hN,  ...
Delay7_out1_s44,  ...
Subsystem2_out3_s52,  ...
'Subsystem2_out3' );

pirelab.getWireComp( hN,  ...
Delay9_out1_s45,  ...
Subsystem2_out4_s53,  ...
'Subsystem2_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s97,  ...
y_s54,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s111,  ...
Subsystem3_out2_s55,  ...
'Subsystem3_out2' );

pirelab.getWireComp( hN,  ...
Delay12_out1_s37,  ...
Subsystem3_out3_s56,  ...
'Subsystem3_out3' );

pirelab.getWireComp( hN,  ...
Delay14_out1_s38,  ...
Subsystem3_out4_s57,  ...
'Subsystem3_out4' );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s125,  ...
Delay1_out1_s116,  ...
transformnfp.MinLatencyDelay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s128,  ...
Delay10_out1_s117,  ...
transformnfp.Delay1, 'Delay10',  ...
fi( 0, nt5, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s129,  ...
Delay11_out1_s118,  ...
transformnfp.Delay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out3_s130,  ...
Delay12_out1_s119,  ...
transformnfp.Delay1, 'Delay12',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out4_s131,  ...
Delay14_out1_s120,  ...
transformnfp.Delay1, 'Delay14',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out3_s126,  ...
Delay2_out1_s121,  ...
transformnfp.MinLatencyDelay1, 'Delay2',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out4_s127,  ...
Delay4_out1_s122,  ...
transformnfp.MinLatencyDelay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s124,  ...
Delay5_out1_s123,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt6, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s139,  ...
y_s124,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s153,  ...
Subsystem1_out2_s125,  ...
'Subsystem1_out2' );

pirelab.getWireComp( hN,  ...
Delay3_out1_s10,  ...
Subsystem1_out3_s126,  ...
'Subsystem1_out3' );

pirelab.getWireComp( hN,  ...
Delay10_out1_s6,  ...
Subsystem1_out4_s127,  ...
'Subsystem1_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s157,  ...
y_s128,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s171,  ...
Subsystem2_out2_s129,  ...
'Subsystem2_out2' );

pirelab.getWireComp( hN,  ...
Delay2_out1_s121,  ...
Subsystem2_out3_s130,  ...
'Subsystem2_out3' );

pirelab.getWireComp( hN,  ...
Delay4_out1_s122,  ...
Subsystem2_out4_s131,  ...
'Subsystem2_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s175,  ...
y_s132,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s189,  ...
Subsystem3_out2_s133,  ...
'Subsystem3_out2' );

pirelab.getWireComp( hN,  ...
Delay12_out1_s119,  ...
Subsystem3_out3_s134,  ...
'Subsystem3_out3' );

pirelab.getWireComp( hN,  ...
Delay14_out1_s120,  ...
Subsystem3_out4_s135,  ...
'Subsystem3_out4' );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s203,  ...
Delay1_out1_s194,  ...
transformnfp.Delay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s206,  ...
Delay10_out1_s195,  ...
transformnfp.MinLatencyDelay1, 'Delay10',  ...
fi( 0, nt7, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s207,  ...
Delay11_out1_s196,  ...
transformnfp.MinLatencyDelay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out3_s208,  ...
Delay12_out1_s197,  ...
transformnfp.MinLatencyDelay1, 'Delay12',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out4_s209,  ...
Delay14_out1_s198,  ...
transformnfp.MinLatencyDelay1, 'Delay14',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out3_s204,  ...
Delay2_out1_s199,  ...
transformnfp.Delay1, 'Delay2',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out4_s205,  ...
Delay4_out1_s200,  ...
transformnfp.Delay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s202,  ...
Delay5_out1_s201,  ...
transformnfp.Delay1, 'Delay5',  ...
fi( 0, nt8, fiMath1, 'hex', '000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s217,  ...
y_s202,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s231,  ...
Subsystem1_out2_s203,  ...
'Subsystem1_out2' );

pirelab.getWireComp( hN,  ...
Delay7_out1_s14,  ...
Subsystem1_out3_s204,  ...
'Subsystem1_out3' );

pirelab.getWireComp( hN,  ...
Delay9_out1_s16,  ...
Subsystem1_out4_s205,  ...
'Subsystem1_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s235,  ...
y_s206,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s249,  ...
Subsystem2_out2_s207,  ...
'Subsystem2_out2' );

pirelab.getWireComp( hN,  ...
Delay2_out1_s199,  ...
Subsystem2_out3_s208,  ...
'Subsystem2_out3' );

pirelab.getWireComp( hN,  ...
Delay4_out1_s200,  ...
Subsystem2_out4_s209,  ...
'Subsystem2_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s253,  ...
y_s210,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s267,  ...
Subsystem3_out2_s211,  ...
'Subsystem3_out2' );

pirelab.getWireComp( hN,  ...
Delay12_out1_s197,  ...
Subsystem3_out3_s212,  ...
'Subsystem3_out3' );

pirelab.getWireComp( hN,  ...
Delay14_out1_s198,  ...
Subsystem3_out4_s213,  ...
'Subsystem3_out4' );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s281,  ...
Delay1_out1_s272,  ...
transformnfp.Delay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s284,  ...
Delay10_out1_s273,  ...
transformnfp.MinLatencyDelay1, 'Delay10',  ...
fi( 0, nt9, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s285,  ...
Delay11_out1_s274,  ...
transformnfp.MinLatencyDelay1, 'Delay11',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out3_s286,  ...
Delay12_out1_s275,  ...
transformnfp.MinLatencyDelay1, 'Delay12',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out4_s287,  ...
Delay14_out1_s276,  ...
transformnfp.MinLatencyDelay1, 'Delay14',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out3_s282,  ...
Delay2_out1_s277,  ...
transformnfp.Delay1, 'Delay2',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out4_s283,  ...
Delay4_out1_s278,  ...
transformnfp.Delay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s280,  ...
Delay5_out1_s279,  ...
transformnfp.Delay1, 'Delay5',  ...
fi( 0, nt10, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s292,  ...
y_s280,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s306,  ...
Subsystem1_out2_s281,  ...
'Subsystem1_out2' );

pirelab.getWireComp( hN,  ...
Delay8_out1_s15,  ...
Subsystem1_out3_s282,  ...
'Subsystem1_out3' );

pirelab.getWireComp( hN,  ...
Delay12_out1_s8,  ...
Subsystem1_out4_s283,  ...
'Subsystem1_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s310,  ...
y_s284,  ...
'y' );

pirelab.getWireComp( hN,  ...
Switch2_out1_s324,  ...
Subsystem2_out2_s285,  ...
'Subsystem2_out2' );

pirelab.getWireComp( hN,  ...
Delay2_out1_s277,  ...
Subsystem2_out3_s286,  ...
'Subsystem2_out3' );

pirelab.getWireComp( hN,  ...
Delay4_out1_s278,  ...
Subsystem2_out4_s287,  ...
'Subsystem2_out4' );

pirelab.getWireComp( hN,  ...
BitConcat_out1_s328,  ...
y_s288,  ...
'y' );


pirelab.getIntDelayComp( hN,  ...
y_s25,  ...
Delay1_out1_s5,  ...
transformnfp.Delay1, 'Delay1',  ...
fi( 0, nt11, fiMath1, 'hex', '0000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out4_s28,  ...
Delay10_out1_s6,  ...
transformnfp.Delay1, 'Delay10',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s21,  ...
Delay11_out1_s7,  ...
transformnfp.MinLatencyDelay1, 'Delay11',  ...
fi( 0, nt12, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out4_s24,  ...
Delay12_out1_s8,  ...
transformnfp.MinLatencyDelay1, 'Delay12',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out2_s26,  ...
Delay2_out1_s9,  ...
transformnfp.Delay1, 'Delay2',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem2_out3_s27,  ...
Delay3_out1_s10,  ...
transformnfp.Delay1, 'Delay3',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out2_s22,  ...
Delay4_out1_s11,  ...
transformnfp.MinLatencyDelay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_s17,  ...
Delay5_out1_s12,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt13, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem_out2_s18,  ...
Delay6_out1_s13,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem_out3_s19,  ...
Delay7_out1_s14,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem1_out3_s23,  ...
Delay8_out1_s15,  ...
transformnfp.MinLatencyDelay1, 'Delay8',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Subsystem_out4_s20,  ...
Delay9_out1_s16,  ...
transformnfp.MinLatencyDelay1, 'Delay9',  ...
fi( 0, nt1, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
y_s54,  ...
y_s17,  ...
'y' );

pirelab.getWireComp( hN,  ...
Subsystem3_out2_s55,  ...
Subsystem_out2_s18,  ...
'Subsystem_out2' );

pirelab.getWireComp( hN,  ...
Subsystem3_out3_s56,  ...
Subsystem_out3_s19,  ...
'Subsystem_out3' );

pirelab.getWireComp( hN,  ...
Subsystem3_out4_s57,  ...
Subsystem_out4_s20,  ...
'Subsystem_out4' );

pirelab.getWireComp( hN,  ...
y_s132,  ...
y_s21,  ...
'y' );

pirelab.getWireComp( hN,  ...
Subsystem3_out2_s133,  ...
Subsystem1_out2_s22,  ...
'Subsystem1_out2' );

pirelab.getWireComp( hN,  ...
Subsystem3_out3_s134,  ...
Subsystem1_out3_s23,  ...
'Subsystem1_out3' );

pirelab.getWireComp( hN,  ...
Subsystem3_out4_s135,  ...
Subsystem1_out4_s24,  ...
'Subsystem1_out4' );

pirelab.getWireComp( hN,  ...
y_s210,  ...
y_s25,  ...
'y' );

pirelab.getWireComp( hN,  ...
Subsystem3_out2_s211,  ...
Subsystem2_out2_s26,  ...
'Subsystem2_out2' );

pirelab.getWireComp( hN,  ...
Subsystem3_out3_s212,  ...
Subsystem2_out3_s27,  ...
'Subsystem2_out3' );

pirelab.getWireComp( hN,  ...
Subsystem3_out4_s213,  ...
Subsystem2_out4_s28,  ...
'Subsystem2_out4' );

pirelab.getWireComp( hN,  ...
y_s288,  ...
y_s29,  ...
'y' );


pirelab.getBitSliceComp( hN,  ...
y_s29,  ...
BitSlice_out1_s4,  ...
23, 0, 'Bit Slice' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s62, Delay2_out1_s39 ],  ...
Add_out1_s58,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s63, Delay2_out1_s39 ],  ...
Add1_out1_s59,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s62, Delay4_out1_s41 ],  ...
Add2_out1_s60,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay3_out1_s40, LogicalOperator_out1_s68, LogicalOperator3_out1_s71 ],  ...
BitConcat_out1_s61,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s34,  ...
BitShift1_out1_s62,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s34,  ...
BitShift2_out1_s63,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s59,  ...
BitShift3_out1_s64,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s58,  ...
BitSlice_out1_s65,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s59,  ...
BitSlice1_out1_s66,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s60,  ...
BitSlice2_out1_s67,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s66,  ...
LogicalOperator_out1_s68,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s65,  ...
LogicalOperator1_out1_s69,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s67,  ...
LogicalOperator2_out1_s70,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s72, LogicalOperator2_out1_s70 ],  ...
LogicalOperator3_out1_s71,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s69, BitSlice1_out1_s66 ],  ...
LogicalOperator4_out1_s72,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s62, Add_out1_s58 ],  ...
Switch_out1_s73,  ...
BitSlice_out1_s65, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s64, Add2_out1_s60 ],  ...
Switch1_out1_s74,  ...
BitSlice2_out1_s67, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s73, Switch1_out1_s74 ],  ...
Switch2_out1_s75,  ...
BitSlice1_out1_s66, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s80, Delay7_out1_s44 ],  ...
Add_out1_s76,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s81, Delay7_out1_s44 ],  ...
Add1_out1_s77,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s80, Delay9_out1_s45 ],  ...
Add2_out1_s78,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_out1_s42, LogicalOperator_out1_s86, LogicalOperator3_out1_s89 ],  ...
BitConcat_out1_s79,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay6_out1_s43,  ...
BitShift1_out1_s80,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay6_out1_s43,  ...
BitShift2_out1_s81,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s77,  ...
BitShift3_out1_s82,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s76,  ...
BitSlice_out1_s83,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s77,  ...
BitSlice1_out1_s84,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s78,  ...
BitSlice2_out1_s85,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s84,  ...
LogicalOperator_out1_s86,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s83,  ...
LogicalOperator1_out1_s87,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s85,  ...
LogicalOperator2_out1_s88,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s90, LogicalOperator2_out1_s88 ],  ...
LogicalOperator3_out1_s89,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s87, BitSlice1_out1_s84 ],  ...
LogicalOperator4_out1_s90,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s80, Add_out1_s76 ],  ...
Switch_out1_s91,  ...
BitSlice_out1_s83, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s82, Add2_out1_s78 ],  ...
Switch1_out1_s92,  ...
BitSlice2_out1_s85, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s91, Switch1_out1_s92 ],  ...
Switch2_out1_s93,  ...
BitSlice1_out1_s84, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s98, Delay12_out1_s37 ],  ...
Add_out1_s94,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s99, Delay12_out1_s37 ],  ...
Add1_out1_s95,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s98, Delay14_out1_s38 ],  ...
Add2_out1_s96,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay10_out1_s35, LogicalOperator_out1_s104, LogicalOperator3_out1_s107 ],  ...
BitConcat_out1_s97,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s36,  ...
BitShift1_out1_s98,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s36,  ...
BitShift2_out1_s99,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s95,  ...
BitShift3_out1_s100,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s94,  ...
BitSlice_out1_s101,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s95,  ...
BitSlice1_out1_s102,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s96,  ...
BitSlice2_out1_s103,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s102,  ...
LogicalOperator_out1_s104,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s101,  ...
LogicalOperator1_out1_s105,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s103,  ...
LogicalOperator2_out1_s106,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s108, LogicalOperator2_out1_s106 ],  ...
LogicalOperator3_out1_s107,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s105, BitSlice1_out1_s102 ],  ...
LogicalOperator4_out1_s108,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s98, Add_out1_s94 ],  ...
Switch_out1_s109,  ...
BitSlice_out1_s101, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s100, Add2_out1_s96 ],  ...
Switch1_out1_s110,  ...
BitSlice2_out1_s103, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s109, Switch1_out1_s110 ],  ...
Switch2_out1_s111,  ...
BitSlice1_out1_s102, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s140, Delay3_out1_s10 ],  ...
Add_out1_s136,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s141, Delay3_out1_s10 ],  ...
Add1_out1_s137,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s140, Delay10_out1_s6 ],  ...
Add2_out1_s138,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay1_out1_s5, LogicalOperator_out1_s146, LogicalOperator3_out1_s149 ],  ...
BitConcat_out1_s139,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay2_out1_s9,  ...
BitShift1_out1_s140,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay2_out1_s9,  ...
BitShift2_out1_s141,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s137,  ...
BitShift3_out1_s142,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s136,  ...
BitSlice_out1_s143,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s137,  ...
BitSlice1_out1_s144,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s138,  ...
BitSlice2_out1_s145,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s144,  ...
LogicalOperator_out1_s146,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s143,  ...
LogicalOperator1_out1_s147,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s145,  ...
LogicalOperator2_out1_s148,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s150, LogicalOperator2_out1_s148 ],  ...
LogicalOperator3_out1_s149,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s147, BitSlice1_out1_s144 ],  ...
LogicalOperator4_out1_s150,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s140, Add_out1_s136 ],  ...
Switch_out1_s151,  ...
BitSlice_out1_s143, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s142, Add2_out1_s138 ],  ...
Switch1_out1_s152,  ...
BitSlice2_out1_s145, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s151, Switch1_out1_s152 ],  ...
Switch2_out1_s153,  ...
BitSlice1_out1_s144, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s158, Delay2_out1_s121 ],  ...
Add_out1_s154,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s159, Delay2_out1_s121 ],  ...
Add1_out1_s155,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s158, Delay4_out1_s122 ],  ...
Add2_out1_s156,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_out1_s123, LogicalOperator_out1_s164, LogicalOperator3_out1_s167 ],  ...
BitConcat_out1_s157,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s116,  ...
BitShift1_out1_s158,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s116,  ...
BitShift2_out1_s159,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s155,  ...
BitShift3_out1_s160,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s154,  ...
BitSlice_out1_s161,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s155,  ...
BitSlice1_out1_s162,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s156,  ...
BitSlice2_out1_s163,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s162,  ...
LogicalOperator_out1_s164,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s161,  ...
LogicalOperator1_out1_s165,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s163,  ...
LogicalOperator2_out1_s166,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s168, LogicalOperator2_out1_s166 ],  ...
LogicalOperator3_out1_s167,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s165, BitSlice1_out1_s162 ],  ...
LogicalOperator4_out1_s168,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s158, Add_out1_s154 ],  ...
Switch_out1_s169,  ...
BitSlice_out1_s161, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s160, Add2_out1_s156 ],  ...
Switch1_out1_s170,  ...
BitSlice2_out1_s163, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s169, Switch1_out1_s170 ],  ...
Switch2_out1_s171,  ...
BitSlice1_out1_s162, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s176, Delay12_out1_s119 ],  ...
Add_out1_s172,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s177, Delay12_out1_s119 ],  ...
Add1_out1_s173,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s176, Delay14_out1_s120 ],  ...
Add2_out1_s174,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay10_out1_s117, LogicalOperator_out1_s182, LogicalOperator3_out1_s185 ],  ...
BitConcat_out1_s175,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s118,  ...
BitShift1_out1_s176,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s118,  ...
BitShift2_out1_s177,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s173,  ...
BitShift3_out1_s178,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s172,  ...
BitSlice_out1_s179,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s173,  ...
BitSlice1_out1_s180,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s174,  ...
BitSlice2_out1_s181,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s180,  ...
LogicalOperator_out1_s182,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s179,  ...
LogicalOperator1_out1_s183,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s181,  ...
LogicalOperator2_out1_s184,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s186, LogicalOperator2_out1_s184 ],  ...
LogicalOperator3_out1_s185,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s183, BitSlice1_out1_s180 ],  ...
LogicalOperator4_out1_s186,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s176, Add_out1_s172 ],  ...
Switch_out1_s187,  ...
BitSlice_out1_s179, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s178, Add2_out1_s174 ],  ...
Switch1_out1_s188,  ...
BitSlice2_out1_s181, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s187, Switch1_out1_s188 ],  ...
Switch2_out1_s189,  ...
BitSlice1_out1_s180, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s218, Delay7_out1_s14 ],  ...
Add_out1_s214,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s219, Delay7_out1_s14 ],  ...
Add1_out1_s215,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s218, Delay9_out1_s16 ],  ...
Add2_out1_s216,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_out1_s12, LogicalOperator_out1_s224, LogicalOperator3_out1_s227 ],  ...
BitConcat_out1_s217,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay6_out1_s13,  ...
BitShift1_out1_s218,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay6_out1_s13,  ...
BitShift2_out1_s219,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s215,  ...
BitShift3_out1_s220,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s214,  ...
BitSlice_out1_s221,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s215,  ...
BitSlice1_out1_s222,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s216,  ...
BitSlice2_out1_s223,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s222,  ...
LogicalOperator_out1_s224,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s221,  ...
LogicalOperator1_out1_s225,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s223,  ...
LogicalOperator2_out1_s226,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s228, LogicalOperator2_out1_s226 ],  ...
LogicalOperator3_out1_s227,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s225, BitSlice1_out1_s222 ],  ...
LogicalOperator4_out1_s228,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s218, Add_out1_s214 ],  ...
Switch_out1_s229,  ...
BitSlice_out1_s221, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s220, Add2_out1_s216 ],  ...
Switch1_out1_s230,  ...
BitSlice2_out1_s223, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s229, Switch1_out1_s230 ],  ...
Switch2_out1_s231,  ...
BitSlice1_out1_s222, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s236, Delay2_out1_s199 ],  ...
Add_out1_s232,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s237, Delay2_out1_s199 ],  ...
Add1_out1_s233,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s236, Delay4_out1_s200 ],  ...
Add2_out1_s234,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_out1_s201, LogicalOperator_out1_s242, LogicalOperator3_out1_s245 ],  ...
BitConcat_out1_s235,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s194,  ...
BitShift1_out1_s236,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s194,  ...
BitShift2_out1_s237,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s233,  ...
BitShift3_out1_s238,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s232,  ...
BitSlice_out1_s239,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s233,  ...
BitSlice1_out1_s240,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s234,  ...
BitSlice2_out1_s241,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s240,  ...
LogicalOperator_out1_s242,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s239,  ...
LogicalOperator1_out1_s243,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s241,  ...
LogicalOperator2_out1_s244,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s246, LogicalOperator2_out1_s244 ],  ...
LogicalOperator3_out1_s245,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s243, BitSlice1_out1_s240 ],  ...
LogicalOperator4_out1_s246,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s236, Add_out1_s232 ],  ...
Switch_out1_s247,  ...
BitSlice_out1_s239, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s238, Add2_out1_s234 ],  ...
Switch1_out1_s248,  ...
BitSlice2_out1_s241, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s247, Switch1_out1_s248 ],  ...
Switch2_out1_s249,  ...
BitSlice1_out1_s240, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s254, Delay12_out1_s197 ],  ...
Add_out1_s250,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s255, Delay12_out1_s197 ],  ...
Add1_out1_s251,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s254, Delay14_out1_s198 ],  ...
Add2_out1_s252,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay10_out1_s195, LogicalOperator_out1_s260, LogicalOperator3_out1_s263 ],  ...
BitConcat_out1_s253,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s196,  ...
BitShift1_out1_s254,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s196,  ...
BitShift2_out1_s255,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s251,  ...
BitShift3_out1_s256,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s250,  ...
BitSlice_out1_s257,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s251,  ...
BitSlice1_out1_s258,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s252,  ...
BitSlice2_out1_s259,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s258,  ...
LogicalOperator_out1_s260,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s257,  ...
LogicalOperator1_out1_s261,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s259,  ...
LogicalOperator2_out1_s262,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s264, LogicalOperator2_out1_s262 ],  ...
LogicalOperator3_out1_s263,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s261, BitSlice1_out1_s258 ],  ...
LogicalOperator4_out1_s264,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s254, Add_out1_s250 ],  ...
Switch_out1_s265,  ...
BitSlice_out1_s257, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s256, Add2_out1_s252 ],  ...
Switch1_out1_s266,  ...
BitSlice2_out1_s259, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s265, Switch1_out1_s266 ],  ...
Switch2_out1_s267,  ...
BitSlice1_out1_s258, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s293, Delay8_out1_s15 ],  ...
Add_out1_s289,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s294, Delay8_out1_s15 ],  ...
Add1_out1_s290,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s293, Delay12_out1_s8 ],  ...
Add2_out1_s291,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay11_out1_s7, LogicalOperator_out1_s299, LogicalOperator3_out1_s302 ],  ...
BitConcat_out1_s292,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay4_out1_s11,  ...
BitShift1_out1_s293,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay4_out1_s11,  ...
BitShift2_out1_s294,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s290,  ...
BitShift3_out1_s295,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s289,  ...
BitSlice_out1_s296,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s290,  ...
BitSlice1_out1_s297,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s291,  ...
BitSlice2_out1_s298,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s297,  ...
LogicalOperator_out1_s299,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s296,  ...
LogicalOperator1_out1_s300,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s298,  ...
LogicalOperator2_out1_s301,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s303, LogicalOperator2_out1_s301 ],  ...
LogicalOperator3_out1_s302,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s300, BitSlice1_out1_s297 ],  ...
LogicalOperator4_out1_s303,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s293, Add_out1_s289 ],  ...
Switch_out1_s304,  ...
BitSlice_out1_s296, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s295, Add2_out1_s291 ],  ...
Switch1_out1_s305,  ...
BitSlice2_out1_s298, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s304, Switch1_out1_s305 ],  ...
Switch2_out1_s306,  ...
BitSlice1_out1_s297, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s311, Delay2_out1_s277 ],  ...
Add_out1_s307,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s312, Delay2_out1_s277 ],  ...
Add1_out1_s308,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s311, Delay4_out1_s278 ],  ...
Add2_out1_s309,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay5_out1_s279, LogicalOperator_out1_s317, LogicalOperator3_out1_s320 ],  ...
BitConcat_out1_s310,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s272,  ...
BitShift1_out1_s311,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay1_out1_s272,  ...
BitShift2_out1_s312,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitShiftComp( hN,  ...
Add1_out1_s308,  ...
BitShift3_out1_s313,  ...
'sll', 1, 0, 'Bit Shift3' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s307,  ...
BitSlice_out1_s314,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s308,  ...
BitSlice1_out1_s315,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s309,  ...
BitSlice2_out1_s316,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s315,  ...
LogicalOperator_out1_s317,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s314,  ...
LogicalOperator1_out1_s318,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s316,  ...
LogicalOperator2_out1_s319,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s321, LogicalOperator2_out1_s319 ],  ...
LogicalOperator3_out1_s320,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s318, BitSlice1_out1_s315 ],  ...
LogicalOperator4_out1_s321,  ...
'and', sprintf( 'Logical\nOperator4' ) );


pirelab.getSwitchComp( hN,  ...
[ BitShift1_out1_s311, Add_out1_s307 ],  ...
Switch_out1_s322,  ...
BitSlice_out1_s314, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ BitShift3_out1_s313, Add2_out1_s309 ],  ...
Switch1_out1_s323,  ...
BitSlice2_out1_s316, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Switch_out1_s322, Switch1_out1_s323 ],  ...
Switch2_out1_s324,  ...
BitSlice1_out1_s315, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s329, Delay12_out1_s275 ],  ...
Add_out1_s325,  ...
'Floor', 'Wrap', 'Add', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift2_out1_s330, Delay12_out1_s275 ],  ...
Add1_out1_s326,  ...
'Floor', 'Wrap', 'Add1', pirTyp2, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift1_out1_s329, Delay14_out1_s276 ],  ...
Add2_out1_s327,  ...
'Floor', 'Wrap', 'Add2', pirTyp2, '++' );


pirelab.getBitConcatComp( hN,  ...
[ Delay10_out1_s273, LogicalOperator_out1_s334, LogicalOperator3_out1_s337 ],  ...
BitConcat_out1_s328,  ...
'Bit Concat' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s274,  ...
BitShift1_out1_s329,  ...
'sll', 2, 0, 'Bit Shift1' );


pirelab.getBitShiftComp( hN,  ...
Delay11_out1_s274,  ...
BitShift2_out1_s330,  ...
'sll', 1, 0, 'Bit Shift2' );


pirelab.getBitSliceComp( hN,  ...
Add_out1_s325,  ...
BitSlice_out1_s331,  ...
36, 36, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
Add1_out1_s326,  ...
BitSlice1_out1_s332,  ...
36, 36, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Add2_out1_s327,  ...
BitSlice2_out1_s333,  ...
36, 36, 'Bit Slice2' );


pirelab.getLogicComp( hN,  ...
BitSlice1_out1_s332,  ...
LogicalOperator_out1_s334,  ...
'not', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
BitSlice_out1_s331,  ...
LogicalOperator1_out1_s335,  ...
'not', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
BitSlice2_out1_s333,  ...
LogicalOperator2_out1_s336,  ...
'not', sprintf( 'Logical\nOperator2' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator4_out1_s338, LogicalOperator2_out1_s336 ],  ...
LogicalOperator3_out1_s337,  ...
'or', sprintf( 'Logical\nOperator3' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator1_out1_s335, BitSlice1_out1_s332 ],  ...
LogicalOperator4_out1_s338,  ...
'and', sprintf( 'Logical\nOperator4' ) );


end 

function hN = createNetwork_n11( ~, hN, slRate1 )
pirTyp1 = pir_sfixpt_t( 37,  - 33 );






hN.addInputPort( 'B' );
B_s0 = addSignal( hN, 'B', pirTyp1, slRate1 );
B_s0.addDriver( hN, 0 );

hN.addOutputPort( '-B' );
B_s0.addReceiver( hN, 0 );

hN.addOutputPort( '-3B' );
Add_out1_s1 = addSignal( hN, 'Add_out1', pirTyp1, slRate1 );
Add_out1_s1.addReceiver( hN, 1 );

BitShift_out1_s2 = addSignal( hN, 'Bit Shift_out1', pirTyp1, slRate1 );


pirelab.getAddComp( hN,  ...
[ BitShift_out1_s2, B_s0 ],  ...
Add_out1_s1,  ...
'Floor', 'Wrap', 'Add', pirTyp1, '++' );


pirelab.getBitShiftComp( hN,  ...
B_s0,  ...
BitShift_out1_s2,  ...
'sll', 1, 0, 'Bit Shift' );


end 

function hN = createNetwork_n10( p, hN, slRate1 )
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp2 = pir_sfixpt_t( 36,  - 33 );
pirTyp7 = pir_sfixpt_t( 37,  - 33 );
pirTyp6 = pir_ufixpt_t( 1, 0 );
pirTyp4 = pir_ufixpt_t( 24, 0 );
pirTyp5 = pir_ufixpt_t( 37, 0 );
pirTyp8 = pir_ufixpt_t( 8, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt3 = numerictype( 0, 24, 0 );
nt2 = numerictype( 0, 8, 0 );




hN.addInputPort( 'exp_out' );
exp_out_s0 = addSignal( hN, 'exp_out', pirTyp1, slRate1 );
exp_out_s0.addDriver( hN, 0 );

hN.addInputPort( 'OneMinusE' );
OneMinusE_s1 = addSignal( hN, 'OneMinusE', pirTyp2, slRate1 );
OneMinusE_s1.addDriver( hN, 1 );

hN.addInputPort( 'OnePlusE' );
OnePlusE_s2 = addSignal( hN, 'OnePlusE', pirTyp2, slRate1 );
OnePlusE_s2.addDriver( hN, 2 );

hN.addInputPort( 'useCubicApprx' );
useCubicApprx_s3 = addSignal( hN, 'useCubicApprx', pirTyp3, slRate1 );
useCubicApprx_s3.addDriver( hN, 3 );

hN.addOutputPort( 'exp_norm' );
Delay_out1_s11 = addSignal( hN, 'Delay_out1', pirTyp1, slRate1 );
Delay_out1_s11.addReceiver( hN, 0 );

hN.addOutputPort( 'mant_norm' );
Switch1_out1_s17 = addSignal( hN, 'Switch1_out1', pirTyp4, slRate1 );
Switch1_out1_s17.addReceiver( hN, 1 );

BitConcat_out1_s4 = addSignal( hN, 'Bit Concat_out1', pirTyp5, slRate1 );
BitConcat1_out1_s5 = addSignal( hN, 'Bit Concat1_out1', pirTyp5, slRate1 );
BitSlice_out1_s6 = addSignal( hN, 'Bit Slice_out1', pirTyp4, slRate1 );
BitSlice1_out1_s7 = addSignal( hN, 'Bit Slice1_out1', pirTyp6, slRate1 );
BitSlice2_out1_s8 = addSignal( hN, 'Bit Slice2_out1', pirTyp6, slRate1 );
DataTypeConversion_out1_s9 = addSignal( hN, 'Data Type Conversion_out1', pirTyp7, slRate1 );
DataTypeConversion1_out1_s10 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp7, slRate1 );
Delay2_out1_s12 = addSignal( hN, 'Delay2_out1', pirTyp4, slRate1 );
Delay3_out1_s13 = addSignal( hN, 'Delay3_out1', pirTyp3, slRate1 );
Subsystem_out1_s14 = addSignal( hN, 'Subsystem_out1', pirTyp7, slRate1 );
Subsystem_out2_s15 = addSignal( hN, 'Subsystem_out2', pirTyp7, slRate1 );
Switch_out1_s16 = addSignal( hN, 'Switch_out1', pirTyp1, slRate1 );
y_s18 = addSignal( hN, 'y', pirTyp4, slRate1 );
rdivide_Long_Div_get_digit_out1_s19 = addSignal( hN, 'rdivide_Long_Div_get_digit_out1', pirTyp1, slRate1 );
rdivide_Long_Div_get_digit_out2_s20 = addSignal( hN, 'rdivide_Long_Div_get_digit_out2', pirTyp6, slRate1 );
rdivide_Long_Div_get_digit_out3_s21 = addSignal( hN, 'rdivide_Long_Div_get_digit_out3', pirTyp7, slRate1 );
BitShift_out1_s25 = addSignal( hN, 'Bit Shift_out1', pirTyp7, slRate1 );
BitSlice_out1_s26 = addSignal( hN, 'Bit Slice_out1', pirTyp6, slRate1 );
Constant_out1_s27 = addSignal( hN, 'Constant_out1', pirTyp6, slRate1 );
Constant1_out1_s28 = addSignal( hN, 'Constant1_out1', pirTyp1, slRate1 );
R_Mant_b_norm_out1_s29 = addSignal( hN, 'R - mant_b_norm_out1', pirTyp7, slRate1 );
R_Mant_b_norm1_out1_s30 = addSignal( hN, 'R - mant_b_norm1_out1', pirTyp7, slRate1 );
Switch_out1_s31 = addSignal( hN, 'Switch_out1', pirTyp7, slRate1 );
Switch1_out1_s32 = addSignal( hN, 'Switch1_out1', pirTyp1, slRate1 );
exp_1_out1_s33 = addSignal( hN, 'exp - 1_out1', pirTyp1, slRate1 );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide/Subsystem' );
Subsystem = hN.addComponent( 'ntwk_instance_comp', hRefN );
Subsystem.Name = 'Subsystem';
pirelab.connectNtwkInstComp( Subsystem,  ...
DataTypeConversion1_out1_s10,  ...
[ Subsystem_out1_s14, Subsystem_out2_s15 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide/rdivide_Long_Div_Radix4' );
rdivide_Long_Div_Radix4 = hN.addComponent( 'ntwk_instance_comp', hRefN );
rdivide_Long_Div_Radix4.Name = 'rdivide_Long_Div_Radix4';
pirelab.connectNtwkInstComp( rdivide_Long_Div_Radix4,  ...
[ rdivide_Long_Div_get_digit_out2_s20, rdivide_Long_Div_get_digit_out3_s21, Subsystem_out1_s14, Subsystem_out2_s15 ],  ...
y_s18 );


if ( transformnfp.MinLatencyDelay1 > 0 )
MDelay6_12 = transformnfp.Delay12;
else 
MDelay6_12 = transformnfp.Delay6;
end 


pirelab.getConstComp( hN,  ...
Constant_out1_s27,  ...
fi( 0, nt1, fiMath1, 'hex', '1' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s28,  ...
fi( 0, nt2, fiMath1, 'hex', '01' ),  ...
'Constant1', 'on', 0, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
Switch_out1_s16,  ...
Delay_out1_s11,  ...
MDelay6_12, 'Delay',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
BitSlice_out1_s6,  ...
Delay2_out1_s12,  ...
MDelay6_12, 'Delay2',  ...
fi( 0, nt3, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
useCubicApprx_s3,  ...
Delay3_out1_s13,  ...
MDelay6_12, 'Delay3',  ...
false,  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
Switch1_out1_s32,  ...
rdivide_Long_Div_get_digit_out1_s19,  ...
'rdivide_Long_Div_get_digit_out1' );

pirelab.getWireComp( hN,  ...
Constant_out1_s27,  ...
rdivide_Long_Div_get_digit_out2_s20,  ...
'rdivide_Long_Div_get_digit_out2' );

pirelab.getWireComp( hN,  ...
Switch_out1_s31,  ...
rdivide_Long_Div_get_digit_out3_s21,  ...
'rdivide_Long_Div_get_digit_out3' );


pirelab.getBitConcatComp( hN,  ...
[ BitSlice1_out1_s7, OneMinusE_s1 ],  ...
BitConcat_out1_s4,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ BitSlice2_out1_s8, OnePlusE_s2 ],  ...
BitConcat1_out1_s5,  ...
'Bit Concat1' );


pirelab.getBitSliceComp( hN,  ...
OneMinusE_s1,  ...
BitSlice_out1_s6,  ...
32, 9, 'Bit Slice' );


pirelab.getBitSliceComp( hN,  ...
OneMinusE_s1,  ...
BitSlice1_out1_s7,  ...
35, 35, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
OnePlusE_s2,  ...
BitSlice2_out1_s8,  ...
35, 35, 'Bit Slice2' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s4,  ...
DataTypeConversion_out1_s9,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s5,  ...
DataTypeConversion1_out1_s10,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion1' );


pirelab.getSwitchComp( hN,  ...
[ exp_out_s0, rdivide_Long_Div_get_digit_out1_s19 ],  ...
Switch_out1_s16,  ...
useCubicApprx_s3, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay2_out1_s12, y_s18 ],  ...
Switch1_out1_s17,  ...
Delay3_out1_s13, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getBitShiftComp( hN,  ...
DataTypeConversion_out1_s9,  ...
BitShift_out1_s25,  ...
'sll', 1, 0, 'Bit Shift' );


pirelab.getBitSliceComp( hN,  ...
R_Mant_b_norm_out1_s29,  ...
BitSlice_out1_s26,  ...
36, 36, 'Bit Slice' );


pirelab.getAddComp( hN,  ...
[ DataTypeConversion_out1_s9, DataTypeConversion1_out1_s10 ],  ...
R_Mant_b_norm_out1_s29,  ...
'Floor', 'Wrap', 'R - mant_b_norm', pirTyp7, '++' );


pirelab.getAddComp( hN,  ...
[ BitShift_out1_s25, DataTypeConversion1_out1_s10 ],  ...
R_Mant_b_norm1_out1_s30,  ...
'Floor', 'Wrap', 'R - mant_b_norm1', pirTyp7, '++' );


pirelab.getSwitchComp( hN,  ...
[ R_Mant_b_norm1_out1_s30, R_Mant_b_norm_out1_s29 ],  ...
Switch_out1_s31,  ...
BitSlice_out1_s26, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ exp_1_out1_s33, exp_out_s0 ],  ...
Switch1_out1_s32,  ...
BitSlice_out1_s26, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getAddComp( hN,  ...
[ exp_out_s0, Constant1_out1_s28 ],  ...
exp_1_out1_s33,  ...
'Floor', 'Wrap', 'exp - 1', pirTyp8, '+-' );


end 

function hN = createNetwork_n9( ~, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp14 = pir_sfixpt_t( 11, 0 );
pirTyp6 = pir_sfixpt_t( 36,  - 33 );
pirTyp12 = pir_ufixpt_t( 1, 0 );
pirTyp9 = pir_ufixpt_t( 11, 0 );
pirTyp8 = pir_ufixpt_t( 2, 0 );
pirTyp3 = pir_ufixpt_t( 24,  - 23 );
pirTyp7 = pir_ufixpt_t( 3, 0 );
pirTyp2 = pir_ufixpt_t( 34,  - 33 );
pirTyp10 = pir_ufixpt_t( 36, 0 );
pirTyp5 = pir_ufixpt_t( 39,  - 33 );
pirTyp11 = pir_ufixpt_t( 42, 0 );
pirTyp13 = pir_ufixpt_t( 6, 0 );
pirTyp15 = pir_ufixpt_t( 8, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt6 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 2, 0 );
nt7 = numerictype( 0, 24, 23 );
nt1 = numerictype( 0, 3, 0 );
nt4 = numerictype( 0, 39, 33 );
nt5 = numerictype( 0, 6, 0 );
nt3 = numerictype( 0, 8, 0 );
nt9 = numerictype( 1, 11, 0 );
nt8 = numerictype( 1, 36, 33 );




hN.addInputPort( 'exp_cor' );
exp_cor_s0 = addSignal( hN, 'exp_cor', pirTyp1, slRate1 );
exp_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_cor' );
mant_cor_s1 = addSignal( hN, 'mant_cor', pirTyp2, slRate1 );
mant_cor_s1.addDriver( hN, 1 );

hN.addInputPort( 'exp_out' );
exp_out_s2 = addSignal( hN, 'exp_out', pirTyp1, slRate1 );
exp_out_s2.addDriver( hN, 2 );

hN.addInputPort( 'mant_cor1' );
mant_cor1_s3 = addSignal( hN, 'mant_cor1', pirTyp3, slRate1 );
mant_cor1_s3.addDriver( hN, 3 );

hN.addInputPort( 'useCubicApprx' );
useCubicApprx_s4 = addSignal( hN, 'useCubicApprx', pirTyp4, slRate1 );
useCubicApprx_s4.addDriver( hN, 4 );

hN.addOutputPort( 'mant_ext' );
if_shift_sign__out1_s33 = addSignal( hN, 'if (shift_sign)_out1', pirTyp5, slRate1 );
if_shift_sign__out1_s33.addReceiver( hN, 0 );

hN.addOutputPort( 'exp_out_Cubic' );
Delay2_out1_s17 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Delay2_out1_s17.addReceiver( hN, 1 );

hN.addOutputPort( 'shift_length_Cubic' );
cast_cfType_ExponentBias__lik___2_out1_s31 = addSignal( hN, 'cast(cfType.ExponentBias, lik...   2_out1', pirTyp1, slRate1 );
cast_cfType_ExponentBias__lik___2_out1_s31.addReceiver( hN, 2 );

hN.addOutputPort( 'mant_cor2' );
Delay8_out1_s22 = addSignal( hN, 'Delay8_out1', pirTyp3, slRate1 );
Delay8_out1_s22.addReceiver( hN, 3 );

hN.addOutputPort( 'mant_squared' );
Delay9_out1_s23 = addSignal( hN, 'Delay9_out1', pirTyp6, slRate1 );
Delay9_out1_s23.addReceiver( hN, 4 );

hN.addOutputPort( 'useCubicApprx1' );
Delay6_out1_s20 = addSignal( hN, 'Delay6_out1', pirTyp4, slRate1 );
Delay6_out1_s20.addReceiver( hN, 5 );

x0_out1_s5 = addSignal( hN, '0_out1', pirTyp7, slRate1 );
x1_out1_s6 = addSignal( hN, '1_out1', pirTyp8, slRate1 );
x3_out1_s7 = addSignal( hN, '3_out1', pirTyp1, slRate1 );
BitConcat_out1_s8 = addSignal( hN, 'Bit Concat_out1', pirTyp9, slRate1 );
BitConcat1_out1_s9 = addSignal( hN, 'Bit Concat1_out1', pirTyp10, slRate1 );
BitConcat3_out1_s10 = addSignal( hN, 'Bit Concat3_out1', pirTyp11, slRate1 );
BitSlice_out1_s11 = addSignal( hN, 'BitSlice_out1', pirTyp12, slRate1 );
DTC1_out1_s12 = addSignal( hN, 'DTC1_out1', pirTyp13, slRate1 );
DTC2_out1_s13 = addSignal( hN, 'DTC2_out1', pirTyp13, slRate1 );
Delay_out1_s14 = addSignal( hN, 'Delay_out1', pirTyp5, slRate1 );
Delay1_out1_s15 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay10_out1_s16 = addSignal( hN, 'Delay10_out1', pirTyp13, slRate1 );
Delay3_out1_s18 = addSignal( hN, 'Delay3_out1', pirTyp12, slRate1 );
Delay5_out1_s19 = addSignal( hN, 'Delay5_out1', pirTyp13, slRate1 );
Delay7_out1_s21 = addSignal( hN, 'Delay7_out1', pirTyp1, slRate1 );
ShiftArithmetic_out1_s24 = addSignal( hN, sprintf( 'Shift\nArithmetic_out1' ), pirTyp5, slRate1 );
bitsll_tmp1_Shift_length__out1_s25 = addSignal( hN, 'bitsll(tmp1, shift_length)_out1', pirTyp5, slRate1 );
cast_cfType_ExponentBias__lik____out1_s26 = addSignal( hN, 'cast(cfType.ExponentBias, lik... _out1', pirTyp14, slRate1 );
cast_cfType_ExponentBias__lik____out1_s27 = addSignal( hN, 'cast(cfType.ExponentBias, lik...   _out1', pirTyp1, slRate1 );
cast_cfType_ExponentBias__lik____out1_s28 = addSignal( hN, 'cast(cfType.ExponentBias, lik...    _out1', pirTyp1, slRate1 );
cast_cfType_ExponentBias__lik___1_out1_s29 = addSignal( hN, 'cast(cfType.ExponentBias, lik...    1_out1', pirTyp1, slRate1 );
cast_cfType_ExponentBias__lik___1_out1_s30 = addSignal( hN, 'cast(cfType.ExponentBias, lik...   1_out1', pirTyp1, slRate1 );
exp_tmp_Cast_cfType_Exponent____out1_s32 = addSignal( hN, 'exp_tmp - cast(cfType.Exponent..._out1', pirTyp14, slRate1 );
reinterpretcast_bitconcat_fi_0_____out1_s34 = addSignal( hN, 'reinterpretcast(bitconcat(fi(0...  : _out1', pirTyp5, slRate1 );
reinterpretcast_bitconcat_fi_0____1_out1_s35 = addSignal( hN, 'reinterpretcast(bitconcat(fi(0...  : 1_out1', pirTyp6, slRate1 );
reinterpretcast_bitconcat_fi_0_____out1_s36 = addSignal( hN, 'reinterpretcast(bitconcat(fi(0... : _out1', pirTyp14, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s5,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x1_out1_s6,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
x3_out1_s7,  ...
fi( 0, nt3, fiMath1, 'hex', '00' ),  ...
'3', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
reinterpretcast_bitconcat_fi_0_____out1_s34,  ...
Delay_out1_s14,  ...
transformnfp.MinLatencyDelay1, 'Delay',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
cast_cfType_ExponentBias__lik____out1_s27,  ...
Delay1_out1_s15,  ...
transformnfp.MinLatencyDelay1, 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
DTC1_out1_s12,  ...
Delay10_out1_s16,  ...
transformnfp.MinLatencyDelay1, 'Delay10',  ...
fi( 0, nt5, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
exp_out_s2,  ...
Delay2_out1_s17,  ...
transformnfp.MinLatencyDelay1, 'Delay2',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
BitSlice_out1_s11,  ...
Delay3_out1_s18,  ...
transformnfp.MinLatencyDelay1, 'Delay3',  ...
fi( 0, nt6, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
DTC2_out1_s13,  ...
Delay5_out1_s19,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
fi( 0, nt5, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
useCubicApprx_s4,  ...
Delay6_out1_s20,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
cast_cfType_ExponentBias__lik___1_out1_s30,  ...
Delay7_out1_s21,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_cor1_s3,  ...
Delay8_out1_s22,  ...
transformnfp.MinLatencyDelay1, 'Delay8',  ...
fi( 0, nt7, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
reinterpretcast_bitconcat_fi_0____1_out1_s35,  ...
Delay9_out1_s23,  ...
transformnfp.MinLatencyDelay1, 'Delay9',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getConstComp( hN,  ...
cast_cfType_ExponentBias__lik____out1_s26,  ...
fi( 0, nt9, fiMath1, 'hex', '782' ),  ...
'cast(cfType.ExponentBias, lik... ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
cast_cfType_ExponentBias__lik____out1_s28,  ...
fi( 0, nt3, fiMath1, 'hex', '7e' ),  ...
'cast(cfType.ExponentBias, lik...    ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
cast_cfType_ExponentBias__lik___1_out1_s29,  ...
fi( 0, nt3, fiMath1, 'hex', '80' ),  ...
'cast(cfType.ExponentBias, lik...    1', 'on', 0, '', '', '' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s5, exp_cor_s0 ],  ...
BitConcat_out1_s8,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ x1_out1_s6, mant_cor_s1 ],  ...
BitConcat1_out1_s9,  ...
'Bit Concat1' );


pirelab.getBitConcatComp( hN,  ...
[ x3_out1_s7, mant_cor_s1 ],  ...
BitConcat3_out1_s10,  ...
'Bit Concat3' );


pirelab.getBitSliceComp( hN,  ...
exp_tmp_Cast_cfType_Exponent____out1_s32,  ...
BitSlice_out1_s11,  ...
10, 10, 'BitSlice' );


pirelab.getDTCComp( hN,  ...
cast_cfType_ExponentBias__lik____out1_s27,  ...
DTC1_out1_s12,  ...
'Floor', 'Saturate', 'RWV', 'DTC1' );


pirelab.getDTCComp( hN,  ...
exp_tmp_Cast_cfType_Exponent____out1_s32,  ...
DTC2_out1_s13,  ...
'Floor', 'Saturate', 'RWV', 'DTC2' );


pirelab.getDynamicBitShiftComp( hN,  ...
[ Delay_out1_s14, Delay10_out1_s16 ],  ...
ShiftArithmetic_out1_s24,  ...
'right', 'dynamic_shift' );


pirelab.getDynamicBitShiftComp( hN,  ...
[ Delay_out1_s14, Delay5_out1_s19 ],  ...
bitsll_tmp1_Shift_length__out1_s25,  ...
'left', 'dynamic_shift' );


pirelab.getAddComp( hN,  ...
[ cast_cfType_ExponentBias__lik____out1_s28, exp_cor_s0 ],  ...
cast_cfType_ExponentBias__lik____out1_s27,  ...
'Floor', 'Wrap', 'cast(cfType.ExponentBias, lik...   ', pirTyp15, '+-' );


pirelab.getAddComp( hN,  ...
[ cast_cfType_ExponentBias__lik___1_out1_s29, exp_out_s2 ],  ...
cast_cfType_ExponentBias__lik___1_out1_s30,  ...
'Floor', 'Wrap', 'cast(cfType.ExponentBias, lik...   1', pirTyp15, '+-' );


pirelab.getAddComp( hN,  ...
[ Delay1_out1_s15, Delay7_out1_s21 ],  ...
cast_cfType_ExponentBias__lik___2_out1_s31,  ...
'Floor', 'Wrap', 'cast(cfType.ExponentBias, lik...   2', pirTyp15, '++' );


pirelab.getAddComp( hN,  ...
[ reinterpretcast_bitconcat_fi_0_____out1_s36, cast_cfType_ExponentBias__lik____out1_s26 ],  ...
exp_tmp_Cast_cfType_Exponent____out1_s32,  ...
'Floor', 'Wrap', 'exp_tmp - cast(cfType.Exponent...', pirTyp14, '++' );


pirelab.getSwitchComp( hN,  ...
[ ShiftArithmetic_out1_s24, bitsll_tmp1_Shift_length__out1_s25 ],  ...
if_shift_sign__out1_s33,  ...
Delay3_out1_s18, 'if (shift_sign)',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getDTCComp( hN,  ...
BitConcat3_out1_s10,  ...
reinterpretcast_bitconcat_fi_0_____out1_s34,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(bitconcat(fi(0...  : ' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s9,  ...
reinterpretcast_bitconcat_fi_0____1_out1_s35,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(bitconcat(fi(0...  : 1' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s8,  ...
reinterpretcast_bitconcat_fi_0_____out1_s36,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(bitconcat(fi(0... : ' );


end 

function hN = createNetwork_n8( ~, hN, slRate1 )
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp11 = pir_sfixpt_t( 15, 0 );
pirTyp5 = pir_sfixpt_t( 20,  - 18 );
pirTyp15 = pir_sfixpt_t( 21,  - 19 );
pirTyp2 = pir_sfixpt_t( 23,  - 21 );
pirTyp1 = pir_sfixpt_t( 36,  - 33 );
pirTyp8 = pir_ufixpt_t( 1, 0 );
pirTyp14 = pir_ufixpt_t( 10, 0 );
pirTyp12 = pir_ufixpt_t( 14, 0 );
pirTyp13 = pir_ufixpt_t( 2, 0 );
pirTyp9 = pir_ufixpt_t( 20, 0 );
pirTyp10 = pir_ufixpt_t( 22, 0 );
pirTyp7 = pir_ufixpt_t( 23, 0 );
pirTyp4 = pir_ufixpt_t( 24,  - 23 );
pirTyp6 = pir_ufixpt_t( 36, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt6 = numerictype( 0, 1, 0 );
nt5 = numerictype( 0, 10, 0 );
nt3 = numerictype( 0, 14, 0 );
nt4 = numerictype( 0, 2, 0 );
nt9 = numerictype( 0, 24, 23 );
nt2 = numerictype( 1, 15, 0 );
nt1 = numerictype( 1, 20, 18 );
nt10 = numerictype( 1, 21, 19 );
nt7 = numerictype( 1, 23, 21 );
nt8 = numerictype( 1, 36, 33 );




hN.addInputPort( 'y' );
y_s0 = addSignal( hN, 'y', pirTyp1, slRate1 );
y_s0.addDriver( hN, 0 );

hN.addInputPort( 'w' );
w_s1 = addSignal( hN, 'w', pirTyp2, slRate1 );
w_s1.addDriver( hN, 1 );

hN.addInputPort( 'useCubicApprx' );
useCubicApprx_s2 = addSignal( hN, 'useCubicApprx', pirTyp3, slRate1 );
useCubicApprx_s2.addDriver( hN, 2 );

hN.addInputPort( 'mant_squared' );
mant_squared_s3 = addSignal( hN, 'mant_squared', pirTyp1, slRate1 );
mant_squared_s3.addDriver( hN, 3 );

hN.addInputPort( 'mant_cor' );
mant_cor_s4 = addSignal( hN, 'mant_cor', pirTyp4, slRate1 );
mant_cor_s4.addDriver( hN, 4 );

hN.addOutputPort( 'y1' );
Switch2_out1_s45 = addSignal( hN, 'Switch2_out1', pirTyp1, slRate1 );
Switch2_out1_s45.addReceiver( hN, 0 );

hN.addOutputPort( 'useCubicApprx1' );
Delay8_out1_s41 = addSignal( hN, 'Delay8_out1', pirTyp3, slRate1 );
Delay8_out1_s41.addReceiver( hN, 1 );

hN.addOutputPort( 'mant_cor1' );
DataTypeConversion2_out1_s24 = addSignal( hN, 'Data Type Conversion2_out1', pirTyp1, slRate1 );
DataTypeConversion2_out1_s24.addReceiver( hN, 2 );

x_0_33333_out1_s5 = addSignal( hN, '-0.33333_out1', pirTyp5, slRate1 );
x_0_693147182464600_out1_s6 = addSignal( hN, '-0.693147182464600 _out1', pirTyp5, slRate1 );
BitConcat_out1_s7 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitConcat1_out1_s8 = addSignal( hN, 'Bit Concat1_out1', pirTyp6, slRate1 );
BitConcat2_out1_s9 = addSignal( hN, 'Bit Concat2_out1', pirTyp6, slRate1 );
BitConcat3_out1_s10 = addSignal( hN, 'Bit Concat3_out1', pirTyp7, slRate1 );
BitSlice1_out1_s11 = addSignal( hN, 'Bit Slice1_out1', pirTyp8, slRate1 );
BitSlice2_out1_s12 = addSignal( hN, 'Bit Slice2_out1', pirTyp9, slRate1 );
BitSlice3_out1_s13 = addSignal( hN, 'Bit Slice3_out1', pirTyp10, slRate1 );
BitSlice4_out1_s14 = addSignal( hN, 'Bit Slice4_out1', pirTyp8, slRate1 );
Constant_out1_s15 = addSignal( hN, 'Constant_out1', pirTyp11, slRate1 );
Constant1_out1_s16 = addSignal( hN, 'Constant1_out1', pirTyp11, slRate1 );
Constant2_out1_s17 = addSignal( hN, 'Constant2_out1', pirTyp12, slRate1 );
Constant3_out1_s18 = addSignal( hN, 'Constant3_out1', pirTyp13, slRate1 );
Constant4_out1_s19 = addSignal( hN, 'Constant4_out1', pirTyp14, slRate1 );
Constant5_out1_s20 = addSignal( hN, 'Constant5_out1', pirTyp8, slRate1 );
DTC1_out1_s21 = addSignal( hN, 'DTC1_out1', pirTyp1, slRate1 );
DTC2_out1_s22 = addSignal( hN, 'DTC2_out1', pirTyp1, slRate1 );
DataTypeConversion1_out1_s23 = addSignal( hN, 'Data Type Conversion1_out1', pirTyp5, slRate1 );
DataTypeConversion3_out1_s25 = addSignal( hN, 'Data Type Conversion3_out1', pirTyp2, slRate1 );
Delay_out1_s26 = addSignal( hN, 'Delay_out1', pirTyp2, slRate1 );
Delay1_out1_s27 = addSignal( hN, 'Delay1_out1', pirTyp1, slRate1 );
Delay10_out1_s28 = addSignal( hN, 'Delay10_out1', pirTyp4, slRate1 );
Delay11_out1_s29 = addSignal( hN, 'Delay11_out1', pirTyp4, slRate1 );
Delay12_out1_s30 = addSignal( hN, 'Delay12_out1', pirTyp4, slRate1 );
Delay13_out1_s31 = addSignal( hN, 'Delay13_out1', pirTyp4, slRate1 );
Delay2_out1_s32 = addSignal( hN, 'Delay2_out1', pirTyp1, slRate1 );
Delay21_out1_s33 = addSignal( hN, 'Delay21_out1', pirTyp1, slRate1 );
Delay22_out1_s34 = addSignal( hN, 'Delay22_out1', pirTyp2, slRate1 );
Delay3_out1_s35 = addSignal( hN, 'Delay3_out1', pirTyp15, slRate1 );
Delay39_out1_s36 = addSignal( hN, 'Delay39_out1', pirTyp1, slRate1 );
Delay4_out1_s37 = addSignal( hN, 'Delay4_out1', pirTyp5, slRate1 );
Delay5_out1_s38 = addSignal( hN, 'Delay5_out1', pirTyp3, slRate1 );
Delay6_out1_s39 = addSignal( hN, 'Delay6_out1', pirTyp3, slRate1 );
Delay7_out1_s40 = addSignal( hN, 'Delay7_out1', pirTyp3, slRate1 );
Delay9_out1_s42 = addSignal( hN, 'Delay9_out1', pirTyp1, slRate1 );
Switch_out1_s43 = addSignal( hN, 'Switch_out1', pirTyp11, slRate1 );
Switch1_out1_s44 = addSignal( hN, 'Switch1_out1', pirTyp1, slRate1 );
Switch3_out1_s46 = addSignal( hN, 'Switch3_out1', pirTyp5, slRate1 );
Switch4_out1_s47 = addSignal( hN, 'Switch4_out1', pirTyp2, slRate1 );
UnaryMinus_out1_s48 = addSignal( hN, 'Unary Minus_out1', pirTyp1, slRate1 );
tmp1_0_69314717873930931_out1_s49 = addSignal( hN, 'tmp1*0.69314717873930931_out1', pirTyp2, slRate1 );
tmp2_y_out1_s50 = addSignal( hN, 'tmp2*y_out1', pirTyp15, slRate1 );
y_Tmp3_out1_s51 = addSignal( hN, 'y + tmp3_out1', pirTyp1, slRate1 );


pirelab.getConstComp( hN,  ...
x_0_33333_out1_s5,  ...
fi( 0, nt1, fiMath1, 'hex', 'eaaab' ),  ...
'-0.33333', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
x_0_693147182464600_out1_s6,  ...
fi( 0, nt1, fiMath1, 'hex', 'd3a38' ),  ...
'-0.693147182464600 ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant_out1_s15,  ...
fi( 0, nt2, fiMath1, 'hex', '7fff' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s16,  ...
fi( 0, nt2, fiMath1, 'hex', '0000' ),  ...
'Constant1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant2_out1_s17,  ...
fi( 0, nt3, fiMath1, 'hex', '0000' ),  ...
'Constant2', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant3_out1_s18,  ...
fi( 0, nt4, fiMath1, 'hex', '0' ),  ...
'Constant3', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant4_out1_s19,  ...
fi( 0, nt5, fiMath1, 'hex', '000' ),  ...
'Constant4', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant5_out1_s20,  ...
fi( 0, nt6, fiMath1, 'hex', '0' ),  ...
'Constant5', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
tmp1_0_69314717873930931_out1_s49,  ...
Delay_out1_s26,  ...
transformnfp.Delay2, 'Delay',  ...
fi( 0, nt7, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay21_out1_s33,  ...
Delay1_out1_s27,  ...
transformnfp.Delay2, 'Delay1',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
mant_cor_s4,  ...
Delay10_out1_s28,  ...
transformnfp.MinLatencyDelay1, 'Delay10',  ...
fi( 0, nt9, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay10_out1_s28,  ...
Delay11_out1_s29,  ...
transformnfp.Delay2, 'Delay11',  ...
fi( 0, nt9, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay11_out1_s29,  ...
Delay12_out1_s30,  ...
transformnfp.Delay2, 'Delay12',  ...
fi( 0, nt9, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay12_out1_s30,  ...
Delay13_out1_s31,  ...
transformnfp.Delay1, 'Delay13',  ...
fi( 0, nt9, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
UnaryMinus_out1_s48,  ...
Delay2_out1_s32,  ...
transformnfp.Delay2, 'Delay2',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch1_out1_s44,  ...
Delay21_out1_s33,  ...
transformnfp.MinLatencyDelay1, 'Delay21',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch4_out1_s47,  ...
Delay22_out1_s34,  ...
transformnfp.MinLatencyDelay1, 'Delay22',  ...
fi( 0, nt7, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tmp2_y_out1_s50,  ...
Delay3_out1_s35,  ...
transformnfp.Delay2, 'Delay3',  ...
fi( 0, nt10, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
y_Tmp3_out1_s51,  ...
Delay39_out1_s36,  ...
transformnfp.Delay1, 'Delay39',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch3_out1_s46,  ...
Delay4_out1_s37,  ...
transformnfp.MinLatencyDelay1, 'Delay4',  ...
fi( 0, nt1, fiMath1, 'hex', '00000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
useCubicApprx_s2,  ...
Delay5_out1_s38,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay5_out1_s38,  ...
Delay6_out1_s39,  ...
transformnfp.Delay2, 'Delay6',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay6_out1_s39,  ...
Delay7_out1_s40,  ...
transformnfp.Delay2, 'Delay7',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay7_out1_s40,  ...
Delay8_out1_s41,  ...
transformnfp.Delay1, 'Delay8',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
DTC1_out1_s21,  ...
Delay9_out1_s42,  ...
transformnfp.Delay1, 'Delay9',  ...
fi( 0, nt8, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getBitConcatComp( hN,  ...
[ Switch_out1_s43, Delay3_out1_s35 ],  ...
BitConcat_out1_s7,  ...
'Bit Concat' );


pirelab.getBitConcatComp( hN,  ...
[ BitSlice4_out1_s14, Delay3_out1_s35, Constant2_out1_s17 ],  ...
BitConcat1_out1_s8,  ...
'Bit Concat1' );


pirelab.getBitConcatComp( hN,  ...
[ Constant3_out1_s18, Delay13_out1_s31, Constant4_out1_s19 ],  ...
BitConcat2_out1_s9,  ...
'Bit Concat2' );


pirelab.getBitConcatComp( hN,  ...
[ Constant5_out1_s20, BitSlice3_out1_s13 ],  ...
BitConcat3_out1_s10,  ...
'Bit Concat3' );


pirelab.getBitSliceComp( hN,  ...
Delay3_out1_s35,  ...
BitSlice1_out1_s11,  ...
20, 20, 'Bit Slice1' );


pirelab.getBitSliceComp( hN,  ...
Delay1_out1_s27,  ...
BitSlice2_out1_s12,  ...
34, 15, 'Bit Slice2' );


pirelab.getBitSliceComp( hN,  ...
mant_cor_s4,  ...
BitSlice3_out1_s13,  ...
23, 2, 'Bit Slice3' );


pirelab.getBitSliceComp( hN,  ...
Delay3_out1_s35,  ...
BitSlice4_out1_s14,  ...
20, 20, 'Bit Slice4' );


pirelab.getDTCComp( hN,  ...
BitConcat1_out1_s8,  ...
DTC1_out1_s21,  ...
'Floor', 'Wrap', 'SI', 'DTC1' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s7,  ...
DTC2_out1_s22,  ...
'Floor', 'Wrap', 'SI', 'DTC2' );


pirelab.getDTCComp( hN,  ...
BitSlice2_out1_s12,  ...
DataTypeConversion1_out1_s23,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion1' );


pirelab.getDTCComp( hN,  ...
BitConcat2_out1_s9,  ...
DataTypeConversion2_out1_s24,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion2' );


pirelab.getDTCComp( hN,  ...
BitConcat3_out1_s10,  ...
DataTypeConversion3_out1_s25,  ...
'Floor', 'Wrap', 'SI', 'Data Type Conversion3' );


pirelab.getSwitchComp( hN,  ...
[ Constant_out1_s15, Constant1_out1_s16 ],  ...
Switch_out1_s43,  ...
BitSlice1_out1_s11, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ mant_squared_s3, y_s0 ],  ...
Switch1_out1_s44,  ...
useCubicApprx_s2, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay9_out1_s42, Delay39_out1_s36 ],  ...
Switch2_out1_s45,  ...
Delay8_out1_s41, 'Switch2',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ x_0_33333_out1_s5, x_0_693147182464600_out1_s6 ],  ...
Switch3_out1_s46,  ...
useCubicApprx_s2, 'Switch3',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ DataTypeConversion3_out1_s25, w_s1 ],  ...
Switch4_out1_s47,  ...
useCubicApprx_s2, 'Switch4',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getUnaryMinusComp( hN,  ...
Delay1_out1_s27,  ...
UnaryMinus_out1_s48,  ...
'Wrap', 'Unary Minus' );


pirelab.getMulComp( hN,  ...
[ Delay22_out1_s34, Delay4_out1_s37 ],  ...
tmp1_0_69314717873930931_out1_s49,  ...
'Floor', 'Wrap', 'tmp1*0.69314717873930931', '**', '',  - 1, 0 );


pirelab.getMulComp( hN,  ...
[ DataTypeConversion1_out1_s23, Delay_out1_s26 ],  ...
tmp2_y_out1_s50,  ...
'Floor', 'Wrap', 'tmp2*y', '**', '',  - 1, 0 );


pirelab.getAddComp( hN,  ...
[ Delay2_out1_s32, DTC2_out1_s22 ],  ...
y_Tmp3_out1_s51,  ...
'Floor', 'Wrap', 'y + tmp3', pirTyp1, '++' );


end 

function hN = createNetwork_n7( ~, hN, slRate1 )
pirTyp3 = pir_ufixpt_t( 1, 0 );
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp4 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 24, 0 );
pirTyp6 = pir_ufixpt_t( 25, 0 );
pirTyp8 = pir_ufixpt_t( 32, 0 );
pirTyp7 = pir_ufixpt_t( 8, 0 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 23, 0 );
nt4 = numerictype( 0, 25, 0 );
nt3 = numerictype( 0, 8, 0 );




hN.addInputPort( 'Exp' );
Exp_s0 = addSignal( hN, 'Exp', pirTyp1, slRate1 );
Exp_s0.addDriver( hN, 0 );

hN.addInputPort( 'MantExtended' );
MantExtended_s1 = addSignal( hN, 'MantExtended', pirTyp2, slRate1 );
MantExtended_s1.addDriver( hN, 1 );

hN.addInputPort( 'sticky' );
sticky_s2 = addSignal( hN, 'sticky', pirTyp3, slRate1 );
sticky_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Exp1' );
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s17 = addSignal( hN, 'if (bitget(Mant_tmp, Mant_tmp.Wor..._out1', pirTyp1, slRate1 );
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s17.addReceiver( hN, 0 );

hN.addOutputPort( 'MantRounded' );
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s18 = addSignal( hN, 'if (bitget(Mant_tmp, Mant_tmp.Wor...1_out1', pirTyp4, slRate1 );
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s18.addReceiver( hN, 1 );

x_bitget_Mant_tmp_1___0_______out1_s3 = addSignal( hN, '(bitget(Mant_tmp, 1) ~= 0) && ..._out1', pirTyp3, slRate1 );
x_bitget_Mant_tmp_2___0_______out1_s4 = addSignal( hN, '(bitget(Mant_tmp, 2) ~= 0) || ..._out1', pirTyp3, slRate1 );
x0_out1_s5 = addSignal( hN, '0_out1', pirTyp5, slRate1 );
BitConcat_out1_s6 = addSignal( hN, 'Bit Concat_out1', pirTyp6, slRate1 );
BitSlice_out1_s7 = addSignal( hN, 'BitSlice_out1', pirTyp5, slRate1 );
BitSlice1_out1_s8 = addSignal( hN, 'BitSlice1_out1', pirTyp5, slRate1 );
BitSlice2_out1_s9 = addSignal( hN, 'BitSlice2_out1', pirTyp5, slRate1 );
BitSlice3_out1_s10 = addSignal( hN, 'BitSlice3_out1', pirTyp4, slRate1 );
C_out1_s11 = addSignal( hN, 'C_out1', pirTyp4, slRate1 );
Exp_Cast_1__like__Exp__out1_s12 = addSignal( hN, 'Exp + cast(1, like, Exp)_out1', pirTyp1, slRate1 );
Mant_tmp_Cast_2__like__Man____out1_s13 = addSignal( hN, 'Mant_tmp + cast(2, like, Man..._out1', pirTyp6, slRate1 );
cast_1__like__Exp__out1_s14 = addSignal( hN, 'cast(1, like, Exp) _out1', pirTyp1, slRate1 );
cast_2__like__Mant_tmp__out1_s15 = addSignal( hN, 'cast(2, like, Mant_tmp) _out1', pirTyp6, slRate1 );
if_bitget_Mant_tmp_1___0_______out1_s16 = addSignal( hN, 'if (bitget(Mant_tmp, 1) ~= 0) && ... _out1', pirTyp6, slRate1 );


pirelab.getConstComp( hN,  ...
x0_out1_s5,  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
'0', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
C_out1_s11,  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
'C', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
cast_1__like__Exp__out1_s14,  ...
fi( 0, nt3, fiMath1, 'hex', '01' ),  ...
'cast(1, like, Exp) ', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
cast_2__like__Mant_tmp__out1_s15,  ...
fi( 0, nt4, fiMath1, 'hex', '0000002' ),  ...
'cast(2, like, Mant_tmp) ', 'on', 0, '', '', '' );


pirelab.getLogicComp( hN,  ...
[ BitSlice_out1_s7, x_bitget_Mant_tmp_2___0_______out1_s4 ],  ...
x_bitget_Mant_tmp_1___0_______out1_s3,  ...
'and', '(bitget(Mant_tmp, 1) ~= 0) && ...' );


pirelab.getLogicComp( hN,  ...
[ BitSlice1_out1_s8, sticky_s2 ],  ...
x_bitget_Mant_tmp_2___0_______out1_s4,  ...
'or', '(bitget(Mant_tmp, 2) ~= 0) || ...' );


pirelab.getBitConcatComp( hN,  ...
[ x0_out1_s5, MantExtended_s1 ],  ...
BitConcat_out1_s6,  ...
'Bit Concat' );


pirelab.getBitSliceComp( hN,  ...
BitConcat_out1_s6,  ...
BitSlice_out1_s7,  ...
0, 0, 'BitSlice' );


pirelab.getBitSliceComp( hN,  ...
BitConcat_out1_s6,  ...
BitSlice1_out1_s8,  ...
1, 1, 'BitSlice1' );


pirelab.getBitSliceComp( hN,  ...
if_bitget_Mant_tmp_1___0_______out1_s16,  ...
BitSlice2_out1_s9,  ...
24, 24, 'BitSlice2' );


pirelab.getBitSliceComp( hN,  ...
if_bitget_Mant_tmp_1___0_______out1_s16,  ...
BitSlice3_out1_s10,  ...
23, 1, 'BitSlice3' );


pirelab.getAddComp( hN,  ...
[ Exp_s0, cast_1__like__Exp__out1_s14 ],  ...
Exp_Cast_1__like__Exp__out1_s12,  ...
'Floor', 'Wrap', 'Exp + cast(1, like, Exp)', pirTyp7, '++' );


pirelab.getAddComp( hN,  ...
[ BitConcat_out1_s6, cast_2__like__Mant_tmp__out1_s15 ],  ...
Mant_tmp_Cast_2__like__Man____out1_s13,  ...
'Floor', 'Wrap', 'Mant_tmp + cast(2, like, Man...', pirTyp8, '++' );


pirelab.getSwitchComp( hN,  ...
[ Mant_tmp_Cast_2__like__Man____out1_s13, BitConcat_out1_s6 ],  ...
if_bitget_Mant_tmp_1___0_______out1_s16,  ...
x_bitget_Mant_tmp_1___0_______out1_s3, 'if (bitget(Mant_tmp, 1) ~= 0) && ... ',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Exp_Cast_1__like__Exp__out1_s12, Exp_s0 ],  ...
if_bitget_Mant_tmp_Mant_tmp_Wor____out1_s17,  ...
BitSlice2_out1_s9, 'if (bitget(Mant_tmp, Mant_tmp.Wor...',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ C_out1_s11, BitSlice3_out1_s10 ],  ...
if_bitget_Mant_tmp_Mant_tmp_Wor___1_out1_s18,  ...
BitSlice2_out1_s9, 'if (bitget(Mant_tmp, Mant_tmp.Wor...1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hN = createNetwork_n6( p, hN, slRate1 )
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp10 = pir_sfixpt_t( 23,  - 21 );
pirTyp6 = pir_sfixpt_t( 36,  - 33 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp7 = pir_ufixpt_t( 24, 0 );
pirTyp2 = pir_ufixpt_t( 24,  - 23 );
pirTyp9 = pir_ufixpt_t( 34,  - 33 );
pirTyp4 = pir_ufixpt_t( 35,  - 33 );
pirTyp8 = pir_ufixpt_t( 39,  - 33 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt3 = numerictype( 0, 24, 0 );
nt5 = numerictype( 0, 24, 23 );
nt1 = numerictype( 0, 35, 33 );
nt4 = numerictype( 0, 39, 33 );
nt2 = numerictype( 1, 36, 33 );




hN.addInputPort( 'exp_cor' );
exp_cor_s0 = addSignal( hN, 'exp_cor', pirTyp1, slRate1 );
exp_cor_s0.addDriver( hN, 0 );

hN.addInputPort( 'mant_cor' );
mant_cor_s1 = addSignal( hN, 'mant_cor', pirTyp2, slRate1 );
mant_cor_s1.addDriver( hN, 1 );

hN.addOutputPort( 'Exponent' );
Rounding_out1_s47 = addSignal( hN, 'Rounding_out1', pirTyp1, slRate1 );
Rounding_out1_s47.addReceiver( hN, 0 );

hN.addOutputPort( 'Mantissa' );
Rounding_out2_s48 = addSignal( hN, 'Rounding_out2', pirTyp3, slRate1 );
Rounding_out2_s48.addReceiver( hN, 1 );

Delay1_out1_s2 = addSignal( hN, 'Delay1_out1', pirTyp4, slRate1 );
Delay10_out1_s3 = addSignal( hN, 'Delay10_out1', pirTyp1, slRate1 );
Delay11_out1_s4 = addSignal( hN, 'Delay11_out1', pirTyp5, slRate1 );
Delay12_out1_s5 = addSignal( hN, 'Delay12_out1', pirTyp5, slRate1 );
Delay13_out1_s6 = addSignal( hN, 'Delay13_out1', pirTyp1, slRate1 );
Delay14_out1_s7 = addSignal( hN, 'Delay14_out1', pirTyp6, slRate1 );
Delay15_out1_s8 = addSignal( hN, 'Delay15_out1', pirTyp5, slRate1 );
Delay16_out1_s9 = addSignal( hN, 'Delay16_out1', pirTyp1, slRate1 );
Delay17_out1_s10 = addSignal( hN, 'Delay17_out1', pirTyp1, slRate1 );
Delay18_out1_s11 = addSignal( hN, 'Delay18_out1', pirTyp1, slRate1 );
Delay19_out1_s12 = addSignal( hN, 'Delay19_out1', pirTyp5, slRate1 );
Delay2_out1_s13 = addSignal( hN, 'Delay2_out1', pirTyp5, slRate1 );
Delay20_out1_s14 = addSignal( hN, 'Delay20_out1', pirTyp1, slRate1 );
Delay21_out1_s15 = addSignal( hN, 'Delay21_out1', pirTyp5, slRate1 );
Delay22_out1_s16 = addSignal( hN, 'Delay22_out1', pirTyp5, slRate1 );
Delay23_out1_s17 = addSignal( hN, 'Delay23_out1', pirTyp1, slRate1 );
Delay24_out1_s18 = addSignal( hN, 'Delay24_out1', pirTyp1, slRate1 );
Delay25_out1_s19 = addSignal( hN, 'Delay25_out1', pirTyp7, slRate1 );
Delay26_out1_s20 = addSignal( hN, 'Delay26_out1', pirTyp1, slRate1 );
Delay27_out1_s21 = addSignal( hN, 'Delay27_out1', pirTyp1, slRate1 );
Delay28_out1_s22 = addSignal( hN, 'Delay28_out1', pirTyp5, slRate1 );
Delay29_out1_s23 = addSignal( hN, 'Delay29_out1', pirTyp1, slRate1 );
Delay3_out1_s24 = addSignal( hN, 'Delay3_out1', pirTyp8, slRate1 );
Delay30_out1_s25 = addSignal( hN, 'Delay30_out1', pirTyp1, slRate1 );
Delay31_out1_s26 = addSignal( hN, 'Delay31_out1', pirTyp5, slRate1 );
Delay32_out1_s27 = addSignal( hN, 'Delay32_out1', pirTyp1, slRate1 );
Delay34_out1_s28 = addSignal( hN, 'Delay34_out1', pirTyp2, slRate1 );
Delay37_out1_s29 = addSignal( hN, 'Delay37_out1', pirTyp5, slRate1 );
Delay4_out1_s30 = addSignal( hN, 'Delay4_out1', pirTyp1, slRate1 );
Delay40_out1_s31 = addSignal( hN, 'Delay40_out1', pirTyp6, slRate1 );
Delay41_out1_s32 = addSignal( hN, 'Delay41_out1', pirTyp5, slRate1 );
Delay42_out1_s33 = addSignal( hN, 'Delay42_out1', pirTyp6, slRate1 );
Delay43_out1_s34 = addSignal( hN, 'Delay43_out1', pirTyp6, slRate1 );
Delay44_out1_s35 = addSignal( hN, 'Delay44_out1', pirTyp6, slRate1 );
Delay45_out1_s36 = addSignal( hN, 'Delay45_out1', pirTyp5, slRate1 );
Delay46_out1_s37 = addSignal( hN, 'Delay46_out1', pirTyp5, slRate1 );
Delay5_out1_s38 = addSignal( hN, 'Delay5_out1', pirTyp1, slRate1 );
Delay50_out1_s39 = addSignal( hN, 'Delay50_out1', pirTyp2, slRate1 );
Delay51_out1_s40 = addSignal( hN, 'Delay51_out1', pirTyp2, slRate1 );
Delay52_out1_s41 = addSignal( hN, 'Delay52_out1', pirTyp2, slRate1 );
Delay56_out1_s42 = addSignal( hN, 'Delay56_out1', pirTyp5, slRate1 );
Delay6_out1_s43 = addSignal( hN, 'Delay6_out1', pirTyp5, slRate1 );
Delay7_out1_s44 = addSignal( hN, 'Delay7_out1', pirTyp1, slRate1 );
Delay8_out1_s45 = addSignal( hN, 'Delay8_out1', pirTyp6, slRate1 );
Delay9_out1_s46 = addSignal( hN, 'Delay9_out1', pirTyp5, slRate1 );
exp_Final_Approximation_Shared_out1_s49 = addSignal( hN, 'exp_Final_Approximation_Shared_out1', pirTyp6, slRate1 );
exp_Final_Approximation_Shared_out2_s50 = addSignal( hN, 'exp_Final_Approximation_Shared_out2', pirTyp5, slRate1 );
exp_Final_Approximation_Shared_out3_s51 = addSignal( hN, 'exp_Final_Approximation_Shared_out3', pirTyp6, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out1_s52 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out1', pirTyp8, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out2_s53 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out2', pirTyp1, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out3_s54 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out3', pirTyp1, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out4_s55 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out4', pirTyp2, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out5_s56 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out5', pirTyp6, slRate1 );
tanh_Check_Exp_Range_and_Shift_Mant_out6_s57 = addSignal( hN, 'tanh_Check_Exp_Range_and_Shift_Mant_out6', pirTyp5, slRate1 );
tanh_Divide_out1_s58 = addSignal( hN, 'tanh_Divide_out1', pirTyp1, slRate1 );
tanh_Divide_out2_s59 = addSignal( hN, 'tanh_Divide_out2', pirTyp7, slRate1 );
tanh_Extract_Exp_Mant_out1_s60 = addSignal( hN, 'tanh_Extract_Exp_Mant_out1', pirTyp1, slRate1 );
tanh_Extract_Exp_Mant_out2_s61 = addSignal( hN, 'tanh_Extract_Exp_Mant_out2', pirTyp4, slRate1 );
tanh_Extract_Exp_Mant_out3_s62 = addSignal( hN, 'tanh_Extract_Exp_Mant_out3', pirTyp5, slRate1 );
tanh_Extract_Exp_Mant_out4_s63 = addSignal( hN, 'tanh_Extract_Exp_Mant_out4', pirTyp6, slRate1 );
tanh_Extract_Exp_Mant_out5_s64 = addSignal( hN, 'tanh_Extract_Exp_Mant_out5', pirTyp2, slRate1 );
tanh_Extract_Exp_Mant_out6_s65 = addSignal( hN, 'tanh_Extract_Exp_Mant_out6', pirTyp1, slRate1 );
tanh_Extract_Exp_Mant_out7_s66 = addSignal( hN, 'tanh_Extract_Exp_Mant_out7', pirTyp5, slRate1 );
tanh_Multiply_by_Log2_E_out1_s67 = addSignal( hN, 'tanh_Multiply_by_Log2_E_out1', pirTyp1, slRate1 );
tanh_Multiply_by_Log2_E_out2_s68 = addSignal( hN, 'tanh_Multiply_by_Log2_E_out2', pirTyp9, slRate1 );
tanh_Multiply_by_Log2_E_out3_s69 = addSignal( hN, 'tanh_Multiply_by_Log2_E_out3', pirTyp1, slRate1 );
tanh_Multiply_by_Log2_E_out4_s70 = addSignal( hN, 'tanh_Multiply_by_Log2_E_out4', pirTyp2, slRate1 );
tanh_Multiply_by_Log2_E_out5_s71 = addSignal( hN, 'tanh_Multiply_by_Log2_E_out5', pirTyp5, slRate1 );
tanh_One_Plus_Minus_E_out1_s72 = addSignal( hN, 'tanh_One_Plus_Minus_E_out1', pirTyp1, slRate1 );
tanh_One_Plus_Minus_E_out2_s73 = addSignal( hN, 'tanh_One_Plus_Minus_E_out2', pirTyp6, slRate1 );
tanh_One_Plus_Minus_E_out3_s74 = addSignal( hN, 'tanh_One_Plus_Minus_E_out3', pirTyp6, slRate1 );
tanh_One_Plus_Minus_E_out4_s75 = addSignal( hN, 'tanh_One_Plus_Minus_E_out4', pirTyp5, slRate1 );
tanh_exp_neg_Iterations_out1_s76 = addSignal( hN, 'tanh_exp_neg_Iterations_out1', pirTyp6, slRate1 );
tanh_exp_neg_Iterations_out2_s77 = addSignal( hN, 'tanh_exp_neg_Iterations_out2', pirTyp10, slRate1 );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/Rounding' );
Rounding = hN.addComponent( 'ntwk_instance_comp', hRefN );
Rounding.Name = 'Rounding';
pirelab.connectNtwkInstComp( Rounding,  ...
[ Delay24_out1_s18, Delay25_out1_s19, Delay28_out1_s22 ],  ...
[ Rounding_out1_s47, Rounding_out2_s48 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/exp_Final_Approximation_Shared' );
exp_Final_Approximation_Shared = hN.addComponent( 'ntwk_instance_comp', hRefN );
exp_Final_Approximation_Shared.Name = 'exp_Final_Approximation_Shared';
pirelab.connectNtwkInstComp( exp_Final_Approximation_Shared,  ...
[ tanh_exp_neg_Iterations_out1_s76, tanh_exp_neg_Iterations_out2_s77, Delay46_out1_s37, Delay44_out1_s35, Delay50_out1_s39 ],  ...
[ exp_Final_Approximation_Shared_out1_s49, exp_Final_Approximation_Shared_out2_s50, exp_Final_Approximation_Shared_out3_s51 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Check_Exp_Range_and_Shift_Mant' );
tanh_Check_Exp_Range_and_Shift_Mant = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Check_Exp_Range_and_Shift_Mant.Name = 'tanh_Check_Exp_Range_and_Shift_Mant';
pirelab.connectNtwkInstComp( tanh_Check_Exp_Range_and_Shift_Mant,  ...
[ tanh_Multiply_by_Log2_E_out1_s67, tanh_Multiply_by_Log2_E_out2_s68, tanh_Multiply_by_Log2_E_out3_s69, tanh_Multiply_by_Log2_E_out4_s70, tanh_Multiply_by_Log2_E_out5_s71 ],  ...
[ tanh_Check_Exp_Range_and_Shift_Mant_out1_s52, tanh_Check_Exp_Range_and_Shift_Mant_out2_s53, tanh_Check_Exp_Range_and_Shift_Mant_out3_s54, tanh_Check_Exp_Range_and_Shift_Mant_out4_s55, tanh_Check_Exp_Range_and_Shift_Mant_out5_s56, tanh_Check_Exp_Range_and_Shift_Mant_out6_s57 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Divide' );
tanh_Divide = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Divide.Name = 'tanh_Divide';
pirelab.connectNtwkInstComp( tanh_Divide,  ...
[ Delay18_out1_s11, Delay14_out1_s7, Delay8_out1_s45, Delay6_out1_s43 ],  ...
[ tanh_Divide_out1_s58, tanh_Divide_out2_s59 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Extract_Exp_Mant' );
tanh_Extract_Exp_Mant = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Extract_Exp_Mant.Name = 'tanh_Extract_Exp_Mant';
pirelab.connectNtwkInstComp( tanh_Extract_Exp_Mant,  ...
[ Delay3_out1_s24, Delay29_out1_s23, Delay30_out1_s25, Delay34_out1_s28, Delay40_out1_s31, Delay31_out1_s26 ],  ...
[ tanh_Extract_Exp_Mant_out1_s60, tanh_Extract_Exp_Mant_out2_s61, tanh_Extract_Exp_Mant_out3_s62, tanh_Extract_Exp_Mant_out4_s63, tanh_Extract_Exp_Mant_out5_s64, tanh_Extract_Exp_Mant_out6_s65,  ...
tanh_Extract_Exp_Mant_out7_s66 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_Multiply_by_Log2_E' );
tanh_Multiply_by_Log2_E = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Multiply_by_Log2_E.Name = 'tanh_Multiply_by_Log2_E';
pirelab.connectNtwkInstComp( tanh_Multiply_by_Log2_E,  ...
[ exp_cor_s0, mant_cor_s1 ],  ...
[ tanh_Multiply_by_Log2_E_out1_s67, tanh_Multiply_by_Log2_E_out2_s68, tanh_Multiply_by_Log2_E_out3_s69, tanh_Multiply_by_Log2_E_out4_s70, tanh_Multiply_by_Log2_E_out5_s71 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_One_Plus_Minus_E' );
tanh_One_Plus_Minus_E = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_One_Plus_Minus_E.Name = 'tanh_One_Plus_Minus_E';
pirelab.connectNtwkInstComp( tanh_One_Plus_Minus_E,  ...
[ Delay4_out1_s30, exp_Final_Approximation_Shared_out1_s49, exp_Final_Approximation_Shared_out2_s50, exp_Final_Approximation_Shared_out3_s51, Delay32_out1_s27 ],  ...
[ tanh_One_Plus_Minus_E_out1_s72, tanh_One_Plus_Minus_E_out2_s73, tanh_One_Plus_Minus_E_out3_s74, tanh_One_Plus_Minus_E_out4_s75 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main/tanh_exp_neg_Iterations' );
tanh_exp_neg_Iterations = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_exp_neg_Iterations.Name = 'tanh_exp_neg_Iterations';
pirelab.connectNtwkInstComp( tanh_exp_neg_Iterations,  ...
Delay1_out1_s2,  ...
[ tanh_exp_neg_Iterations_out1_s76, tanh_exp_neg_Iterations_out2_s77 ] );

if ( transformnfp.MinLatencyDelay1 > 0 )
MDelay6_12 = transformnfp.Delay12;
else 
MDelay6_12 = transformnfp.Delay6;
end 


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out2_s61,  ...
Delay1_out1_s2,  ...
transformnfp.MinLatencyDelay1, 'Delay1',  ...
fi( 0, nt1, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay5_out1_s38,  ...
Delay10_out1_s3,  ...
transformnfp.Delay1, 'Delay10',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay9_out1_s46,  ...
Delay11_out1_s4,  ...
MDelay6_12, 'Delay11',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay11_out1_s4,  ...
Delay12_out1_s5,  ...
transformnfp.MinLatencyDelay1, 'Delay12',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay7_out1_s44,  ...
Delay13_out1_s6,  ...
transformnfp.Delay1, 'Delay13',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_One_Plus_Minus_E_out2_s73,  ...
Delay14_out1_s7,  ...
transformnfp.MinLatencyDelay1, 'Delay14',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay12_out1_s5,  ...
Delay15_out1_s8,  ...
transformnfp.Delay4, 'Delay15',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay10_out1_s3,  ...
Delay16_out1_s9,  ...
MDelay6_12, 'Delay16',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay13_out1_s6,  ...
Delay17_out1_s10,  ...
MDelay6_12, 'Delay17',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_One_Plus_Minus_E_out1_s72,  ...
Delay18_out1_s11,  ...
transformnfp.MinLatencyDelay1, 'Delay18',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay15_out1_s8,  ...
Delay19_out1_s12,  ...
transformnfp.Delay1, 'Delay19',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay22_out1_s16,  ...
Delay2_out1_s13,  ...
transformnfp.MinLatencyDelay1, 'Delay2',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay16_out1_s9,  ...
Delay20_out1_s14,  ...
transformnfp.MinLatencyDelay1, 'Delay20',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out7_s66,  ...
Delay21_out1_s15,  ...
transformnfp.MinLatencyDelay1, 'Delay21',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay37_out1_s29,  ...
Delay22_out1_s16,  ...
transformnfp.MinLatencyDelay1, 'Delay22',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay17_out1_s10,  ...
Delay23_out1_s17,  ...
transformnfp.MinLatencyDelay1, 'Delay23',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Divide_out1_s58,  ...
Delay24_out1_s18,  ...
transformnfp.Delay1, 'Delay24',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Divide_out2_s59,  ...
Delay25_out1_s19,  ...
transformnfp.Delay1, 'Delay25',  ...
fi( 0, nt3, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay20_out1_s14,  ...
Delay26_out1_s20,  ...
transformnfp.Delay4, 'Delay26',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay23_out1_s17,  ...
Delay27_out1_s21,  ...
transformnfp.Delay4, 'Delay27',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay56_out1_s42,  ...
Delay28_out1_s22,  ...
transformnfp.Delay1, 'Delay28',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out2_s53,  ...
Delay29_out1_s23,  ...
transformnfp.Delay1, 'Delay29',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out1_s52,  ...
Delay3_out1_s24,  ...
transformnfp.Delay1, 'Delay3',  ...
fi( 0, nt4, fiMath1, 'hex', '0000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out3_s54,  ...
Delay30_out1_s25,  ...
transformnfp.Delay1, 'Delay30',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out6_s57,  ...
Delay31_out1_s26,  ...
transformnfp.Delay1, 'Delay31',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay27_out1_s21,  ...
Delay32_out1_s27,  ...
transformnfp.Delay1, 'Delay32',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out4_s55,  ...
Delay34_out1_s28,  ...
transformnfp.Delay1, 'Delay34',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay19_out1_s12,  ...
Delay37_out1_s29,  ...
transformnfp.Delay1, 'Delay37',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay26_out1_s20,  ...
Delay4_out1_s30,  ...
transformnfp.Delay1, 'Delay4',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Check_Exp_Range_and_Shift_Mant_out5_s56,  ...
Delay40_out1_s31,  ...
transformnfp.Delay1, 'Delay40',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out3_s62,  ...
Delay41_out1_s32,  ...
transformnfp.MinLatencyDelay1, 'Delay41',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out4_s63,  ...
Delay42_out1_s33,  ...
transformnfp.MinLatencyDelay1, 'Delay42',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay42_out1_s33,  ...
Delay43_out1_s34,  ...
transformnfp.Delay1, 'Delay43',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay43_out1_s34,  ...
Delay44_out1_s35,  ...
MDelay6_12, 'Delay44',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay41_out1_s32,  ...
Delay45_out1_s36,  ...
transformnfp.Delay1, 'Delay45',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay45_out1_s36,  ...
Delay46_out1_s37,  ...
MDelay6_12, 'Delay46',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out1_s60,  ...
Delay5_out1_s38,  ...
transformnfp.MinLatencyDelay1, 'Delay5',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay51_out1_s40,  ...
Delay50_out1_s39,  ...
MDelay6_12, 'Delay50',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay52_out1_s41,  ...
Delay51_out1_s40,  ...
transformnfp.Delay1, 'Delay51',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out5_s64,  ...
Delay52_out1_s41,  ...
transformnfp.MinLatencyDelay1, 'Delay52',  ...
fi( 0, nt5, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay2_out1_s13,  ...
Delay56_out1_s42,  ...
MDelay6_12, 'Delay56',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_One_Plus_Minus_E_out4_s75,  ...
Delay6_out1_s43,  ...
transformnfp.MinLatencyDelay1, 'Delay6',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Extract_Exp_Mant_out6_s65,  ...
Delay7_out1_s44,  ...
transformnfp.MinLatencyDelay1, 'Delay7',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_One_Plus_Minus_E_out3_s74,  ...
Delay8_out1_s45,  ...
transformnfp.MinLatencyDelay1, 'Delay8',  ...
fi( 0, nt2, fiMath1, 'hex', '000000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Delay21_out1_s15,  ...
Delay9_out1_s46,  ...
transformnfp.Delay1, 'Delay9',  ...
false,  ...
0, 0, [  ], 0, 0 );


end 

function hN = createNetwork_n5( ~, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 23, 0 );
nt1 = numerictype( 0, 8, 0 );




hN.addInputPort( 'aSign' );
aSign_s0 = addSignal( hN, 'aSign', pirTyp1, slRate1 );
aSign_s0.addDriver( hN, 0 );

hN.addInputPort( 'aExponent' );
aExponent_s1 = addSignal( hN, 'aExponent', pirTyp2, slRate1 );
aExponent_s1.addDriver( hN, 1 );

hN.addInputPort( 'aMantissa' );
aMantissa_s2 = addSignal( hN, 'aMantissa', pirTyp3, slRate1 );
aMantissa_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Sign' );
aSign_s0.addReceiver( hN, 0 );

hN.addOutputPort( 'Exponent' );
Switch_out1_s8 = addSignal( hN, 'Switch_out1', pirTyp2, slRate1 );
Switch_out1_s8.addReceiver( hN, 1 );

hN.addOutputPort( 'Mantissa' );
Switch1_out1_s9 = addSignal( hN, 'Switch1_out1', pirTyp3, slRate1 );
Switch1_out1_s9.addReceiver( hN, 2 );

hN.addOutputPort( 'setExceptionalCases' );
LogicalOperator_out1_s5 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp4, slRate1 );
LogicalOperator_out1_s5.addReceiver( hN, 3 );

Constant_out1_s3 = addSignal( hN, 'Constant_out1', pirTyp2, slRate1 );
Constant1_out1_s4 = addSignal( hN, 'Constant1_out1', pirTyp3, slRate1 );
LogicalOperator1_out1_s6 = addSignal( hN, sprintf( 'Logical\nOperator1_out1' ), pirTyp4, slRate1 );
LogicalOperator2_out1_s7 = addSignal( hN, sprintf( 'Logical\nOperator2_out1' ), pirTyp4, slRate1 );
aExponent__CfType_Exponent_I____out1_s10 = addSignal( hN, 'aExponent == cfType.Exponent_I..._out1', pirTyp4, slRate1 );
aExponent__CfType_Exponent_I___1_out1_s11 = addSignal( hN, 'aExponent == cfType.Exponent_I...1_out1', pirTyp4, slRate1 );
aExponent__CfType_Exponent_I___2_out1_s12 = addSignal( hN, 'aExponent == cfType.Exponent_I...2_out1', pirTyp4, slRate1 );
aMantissa__0_out1_s13 = addSignal( hN, 'aMantissa ~= 0_out1', pirTyp4, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s3,  ...
fi( 0, nt1, fiMath1, 'hex', '7f' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant1_out1_s4,  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
'Constant1', 'on', 1, '', '', '' );


pirelab.getLogicComp( hN,  ...
[ aExponent__CfType_Exponent_I___1_out1_s11, aExponent__CfType_Exponent_I___2_out1_s12 ],  ...
LogicalOperator_out1_s5,  ...
'or', sprintf( 'Logical\nOperator' ) );


pirelab.getLogicComp( hN,  ...
[ LogicalOperator2_out1_s7, aExponent__CfType_Exponent_I___1_out1_s11 ],  ...
LogicalOperator1_out1_s6,  ...
'or', sprintf( 'Logical\nOperator1' ) );


pirelab.getLogicComp( hN,  ...
[ aExponent__CfType_Exponent_I____out1_s10, aMantissa__0_out1_s13 ],  ...
LogicalOperator2_out1_s7,  ...
'and', sprintf( 'Logical\nOperator2' ) );


pirelab.getSwitchComp( hN,  ...
[ aExponent_s1, Constant_out1_s3 ],  ...
Switch_out1_s8,  ...
LogicalOperator1_out1_s6, 'Switch',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ aMantissa_s2, Constant1_out1_s4 ],  ...
Switch1_out1_s9,  ...
LogicalOperator1_out1_s6, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getCompareToValueComp( hN,  ...
aExponent_s1,  ...
aExponent__CfType_Exponent_I____out1_s10,  ...
'==', fi( 0, nt1, fiMath1, 'hex', 'ff' ),  ...
'aExponent == cfType.Exponent_I...', 0 );


pirelab.getCompareToValueComp( hN,  ...
aExponent_s1,  ...
aExponent__CfType_Exponent_I___1_out1_s11,  ...
'<', fi( 0, nt1, fiMath1, 'hex', '73' ),  ...
'aExponent == cfType.Exponent_I...1', 0 );


pirelab.getCompareToValueComp( hN,  ...
aExponent_s1,  ...
aExponent__CfType_Exponent_I___2_out1_s12,  ...
'>', fi( 0, nt1, fiMath1, 'hex', '82' ),  ...
'aExponent == cfType.Exponent_I...2', 0 );


pirelab.getCompareToValueComp( hN,  ...
aMantissa_s2,  ...
aMantissa__0_out1_s13,  ...
'~=', fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
'aMantissa ~= 0', 1 );


end 

function hN = createNetwork_n4( ~, hN, slRate1 )
pirTyp5 = pir_ufixpt_t( 1, 0 );
pirTyp2 = pir_ufixpt_t( 23, 0 );
pirTyp4 = pir_ufixpt_t( 24, 0 );
pirTyp3 = pir_ufixpt_t( 24,  - 23 );
pirTyp1 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );




hN.addInputPort( 'Exponent' );
Exponent_s0 = addSignal( hN, 'Exponent', pirTyp1, slRate1 );
Exponent_s0.addDriver( hN, 0 );

hN.addInputPort( 'Mantissa' );
Mantissa_s1 = addSignal( hN, 'Mantissa', pirTyp2, slRate1 );
Mantissa_s1.addDriver( hN, 1 );

hN.addOutputPort( 'ExponentCorrected' );
Exponent_s0.addReceiver( hN, 0 );

hN.addOutputPort( 'MantissaAppended' );
reinterpretcast_mant_cor_Nume_____out1_s4 = addSignal( hN, 'reinterpretcast(mant_cor, nume... : _out1', pirTyp3, slRate1 );
reinterpretcast_mant_cor_Nume_____out1_s4.addReceiver( hN, 1 );

BitConcat_out1_s2 = addSignal( hN, 'Bit Concat_out1', pirTyp4, slRate1 );
Constant_out1_s3 = addSignal( hN, 'Constant_out1', pirTyp5, slRate1 );


pirelab.getConstComp( hN,  ...
Constant_out1_s3,  ...
fi( 0, nt1, fiMath1, 'hex', '1' ),  ...
'Constant', 'on', 0, '', '', '' );


pirelab.getBitConcatComp( hN,  ...
[ Constant_out1_s3, Mantissa_s1 ],  ...
BitConcat_out1_s2,  ...
'Bit Concat' );


pirelab.getDTCComp( hN,  ...
BitConcat_out1_s2,  ...
reinterpretcast_mant_cor_Nume_____out1_s4,  ...
'Floor', 'Wrap', 'SI', 'reinterpretcast(mant_cor, nume... : ' );


end 

function hN = createNetwork_n2( ~, hN, slRate1 )

if ( transformnfp.Delay1 > 0 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp5 = pir_ufixpt_t( 6, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt2 = numerictype( 0, 1, 0 );
nt3 = numerictype( 0, 23, 0 );
nt1 = numerictype( 0, 6, 0 );
nt4 = numerictype( 0, 8, 0 );




hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addInputPort( 'In3' );
In3_s2 = addSignal( hN, 'In3', pirTyp3, slRate1 );
In3_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Out1' );
Delay3_out1_s6 = addSignal( hN, 'Delay3_out1', pirTyp1, slRate1 );
Delay3_out1_s6.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
Delay4_out1_s7 = addSignal( hN, 'Delay4_out1', pirTyp2, slRate1 );
Delay4_out1_s7.addReceiver( hN, 1 );

hN.addOutputPort( 'Out3' );
Delay5_out1_s8 = addSignal( hN, 'Delay5_out1', pirTyp3, slRate1 );
Delay5_out1_s8.addReceiver( hN, 2 );

Constant1_out1_s3 = addSignal( hN, 'Constant1_out1', pirTyp1, slRate1 );
Constant2_out1_s4 = addSignal( hN, 'Constant2_out1', pirTyp3, slRate1 );
Constant3_out1_s5 = addSignal( hN, 'Constant3_out1', pirTyp2, slRate1 );
InitCycles1_out1_s9 = addSignal( hN, 'InitCycles1_out1', pirTyp4, slRate1 );
Switch1_out1_s10 = addSignal( hN, 'Switch1_out1', pirTyp1, slRate1 );
Switch5_out1_s11 = addSignal( hN, 'Switch5_out1', pirTyp3, slRate1 );
Switch6_out1_s12 = addSignal( hN, 'Switch6_out1', pirTyp2, slRate1 );
if ( ~( transformnfp.needNoInitialize(  ) ) )
Add_out1_s13 = addSignal( hN, 'Add_out1', pirTyp5, slRate1 );
Constant7_out1_s14 = addSignal( hN, 'Constant7_out1', pirTyp5, slRate1 );
Constant8_out1_s15 = addSignal( hN, 'Constant8_out1', pirTyp1, slRate1 );
Delay1_out1_s16 = addSignal( hN, 'Delay1_out1', pirTyp4, slRate1 );
Delay3_out1_s17 = addSignal( hN, 'Delay3_out1', pirTyp5, slRate1 );
Delay4_out1_s18 = addSignal( hN, 'Delay4_out1', pirTyp4, slRate1 );
LogicalOperator_out1_s19 = addSignal( hN, sprintf( 'Logical\nOperator_out1' ), pirTyp1, slRate1 );
RelationalOperator_out1_s20 = addSignal( hN, sprintf( 'Relational\nOperator_out1' ), pirTyp4, slRate1 );


if ( transformnfp.MinLatencyDelay1 > 0 )
pirelab.getConstComp( hN,  ...
Constant7_out1_s14,  ...
fi( 0, nt1, fiMath1, 'hex', '29' ),  ...
'Constant7', 'on', 0, '', '', '' );
else 
pirelab.getConstComp( hN,  ...
Constant7_out1_s14,  ...
fi( 0, nt1, fiMath1, 'hex', '17' ),  ...
'Constant7', 'on', 0, '', '', '' );
end 


pirelab.getConstComp( hN,  ...
Constant8_out1_s15,  ...
fi( 0, nt2, fiMath1, 'hex', '1' ),  ...
'Constant8', 'on', 0, '', '', '' );

if ( ~( transformnfp.needNoGlobalReset(  ) ) )
pirelab.getIntDelayComp( hN,  ...
RelationalOperator_out1_s20,  ...
Delay1_out1_s16,  ...
transformnfp.Delay1, 'Delay1',  ...
true,  ...
0, 0, [  ], 0, 0 );
else 
transformnfp.createDelayWrapper( hN, Delay1_out1_s16, RelationalOperator_out1_s20, pirTyp4, slRate1 );
end 


pirelab.getIntDelayComp( hN,  ...
Add_out1_s13,  ...
Delay3_out1_s17,  ...
transformnfp.Delay1, 'Delay3',  ...
fi( 0, nt1, fiMath1, 'hex', '00' ),  ...
0, 0, [  ], 0, 0 );

if ( ~( transformnfp.needNoGlobalReset(  ) ) )
pirelab.getIntDelayComp( hN,  ...
RelationalOperator_out1_s20,  ...
Delay4_out1_s18,  ...
transformnfp.Delay1, 'Delay4',  ...
true,  ...
0, 0, [  ], 0, 0 );
else 
transformnfp.createDelayWrapper( hN, Delay4_out1_s18, RelationalOperator_out1_s20, pirTyp4, slRate1 );
end 


pirelab.getAddComp( hN,  ...
[ Delay3_out1_s17, LogicalOperator_out1_s19 ],  ...
Add_out1_s13,  ...
'Floor', 'Wrap', 'Add', pirTyp5, '++' );


pirelab.getLogicComp( hN,  ...
[ Constant8_out1_s15, Delay4_out1_s18 ],  ...
LogicalOperator_out1_s19,  ...
'and', sprintf( 'Logical\nOperator' ) );


pirelab.getRelOpComp( hN,  ...
[ Add_out1_s13, Constant7_out1_s14 ],  ...
RelationalOperator_out1_s20,  ...
'<=', 0, sprintf( 'Relational\nOperator' ) );
else 


Delay1_out1_s16 = addSignal( hN, 'Delay1_out1', pirTyp4, slRate1 );
pirelab.getConstComp( hN,  ...
Delay1_out1_s16,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'Constant8', 'on', 0, '', '', '' );
end 

pirelab.getConstComp( hN,  ...
Constant1_out1_s3,  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
'Constant1', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant2_out1_s4,  ...
fi( 0, nt3, fiMath1, 'hex', '000000' ),  ...
'Constant2', 'on', 1, '', '', '' );


pirelab.getConstComp( hN,  ...
Constant3_out1_s5,  ...
fi( 0, nt4, fiMath1, 'hex', '00' ),  ...
'Constant3', 'on', 1, '', '', '' );


pirelab.getIntDelayComp( hN,  ...
Switch1_out1_s10,  ...
Delay3_out1_s6,  ...
transformnfp.Delay1, 'Delay3',  ...
fi( 0, nt2, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch6_out1_s12,  ...
Delay4_out1_s7,  ...
transformnfp.Delay1, 'Delay4',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
Switch5_out1_s11,  ...
Delay5_out1_s8,  ...
transformnfp.Delay1, 'Delay5',  ...
fi( 0, nt3, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );

pirelab.getWireComp( hN,  ...
Delay1_out1_s16,  ...
InitCycles1_out1_s9,  ...
'InitCycles1_out1' );




pirelab.getSwitchComp( hN,  ...
[ Constant1_out1_s3, In1_s0 ],  ...
Switch1_out1_s10,  ...
InitCycles1_out1_s9, 'Switch1',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant2_out1_s4, In3_s2 ],  ...
Switch5_out1_s11,  ...
InitCycles1_out1_s9, 'Switch5',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Constant3_out1_s5, In2_s1 ],  ...
Switch6_out1_s12,  ...
InitCycles1_out1_s9, 'Switch6',  ...
'~=', 0, 'Floor', 'Wrap' );
else 
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );






hN.addInputPort( 'In1' );
In1_s0 = addSignal( hN, 'In1', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2' );
In2_s1 = addSignal( hN, 'In2', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addInputPort( 'In3' );
In3_s2 = addSignal( hN, 'In3', pirTyp3, slRate1 );
In3_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Out1' );
In1_s0.addReceiver( hN, 0 );

hN.addOutputPort( 'Out2' );
In2_s1.addReceiver( hN, 1 );

hN.addOutputPort( 'Out3' );
In3_s2.addReceiver( hN, 2 );
end 

end 

function hN = createNetwork_n1( p, hN, slRate1 )
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp2 = pir_ufixpt_t( 8, 0 );






hN.addInputPort( 'In1 ' );
In1_s0 = addSignal( hN, 'In1 ', pirTyp1, slRate1 );
In1_s0.addDriver( hN, 0 );

hN.addInputPort( 'In2 ' );
In2_s1 = addSignal( hN, 'In2 ', pirTyp2, slRate1 );
In2_s1.addDriver( hN, 1 );

hN.addInputPort( 'In3 ' );
In3_s2 = addSignal( hN, 'In3 ', pirTyp3, slRate1 );
In3_s2.addDriver( hN, 2 );

hN.addOutputPort( ' Out1' );
InitCycles_out1_s3 = addSignal( hN, 'InitCycles_out1', pirTyp1, slRate1 );
InitCycles_out1_s3.addReceiver( hN, 0 );

hN.addOutputPort( ' Out2' );
InitCycles_out2_s4 = addSignal( hN, 'InitCycles_out2', pirTyp2, slRate1 );
InitCycles_out2_s4.addReceiver( hN, 1 );

hN.addOutputPort( ' Out3' );
InitCycles_out3_s5 = addSignal( hN, 'InitCycles_out3', pirTyp3, slRate1 );
InitCycles_out3_s5.addReceiver( hN, 2 );


hRefN = p.findNetwork( 'fullname', 'Tanh_Single/InitCycles/InitCycles' );
InitCycles = hN.addComponent( 'ntwk_instance_comp', hRefN );
InitCycles.Name = 'InitCycles';
pirelab.connectNtwkInstComp( InitCycles,  ...
[ In1_s0, In2_s1, In3_s2 ],  ...
[ InitCycles_out1_s3, InitCycles_out2_s4, InitCycles_out3_s5 ] );


end 

function hN = createNetwork_n0( p, hN, slRate1 )
pirTyp4 = pir_ufixpt_t( 1, 0 );
pirTyp1 = pir_ufixpt_t( 1, 0 );
pirTyp3 = pir_ufixpt_t( 23, 0 );
pirTyp5 = pir_ufixpt_t( 24,  - 23 );
pirTyp2 = pir_ufixpt_t( 8, 0 );

fiMath1 = fimath( 'RoundingMethod', 'Nearest', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision' );

nt1 = numerictype( 0, 1, 0 );
nt2 = numerictype( 0, 23, 0 );




hN.addInputPort( 'aSign' );
aSign_s0 = addSignal( hN, 'aSign', pirTyp1, slRate1 );
aSign_s0.addDriver( hN, 0 );

hN.addInputPort( 'aExponent' );
aExponent_s1 = addSignal( hN, 'aExponent', pirTyp2, slRate1 );
aExponent_s1.addDriver( hN, 1 );

hN.addInputPort( 'aMantissa' );
aMantissa_s2 = addSignal( hN, 'aMantissa', pirTyp3, slRate1 );
aMantissa_s2.addDriver( hN, 2 );

hN.addOutputPort( 'Sign' );
InitCycles_out1_s10 = addSignal( hN, 'InitCycles_out1', pirTyp1, slRate1 );
InitCycles_out1_s10.addReceiver( hN, 0 );

hN.addOutputPort( 'Exponent' );
InitCycles_out2_s11 = addSignal( hN, 'InitCycles_out2', pirTyp2, slRate1 );
InitCycles_out2_s11.addReceiver( hN, 1 );

hN.addOutputPort( 'Mantissa' );
InitCycles_out3_s12 = addSignal( hN, 'InitCycles_out3', pirTyp3, slRate1 );
InitCycles_out3_s12.addReceiver( hN, 2 );

Delay_out1_s3 = addSignal( hN, 'Delay_out1', pirTyp1, slRate1 );
Delay1_out1_s4 = addSignal( hN, 'Delay1_out1', pirTyp2, slRate1 );
Delay2_out1_s5 = addSignal( hN, 'Delay2_out1', pirTyp3, slRate1 );
Delay6_out1_s6 = addSignal( hN, 'Delay6_out1', pirTyp1, slRate1 );
Delay7_out1_s7 = addSignal( hN, 'Delay7_out1', pirTyp2, slRate1 );
Delay8_out1_s8 = addSignal( hN, 'Delay8_out1', pirTyp3, slRate1 );
Delay9_out1_s9 = addSignal( hN, 'Delay9_out1', pirTyp4, slRate1 );
appendMantissaAndCorrectExponent_out1_s13 = addSignal( hN, 'appendMantissaAndCorrectExponent_out1', pirTyp2, slRate1 );
appendMantissaAndCorrectExponent_out2_s14 = addSignal( hN, 'appendMantissaAndCorrectExponent_out2', pirTyp5, slRate1 );
if_aExponent__CfType_Exponent_____out1_s15 = addSignal( hN, 'if (aExponent == cfType.Exponent_..._out1', pirTyp2, slRate1 );
if_aExponent__CfType_Exponent____1_out1_s16 = addSignal( hN, 'if (aExponent == cfType.Exponent_...1_out1', pirTyp3, slRate1 );
tanh_Inf_or_NaN_out1_s17 = addSignal( hN, 'tanh_Inf_or_NaN_out1', pirTyp1, slRate1 );
tanh_Inf_or_NaN_out2_s18 = addSignal( hN, 'tanh_Inf_or_NaN_out2', pirTyp2, slRate1 );
tanh_Inf_or_NaN_out3_s19 = addSignal( hN, 'tanh_Inf_or_NaN_out3', pirTyp3, slRate1 );
tanh_Inf_or_NaN_out4_s20 = addSignal( hN, 'tanh_Inf_or_NaN_out4', pirTyp4, slRate1 );
tanh_Main_out1_s21 = addSignal( hN, 'tanh_Main_out1', pirTyp2, slRate1 );
tanh_Main_out2_s22 = addSignal( hN, 'tanh_Main_out2', pirTyp3, slRate1 );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/InitCycles' );
InitCycles = hN.addComponent( 'ntwk_instance_comp', hRefN );
InitCycles.Name = 'InitCycles';
pirelab.connectNtwkInstComp( InitCycles,  ...
[ Delay6_out1_s6, if_aExponent__CfType_Exponent_____out1_s15, if_aExponent__CfType_Exponent____1_out1_s16 ],  ...
[ InitCycles_out1_s10, InitCycles_out2_s11, InitCycles_out3_s12 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/appendMantissaAndCorrectExponent' );
appendMantissaAndCorrectExponent = hN.addComponent( 'ntwk_instance_comp', hRefN );
appendMantissaAndCorrectExponent.Name = 'appendMantissaAndCorrectExponent';
pirelab.connectNtwkInstComp( appendMantissaAndCorrectExponent,  ...
[ Delay1_out1_s4, Delay2_out1_s5 ],  ...
[ appendMantissaAndCorrectExponent_out1_s13, appendMantissaAndCorrectExponent_out2_s14 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Inf_or_NaN' );
tanh_Inf_or_NaN = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Inf_or_NaN.Name = 'tanh_Inf_or_NaN';
pirelab.connectNtwkInstComp( tanh_Inf_or_NaN,  ...
[ Delay_out1_s3, Delay1_out1_s4, Delay2_out1_s5 ],  ...
[ tanh_Inf_or_NaN_out1_s17, tanh_Inf_or_NaN_out2_s18, tanh_Inf_or_NaN_out3_s19, tanh_Inf_or_NaN_out4_s20 ] );

hRefN = p.findNetwork( 'fullname', 'Tanh_Single/tanh_Main' );
tanh_Main = hN.addComponent( 'ntwk_instance_comp', hRefN );
tanh_Main.Name = 'tanh_Main';
pirelab.connectNtwkInstComp( tanh_Main,  ...
[ appendMantissaAndCorrectExponent_out1_s13, appendMantissaAndCorrectExponent_out2_s14 ],  ...
[ tanh_Main_out1_s21, tanh_Main_out2_s22 ] );

if ( transformnfp.MinLatencyDelay1 > 0 )
MatchingDelay = transformnfp.Delay41;
else 
MatchingDelay = transformnfp.Delay23;
end 

pirelab.getIntDelayComp( hN,  ...
aSign_s0,  ...
Delay_out1_s3,  ...
transformnfp.Delay1, 'Delay',  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
aExponent_s1,  ...
Delay1_out1_s4,  ...
transformnfp.Delay1, 'Delay1',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
aMantissa_s2,  ...
Delay2_out1_s5,  ...
transformnfp.Delay1, 'Delay2',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Inf_or_NaN_out1_s17,  ...
Delay6_out1_s6,  ...
MatchingDelay, 'Delay6',  ...
fi( 0, nt1, fiMath1, 'hex', '0' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Inf_or_NaN_out2_s18,  ...
Delay7_out1_s7,  ...
MatchingDelay, 'Delay7',  ...
uint8( 0 ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Inf_or_NaN_out3_s19,  ...
Delay8_out1_s8,  ...
MatchingDelay, 'Delay8',  ...
fi( 0, nt2, fiMath1, 'hex', '000000' ),  ...
0, 0, [  ], 0, 0 );


pirelab.getIntDelayComp( hN,  ...
tanh_Inf_or_NaN_out4_s20,  ...
Delay9_out1_s9,  ...
MatchingDelay, 'Delay9',  ...
false,  ...
0, 0, [  ], 0, 0 );


pirelab.getSwitchComp( hN,  ...
[ Delay7_out1_s7, tanh_Main_out1_s21 ],  ...
if_aExponent__CfType_Exponent_____out1_s15,  ...
Delay9_out1_s9, 'if (aExponent == cfType.Exponent_...',  ...
'~=', 0, 'Floor', 'Wrap' );


pirelab.getSwitchComp( hN,  ...
[ Delay8_out1_s8, tanh_Main_out2_s22 ],  ...
if_aExponent__CfType_Exponent____1_out1_s16,  ...
Delay9_out1_s9, 'if (aExponent == cfType.Exponent_...1',  ...
'~=', 0, 'Floor', 'Wrap' );


end 

function hS = addSignal( hN, sigName, pirTyp, simulinkRate )
hS = hN.addSignal;
hS.Name = sigName;
hS.Type = pirTyp;
hS.SimulinkHandle = 0;
hS.SimulinkRate = simulinkRate;
end 

% Decoded using De-pcode utility v1.2 from file /tmp/tmp97Nz7t.p.
% Please follow local copyright laws when handling this file.

