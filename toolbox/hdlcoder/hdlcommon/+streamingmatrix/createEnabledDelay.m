function createEnabledDelay(dataIn,validIn,dataOut,delayLength,name)




    hN=dataIn.Owner;

    hNewN=pirelab.createNewNetwork(...
    'Network',hN,...
    'Name',name,...
    'InportNames',{dataIn.Name,validIn.Name},...
    'InportTypes',[dataIn.Type,validIn.Type],...
    'InportRates',[dataIn.SimulinkRate,validIn.SimulinkRate],...
    'OutportNames',{dataOut.Name},...
    'OutportTypes',dataOut.Type,...
    'OutportRates',dataOut.SimulinkRate);
    hN.copyOptimizationOptions(hNewN,false);

    pirelab.instantiateNetwork(hN,hNewN,[dataIn,validIn],dataOut,name);

    dataInInner=hNewN.PirInputSignals(1);
    validInInner=hNewN.PirInputSignals(2);

    dataInDelayedInner=hNewN.addSignal(hNewN.PirInputSignals(1));
    pirelab.getIntDelayComp(hNewN,dataInInner,dataInDelayedInner,1,'delayData');

    [validOutInner,validInDelayedInner]=streamingmatrix.createEnabledDelayCounters(...
    validInInner,delayLength);

    dataOutInner=hNewN.addSignal(hNewN.PirOutputSignals);

    createFIFOsInNetwork(...
    dataInDelayedInner,...
    validInDelayedInner,...
    validOutInner,...
    dataOutInner,...
    delayLength);

    buffer=pirelab.getWireComp(hNewN,dataOutInner,hNewN.PirOutputSignals);
    buffer.setOutputDelay(2);
end

function createFIFOsInNetwork(dataIn,writeIn,readIn,dataOut,delayLength)
    hN=dataIn.Owner;

    fifoSize=max(delayLength,4);
    fifoComp=pirelab.getFIFOComp(hN,[dataIn,writeIn,readIn],dataOut,...
    fifoSize,'enabledDelay_FIFO','',false);
    fifoSizeStr=num2str(fifoSize);

    for i=1:length(fifoComp)
        tag=fifoComp(i).getModelGenForNICTag;


        tag.setLibBlockInfo('hdlsllib/HDL RAMs/HDL FIFO',{...
        'mode','Classic',...
        'fifo_size',fifoSizeStr,...
        'push_msg','Error',...
        'pop_msg','Error',...
        'show_empty',0,...
        'show_full',0,...
        'show_num',0});
    end
end


