classdef AmplifierDialog<handle






    properties
Parent
Panel
Layout
        Width=0
        Height=0
Listeners

SparametersObj
DataSourcePopup
UseNetworkDataPopup
    end

    properties(Dependent)
Name
Gain
NF
OIP2
OIP3
Zin
Zout
UseNetworkData
FileName
DataSource
WkSpcObj
    end

    properties(Access=private)

Title

NameLabel
NameEdit

GainLabel
GainEdit
GainUnits

NFLabel
NFEdit
NFUnits

OIP2Label
OIP2Edit
OIP2Units

OIP3Label
OIP3Edit
OIP3Units

ZinLabel
ZinEdit
ZinUnits

ZoutLabel
ZoutEdit
ZoutUnits

UseNetworkDataLabel


FileNameLabel
FileNameEdit
FileNameButton

DataSourceLabel

WkSpcLabel
        WkSpcEdit=''

ApplyLabel

        IsReturnKey=0
        NameChanged=0
        OtherPropertiesChanged=0
    end

    methods




        function self=AmplifierDialog(parent)






            if nargin==0
                parent=figure;
            end
            self.Parent=parent;

            createUIControls(self)
            layoutUIControls(self)
            parameterPaneChange(self)
            addListeners(self)

            if self.Parent.View.UseAppContainer
                self.FileNameButton.ButtonPushedFcn=@(~,~)browseAction(self);
            else
                set(self.FileNameButton,'Callback',@(~,~)browseAction(self));
            end
        end
    end

    methods


        function str=get.Name(self)
            if self.Parent.View.UseAppContainer
                str=self.NameEdit.Value;
            else
                str=self.NameEdit.String;
            end
        end

        function set.Name(self,str)
            if self.Parent.View.UseAppContainer
                self.NameEdit.Value=str;
            else
                self.NameEdit.String=str;
            end
        end

        function val=get.Gain(self)
            if self.Parent.View.UseAppContainer
                val=self.GainEdit.Value;
            else
                val=str2num(self.GainEdit.String);%#ok<*ST2NM>
            end
        end

        function set.Gain(self,val)
            if self.Parent.View.UseAppContainer
                self.GainEdit.Value=val;
            else
                self.GainEdit.String=num2str(val);
            end
        end

        function val=get.NF(self)
            if self.Parent.View.UseAppContainer
                val=self.NFEdit.Value;
            else
                val=str2num(self.NFEdit.String);
            end
        end

        function set.NF(self,val)
            if self.Parent.View.UseAppContainer
                self.NFEdit.Value=val;
            else
                self.NFEdit.String=num2str(val);
            end
        end

        function val=get.OIP2(self)
            if self.Parent.View.UseAppContainer
                val=self.OIP2Edit.Value;
            else
                val=str2num(self.OIP2Edit.String);
            end
        end

        function set.OIP2(self,val)
            if self.Parent.View.UseAppContainer
                self.OIP2Edit.Value=val;
            else
                self.OIP2Edit.String=num2str(val);
            end
        end

        function val=get.OIP3(self)
            if self.Parent.View.UseAppContainer
                val=self.OIP3Edit.Value;
            else
                val=str2num(self.OIP3Edit.String);
            end
        end

        function set.OIP3(self,val)
            if self.Parent.View.UseAppContainer
                self.OIP3Edit.Value=val;
            else
                self.OIP3Edit.String=num2str(val);
            end
        end

        function val=get.Zin(self)
            if self.Parent.View.UseAppContainer
                val=str2num(self.ZinEdit.Value);
            else
                val=str2num(self.ZinEdit.String);
            end
        end

        function set.Zin(self,val)
            if self.Parent.View.UseAppContainer
                self.ZinEdit.Value=num2str(val);
            else
                self.ZinEdit.String=num2str(val);
            end
        end

        function val=get.Zout(self)
            if self.Parent.View.UseAppContainer
                val=str2num(self.ZoutEdit.Value);
            else
                val=str2num(self.ZoutEdit.String);
            end
        end

        function set.Zout(self,val)
            if self.Parent.View.UseAppContainer
                self.ZoutEdit.Value=num2str(val);
            else
                self.ZoutEdit.String=num2str(val);
            end
        end

        function set.UseNetworkData(self,Value)
            if self.Parent.View.UseAppContainer
                if Value==1
                    self.UseNetworkDataPopup.Value='Network Parameters';
                else
                    self.UseNetworkDataPopup.Value='Gain and Impedance';
                end
            else
                if Value==1
                    self.UseNetworkDataPopup.Value=1;
                else
                    self.UseNetworkDataPopup.Value=2;
                end
            end
        end

        function str=get.UseNetworkData(self)
            if self.Parent.View.UseAppContainer
                str=self.UseNetworkDataPopup.Value;
            else
                str=self.UseNetworkDataPopup.String{self.UseNetworkDataPopup.Value};
            end
            if str==1
                str=1;
            else
                str=0;
            end
        end

        function set.FileName(self,str)
            if self.Parent.View.UseAppContainer
                self.FileNameEdit.Value=str;
            else
                self.FileNameEdit.String=str;
            end
        end

        function str=get.FileName(self)
            if self.Parent.View.UseAppContainer
                str=self.FileNameEdit.Value;
            else
                str=self.FileNameEdit.String;
            end
        end

        function str=get.DataSource(self)
            if self.Parent.View.UseAppContainer
                str=self.DataSourcePopup.Value;
            else
                str=self.DataSourcePopup.String{self.DataSourcePopup.Value};
            end
        end

        function set.DataSource(self,Value)
            str=self.DataSourcePopup.Value;
            if self.Parent.View.UseAppContainer
                self.DataSourcePopup.Value=Value;
            else
                switch str
                case 'File'
                    self.DataSourcePopup.Value=1;
                case 'Object'
                    self.DataSourcePopup.Value=2;
                end
            end
        end

        function val=get.WkSpcObj(self)
            if self.Parent.View.UseAppContainer
                val=self.WkSpcEdit.Value;
            else
                val=self.WkSpcEdit.String;
            end
        end

        function set.WkSpcObj(self,val)
            if self.Parent.View.UseAppContainer
                self.WkSpcEdit.Value=val;
            else
                self.WkSpcEdit.String=val;
            end

        end

        function resetDialogAccess(self)

            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.NFEdit.BackgroundColor=whiteColor;
            self.OIP2Edit.BackgroundColor=whiteColor;
            self.OIP3Edit.BackgroundColor=whiteColor;
            self.ZinEdit.BackgroundColor=whiteColor;
            self.ZoutEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.UseNetworkDataPopup.BackgroundColor=whiteColor;
            self.FileNameEdit.BackgroundColor=whiteColor;
            self.DataSourcePopup.BackgroundColor=whiteColor;
            self.WkSpcEdit.BackgroundColor=whiteColor;
            self.OtherPropertiesChanged=0;
            self.NameChanged=0;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
        end

        function setFigureKeyPress(self)




            if self.Parent.View.UseAppContainer
                set(self.Parent.View.ParametersFig.Figure,...
                'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                self.Listeners.KeyPress=addlistener(...
                self.Parent.View.ParametersFig.Figure,...
                'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
            else
                set(self.Parent.View.ParametersFig,...
                'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                self.Listeners.KeyPress=addlistener(...
                self.Parent.View.ParametersFig,...
                'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
            end
        end

        function enableUIControls(self,val)





            if~val
                val='off';
            else
                val='on';
            end
            self.NameEdit.Enable=val;
            self.GainEdit.Enable=val;
            self.NFEdit.Enable=val;
            self.OIP2Edit.Enable=val;
            self.OIP3Edit.Enable=val;
            self.ZinEdit.Enable=val;
            self.ZoutEdit.Enable=val;
            self.GainEdit.Enable=val;
            self.UseNetworkDataPopup.Enable=val;
            self.FileNameEdit.Enable=val;
            self.DataSourcePopup.Enable=val;
            self.WkSpcEdit.Enable=val;
            if strcmpi(val,'on')
                if self.OtherPropertiesChanged||...
                    self.NameChanged
                    self.ApplyLabel.Enable='on';
                else
                    self.ApplyLabel.Enable='off';
                end
            else
                self.ApplyLabel.Enable='off';
            end
        end

        function browseAction(self)
            touchstoneFiles=...
            'All Touchstone files (*.s2p, *.y2p, *.z2p, *.h2p, *.g2p)';
            [filename,pathname]=uigetfile(...
            {'*.s2p','S-parameter files (*.s2p)';...
            '*.s2p;*.y2p;*.z2p;*.h2p;*.g2p',touchstoneFiles;...
            '*.*','All files (*.*)'},...
            'Select 2-port Touchstone file',pwd);
            wasCanceled=isequal(filename,0)||...
            isequal(pathname,0);
            if wasCanceled
                return;
            end
            self.FileName=[pathname,filename];
            valueChangedColor=[1,0.96,0.88];
            self.FileNameEdit.BackgroundColor=valueChangedColor;
            self.OtherPropertiesChanged=1;
            self.ApplyLabel.Enable='on';
        end
    end

    methods(Access=private)


        function createUIControls(self)


            userData=struct(...
            'Dialog','amplifier',...
            'Stage',self.Parent.SelectedStage);
            if self.Parent.View.UseAppContainer

                self.Layout=uigridlayout(...
                'Parent',self.Parent.View.ParametersFig.Figure,...
                'Scrollable','on',...
                'Tag','Layout',...
                'RowSpacing',3,...
                'ColumnSpacing',2,...
                'Visible','off');

                self.Title=uilabel(...
                'UserData',userData,...
                'Tag','TitleLabel',...
                'Parent',self.Layout,...
                'Text',' Amplifier Element',...
                'FontColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');

                self.NameLabel=uilabel(...
                'UserData',userData,...
                'Tag','NameLabel',...
                'Parent',self.Layout,...
                'Text','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uieditfield(...
                'UserData',userData,...
                'Tag','NameEditField',...
                'Parent',self.Layout,...
                'Value','Amplifier',...
                'HorizontalAlignment','left');

                self.GainLabel=uilabel(...
                'UserData',userData,...
                'Tag','GainLabel',...
                'Parent',self.Layout,...
                'Text','Available Power Gain',...
                'HorizontalAlignment','right');
                self.GainEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','GainEditField',...
                'Parent',self.Layout,...
                'Value',0,...
                'HorizontalAlignment','left');
                self.GainUnits=uilabel(...
                'UserData',userData,...
                'Tag','GainUnitsLabel',...
                'Parent',self.Layout,...
                'Text','dB',...
                'HorizontalAlignment','left');

                self.NFLabel=uilabel(...
                'UserData',userData,...
                'Tag','NFLabel',...
                'Parent',self.Layout,...
                'Text','Noise Figure',...
                'HorizontalAlignment','right');
                self.NFEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','NFEditField',...
                'Parent',self.Layout,...
                'Value',0,...
                'HorizontalAlignment','left');
                self.NFUnits=uilabel(...
                'UserData',userData,...
                'Tag','NFUnitsLabel',...
                'Parent',self.Layout,...
                'Text','dB',...
                'HorizontalAlignment','left');

                self.OIP2Label=uilabel(...
                'UserData',userData,...
                'Tag','OIP2Label',...
                'Parent',self.Layout,...
                'Text',...
                'OIP2',...
                'HorizontalAlignment','right');
                self.OIP2Edit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','OIP2EditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'HorizontalAlignment','left');
                self.OIP2Units=uilabel(...
                'UserData',userData,...
                'Tag','OIP2UnitsLabel',...
                'Parent',self.Layout,...
                'Text','dBm',...
                'HorizontalAlignment','left');

                self.OIP3Label=uilabel(...
                'UserData',userData,...
                'Tag','OIP3Label',...
                'Parent',self.Layout,...
                'Text',...
                'OIP3',...
                'HorizontalAlignment','right');
                self.OIP3Edit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','OIP3EditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'Tag',...
                'OIP3',...
                'HorizontalAlignment','left');
                self.OIP3Units=uilabel(...
                'UserData',userData,...
                'Tag','OIP3UnitsLabel',...
                'Parent',self.Layout,...
                'Text','dBm',...
                'HorizontalAlignment','left');

                self.ZinLabel=uilabel(...
                'UserData',userData,...
                'Tag','ZinLabel',...
                'Parent',self.Layout,...
                'Text','Input Impedance',...
                'HorizontalAlignment','right');
                self.ZinEdit=uieditfield(...
                'text',...
                'UserData',userData,...
                'Tag','ZinEditField',...
                'Parent',self.Layout,...
                'Value','50',...
                'Tag',...
                'Zin',...
                'HorizontalAlignment','left');
                self.ZinUnits=uilabel(...
                'UserData',userData,...
                'Tag','ZinUnitsLabel',...
                'Parent',self.Layout,...
                'Text','Ohm',...
                'HorizontalAlignment','left');

                self.ZoutLabel=uilabel(...
                'UserData',userData,...
                'Tag','ZoutLabel',...
                'Parent',self.Layout,...
                'Text','Output Impedance',...
                'HorizontalAlignment','right');
                self.ZoutEdit=uieditfield(...
                'text',...
                'UserData',userData,...
                'Tag','ZoutEditField',...
                'Parent',self.Layout,...
                'Value','50',...
                'Tag',...
                'Zout',...
                'HorizontalAlignment','left');
                self.ZoutUnits=uilabel(...
                'UserData',userData,...
                'Tag','ZoutUnitsLabel',...
                'Parent',self.Layout,...
                'Text','Ohm',...
                'HorizontalAlignment','left');
                self.UseNetworkDataLabel=uilabel(...
                'UserData',userData,...
                'Tag','UseNetworkDataLabel',...
                'Parent',self.Layout,...
                'Text','Input Method',...
                'HorizontalAlignment','right');
                self.UseNetworkDataPopup=uidropdown(...
                'UserData',userData,...
                'Tag','UseNetworkDataDropdown',...
                'Parent',self.Layout,...
                'Items',{'Gain and Impedance','Network Parameters'},...
                'Value','Gain and Impedance');
                self.FileNameLabel=uilabel(...
                'UserData',userData,...
                'Tag','FileNameLabel',...
                'Parent',self.Layout,...
                'Text','File Name',...
                'HorizontalAlignment','right');
                self.FileNameEdit=uieditfield(...
                'UserData',userData,...
                'Tag','FileNameEditField',...
                'Parent',self.Layout,...
                'Value','default.s2p',...
                'HorizontalAlignment','left');
                self.FileNameButton=uibutton(...
                'UserData',userData,...
                'Tag','FileNameButton',...
                'Parent',self.Layout,...
                'Text',' Browse ');
                self.DataSourceLabel=uilabel(...
                'UserData',userData,...
                'Tag','DataSourceLabel',...
                'Parent',self.Layout,...
                'Text','Data Source',...
                'HorizontalAlignment','right');
                self.DataSourcePopup=uidropdown(...
                'UserData',userData,...
                'Tag','DataSourceDropdown',...
                'Parent',self.Layout,...
                'Items',{'File','Object'},...
                'Value','File');

                self.WkSpcLabel=uilabel(...
                'UserData',userData,...
                'Tag','WkSpcLabel',...
                'Parent',self.Layout,...
                'Text','Network Parameters',...
                'HorizontalAlignment','right',...
                'Visible','off');
                self.WkSpcEdit=uieditfield(...
                'UserData',userData,...
                'Tag','WkSpcEditField',...
                'Parent',self.Layout,...
                'Value','',...
                'HorizontalAlignment','left',...
                'Visible','off');

                self.ApplyLabel=uibutton(...
                'Tag','ApplyButton',...
                'Parent',self.Layout,...
                'Text','Apply',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');

                for i=1:length(self.Layout.RowHeight)
                    self.Layout.RowHeight{i}=29;
                end
            else

                self.Panel=uipanel(...
                'Parent',self.Parent.View.ParametersFig,...
                'Title','',...
                'BorderType','line',...
                'HighlightColor',[.5,.5,.5],...
                'Visible','on',...
                'AutoResizeChildren','off');

                self.Title=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','TitleLabel',...
                'String',' Amplifier Element',...
                'ForegroundColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');

                self.NameLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NameLabel',...
                'String','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Name',...
                'String','Amplifier',...
                'HorizontalAlignment','left');

                self.GainLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','GainLabel',...
                'String','Available Power Gain',...
                'HorizontalAlignment','right');
                self.GainEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Gain',...
                'String','0',...
                'HorizontalAlignment','left');
                self.GainUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','GainUnitsLabel',...
                'String','dB',...
                'HorizontalAlignment','left');

                self.NFLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NFLabel',...
                'String','Noise Figure',...
                'HorizontalAlignment','right');
                self.NFEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','NF',...
                'String','0',...
                'HorizontalAlignment','left');
                self.NFUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NFUnitsLabel',...
                'String','dB',...
                'HorizontalAlignment','left');

                self.OIP2Label=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP2Label',...
                'String',...
                'OIP2',...
                'HorizontalAlignment','right');
                self.OIP2Edit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','OIP2',...
                'String','Inf',...
                'HorizontalAlignment','left');
                self.OIP2Units=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP2UnitsLabel',...
                'String','dBm',...
                'HorizontalAlignment','left');

                self.OIP3Label=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP3Label',...
                'String',...
                'OIP3',...
                'HorizontalAlignment','right');
                self.OIP3Edit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','OIP3',...
                'String','Inf',...
                'HorizontalAlignment','left');
                self.OIP3Units=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP3UnitsLabel',...
                'String','dBm',...
                'HorizontalAlignment','left');

                self.ZinLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZinLabel',...
                'String','Input Impedance',...
                'HorizontalAlignment','right');
                self.ZinEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Zin',...
                'String','50',...
                'HorizontalAlignment','left');
                self.ZinUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZinUnitsLabel',...
                'String','Ohm',...
                'HorizontalAlignment','left');

                self.ZoutLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZoutLabel',...
                'String','Output Impedance',...
                'HorizontalAlignment','right');
                self.ZoutEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Zout',...
                'String','50',...
                'HorizontalAlignment','left');
                self.ZoutUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZoutUnitsLabel',...
                'String','Ohm',...
                'HorizontalAlignment','left');
                self.UseNetworkDataLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','TypeLabel',...
                'String','Input Method',...
                'HorizontalAlignment','right');
                self.UseNetworkDataPopup=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','popup',...
                'String',{'Network Parameters','Gain and Impedance'},...
                'Tag','UseNetworkData',...
                'Value',2,...
                'HorizontalAlignment','left');
                self.FileNameLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','FileNameLabel',...
                'String','File Name',...
                'HorizontalAlignment','right');
                self.FileNameEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','FileName',...
                'String','default.s2p',...
                'HorizontalAlignment','left');
                self.FileNameButton=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','pushbutton',...
                'String',' Browse ',...
                'Tag','FileNameButton');
                self.DataSourceLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'String','Data Source',...
                'HorizontalAlignment','right');
                self.DataSourcePopup=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','popup',...
                'String',{'File','Object'},...
                'Tag','DataSource',...
                'Value',1);

                self.WkSpcLabel=uicontrol(...
                'Parent',self.Panel,...
                'Style','text',...
                'String','Network Parameters',...
                'HorizontalAlignment','right',...
                'Visible','off');
                self.WkSpcEdit=uicontrol(...
                'Parent',self.Panel,...
                'Style','edit',...
                'String','',...
                'Tag','WkSpc',...
                'HorizontalAlignment','left',...
                'Visible','off');

                self.ApplyLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','pushbutton',...
                'String','Apply',...
                'Tag','ApplyTag',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');

            end
        end


        function layoutUIControls(self)


            hspacing=3;
            vspacing=4;
            w1=rf.internal.apps.budget.SystemParametersSection.Width1;
            w2=rf.internal.apps.budget.SystemParametersSection.Width2;
            w3=rf.internal.apps.budget.SystemParametersSection.Width3;
            titleHt=16;
            if self.Parent.View.UseAppContainer
            else
                self.Layout=...
                matlabshared.application.layout.GridBagLayout(...
                self.Panel,...
                'VerticalGap',vspacing,...
                'HorizontalGap',hspacing,...
                'VerticalWeights',[0,0,0,0,0,0,1],...
                'HorizontalWeights',[0,1,0]);
            end

            row=1;
            self.Parent.addTitle(self.Layout,self.Title,row,[1,3],...
            titleHt,hspacing,vspacing,self.Parent.View.UseAppContainer)

            h=24;
            row=row+1;
            self.Parent.addText(self.Layout,self.NameLabel,...
            row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.NameEdit,...
            row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.UseNetworkDataLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addPopup(self.Layout,self.UseNetworkDataPopup,row,2,w2,...
            h,self.Parent.View.UseAppContainer)

            if self.Parent.View.UseAppContainer
                str=self.UseNetworkDataPopup.Value;
            else
                str=self.UseNetworkDataPopup.String{self.UseNetworkDataPopup.Value};
            end

            if strcmpi(str,'Network Parameters')
                if strcmpi(self.DataSource,'File')

                    if~isempty(self.simrfV2_amplifier_design.NoiseData.Frequencies)||isempty(self.FileName)
                        row=row+1;
                        self.Parent.addText(self.Layout,self.DataSourceLabel,row,1,w1,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addEdit(self.Layout,self.DataSourcePopup,row,2,w2,...
                        h,self.Parent.View.UseAppContainer)

                        row=row+1;
                        self.Parent.addText(self.Layout,self.FileNameLabel,row,1,w1,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addEdit(self.Layout,self.FileNameEdit,row,2,w2,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addButton(self.Layout,self.FileNameButton,row,3,w3,...
                        h,self.Parent.View.UseAppContainer)
                        self.FileNameEdit.BackgroundColor=[1,0.96,0.88];
                    else

                        row=row+1;
                        self.Parent.addText(self.Layout,self.DataSourceLabel,row,1,w1,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addEdit(self.Layout,self.DataSourcePopup,row,2,w2,...
                        h,self.Parent.View.UseAppContainer)

                        row=row+1;
                        self.Parent.addText(self.Layout,self.FileNameLabel,row,1,w1,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addEdit(self.Layout,self.FileNameEdit,row,2,w2,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addButton(self.Layout,self.FileNameButton,row,3,w3,...
                        h,self.Parent.View.UseAppContainer)
                        self.FileNameEdit.BackgroundColor=[1,0.96,0.88];

                        row=row+1;
                        self.Parent.addText(self.Layout,self.NFLabel,...
                        row,1,w1,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addEdit(self.Layout,self.NFEdit,...
                        row,2,w2,...
                        h,self.Parent.View.UseAppContainer)
                        self.Parent.addText(self.Layout,self.NFUnits,...
                        row,3,w3,...
                        h,self.Parent.View.UseAppContainer)
                    end

                    row=row+1;
                    self.Parent.addText(self.Layout,self.OIP2Label,...
                    row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.OIP2Edit,...
                    row,2,w2,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addText(self.Layout,self.OIP2Units,...
                    row,3,w3,...
                    h,self.Parent.View.UseAppContainer)

                    row=row+1;
                    self.Parent.addText(self.Layout,self.OIP3Label,...
                    row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.OIP3Edit,...
                    row,2,w2,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addText(self.Layout,self.OIP3Units,...
                    row,3,w3,...
                    h,self.Parent.View.UseAppContainer)
                else
                    row=row+1;
                    self.Parent.addText(self.Layout,self.DataSourceLabel,row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.DataSourcePopup,row,2,w2,...
                    h,self.Parent.View.UseAppContainer)


                    row=row+1;
                    self.Parent.addText(self.Layout,self.WkSpcLabel,row,1,w1,h,...
                    self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.WkSpcEdit,row,2,w2,h,...
                    self.Parent.View.UseAppContainer)
                    self.WkSpcEdit.BackgroundColor=[1,0.96,0.88];


                    row=row+1;
                    self.Parent.addText(self.Layout,self.NFLabel,...
                    row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.NFEdit,...
                    row,2,w2,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addText(self.Layout,self.NFUnits,...
                    row,3,w3,...
                    h,self.Parent.View.UseAppContainer)


                    row=row+1;
                    self.Parent.addText(self.Layout,self.OIP2Label,...
                    row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.OIP2Edit,...
                    row,2,w2,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addText(self.Layout,self.OIP2Units,...
                    row,3,w3,...
                    h,self.Parent.View.UseAppContainer)

                    row=row+1;
                    self.Parent.addText(self.Layout,self.OIP3Label,...
                    row,1,w1,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addEdit(self.Layout,self.OIP3Edit,...
                    row,2,w2,...
                    h,self.Parent.View.UseAppContainer)
                    self.Parent.addText(self.Layout,self.OIP3Units,...
                    row,3,w3,...
                    h,self.Parent.View.UseAppContainer)

                end
            else

                row=row+1;
                self.Parent.addText(self.Layout,self.GainLabel,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.GainEdit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.GainUnits,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)

                row=row+1;
                self.Parent.addText(self.Layout,self.NFLabel,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.NFEdit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.NFUnits,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)

                row=row+1;
                self.Parent.addText(self.Layout,self.OIP2Label,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.OIP2Edit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.OIP2Units,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)

                row=row+1;
                self.Parent.addText(self.Layout,self.OIP3Label,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.OIP3Edit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.OIP3Units,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)

                row=row+1;
                self.Parent.addText(self.Layout,self.ZinLabel,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.ZinEdit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.ZinUnits,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)

                row=row+1;
                self.Parent.addText(self.Layout,self.ZoutLabel,...
                row,1,w1,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addEdit(self.Layout,self.ZoutEdit,...
                row,2,w2,...
                h,self.Parent.View.UseAppContainer)
                self.Parent.addText(self.Layout,self.ZoutUnits,...
                row,3,w3,...
                h,self.Parent.View.UseAppContainer)
            end

            row=row+1;
            self.Parent.addText(self.Layout,self.ApplyLabel,...
            row,2,w3,...
            h+10,self.Parent.View.UseAppContainer)

            if self.Parent.View.UseAppContainer
                w=500;
                h=500;
                self.Width=sum(w);
                self.Height=max(h(2:end-1))*numel(h(2:end))+(titleHt+2)+10;
                self.Layout.Visible='on';
            else
                [~,~,w,h]=getMinimumSize(self.Layout);
                self.Width=sum(w)+self.Layout.HorizontalGap*(numel(w)+1);
                self.Height=max(h(2:end-1))*numel(h(2:end))+...
                self.Layout.VerticalGap*(numel(h(2:end-1))+1)+(titleHt+2)+10;
            end

        end

        function parameterChanged(self,e)


            i=self.Parent.View.Canvas.SelectIdx;

            if self.Parent.View.UseAppContainer
                valueString='Value';
            else
                valueString='String';
            end

            if strcmpi(e.EventName,'PostSet')||...
                strcmpi(e.EventName,'ValueChanged')||...
                strcmpi(e.EventName,'ButtonPushed')

                if self.Parent.View.UseAppContainer
                    name=e.Source.Tag;
                    uiObject=e.Source;
                    uiObjectType=class(uiObject);
                else
                    name=e.AffectedObject.Tag;
                    uiObject=e.AffectedObject;
                    uiObjectType=uiObject.Style;
                end
                key='';
            elseif strcmpi(e.EventName,'KeyPress')

                name=e.Source.Tag;
                uiObject=e.Source;
                if self.Parent.View.UseAppContainer
                    a=get(self.Parent.View.ParametersFig.Figure,'CurrentCharacter');
                    uiObjectType=class(uiObject);
                else
                    a=get(self.Parent.View.ParametersFig,'CurrentCharacter');
                    uiObjectType=uiObject.Style;
                end
                if isempty(a)


                    return;
                end
                key=e.Key;
                if any(strcmpi(key,{'leftarrow',...
                    'uparrow',...
                    'downarrow',...
                    'rightarrow'}))

                    return;
                end
            end
            drawnow;

            applyflag=1;
            valueChangedColor=[1,0.96,0.88];
            if~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                if~any(strcmpi(uiObjectType,{'popupmenu','matlab.ui.control.DropDown'}))
                    if~strcmpi(key,'return')



                        if strcmpi(name,'NameEditField')||strcmpi(name,'Name')
                            self.NameChanged=1;
                        elseif~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                            self.OtherPropertiesChanged=1;
                        end
                    end
                end
            end
            if~strcmpi(key,'return')


                switch name
                case{'NameEditField','Name'}
                    self.NameEdit.BackgroundColor=valueChangedColor;
                case{'GainEditField','Gain'}
                    self.GainEdit.BackgroundColor=valueChangedColor;
                case{'NFEditField','NF'}
                    self.NFEdit.BackgroundColor=valueChangedColor;
                case{'OIP3EditField','OIP3'}
                    self.OIP3Edit.BackgroundColor=valueChangedColor;
                case{'OIP2EditField','OIP2'}
                    self.OIP2Edit.BackgroundColor=valueChangedColor;
                case{'ZinEditField','Zin'}
                    self.ZinEdit.BackgroundColor=valueChangedColor;
                case{'ZoutEditField','Zout'}
                    self.ZoutEdit.BackgroundColor=valueChangedColor;
                case{'FileNameEditField','FileName'}
                    self.FileNameEdit.BackgroundColor=valueChangedColor;
                case{'UseNetworkDataDropdown','UseNetworkData'}
                    if self.Parent.View.UseAppContainer
                        str=self.UseNetworkDataPopup.Value;
                    else
                        str=self.UseNetworkDataPopup.String{self.UseNetworkDataPopup.Value};
                    end

                    if strcmpi(str,'Gain and Impedance')

                        if self.Parent.View.UseAppContainer
                            self.GainEdit.Value=0;
                            self.GainEdit.BackgroundColor=[1,0.96,0.88];
                            self.NFEdit.Value=0;
                            self.NFEdit.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.Value=Inf;
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.Value=Inf;
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.ZinEdit.Value='50';
                            self.ZinEdit.BackgroundColor=[1,0.96,0.88];
                            self.ZoutEdit.Value='50';
                            self.ZoutEdit.BackgroundColor=[1,0.96,0.88];

                        else
                            self.GainEdit.String=num2str(0);
                            self.GainEdit.BackgroundColor=[1,0.96,0.88];
                            self.NFEdit.String=num2str(0);
                            self.NFEdit.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.String=num2str(Inf);
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.String=num2str(Inf);
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.ZinEdit.String=num2str(50);
                            self.ZinEdit.BackgroundColor=[1,0.96,0.88];
                            self.ZoutEdit.String=num2str(50);
                            self.ZoutEdit.BackgroundColor=[1,0.96,0.88];
                        end
                    else
                        if self.Parent.View.UseAppContainer
                            self.FileNameEdit.Value='default.s2p';
                            self.FileNameEdit.BackgroundColor=[1,0.96,0.88];
                            self.DataSourcePopup.Value='File';
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.Value=Inf;
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.Value=Inf;
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                        else
                            self.FileNameEdit.String='default.s2p';
                            self.FileNameEdit.BackgroundColor=[1,0.96,0.88];
                            self.DataSourcePopup.Value=1;
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.String=num2str(Inf);
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.String=num2str(Inf);
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                        end

                    end
                    self.UseNetworkDataPopup.BackgroundColor=valueChangedColor;
                    self.ApplyLabel.Enable='on';
                    parameterPaneChange(self)

                    layoutUIControls(self);
                    if self.Parent.View.UseAppContainer
                    else
                        add(...
                        self.Parent.Layout,self.Panel,2,1,...
                        'MinimumWidth',self.Width,...
                        'Fill','Horizontal',...
                        'MinimumHeight',self.Height,...
                        'Anchor','North')
                    end
                case{'DataSourceDropdown','DataSource'}

                    if isempty(self.WkSpcEdit.(valueString))
                        applyflag=0;
                        self.ApplyLabel.Enable='off';
                    else
                        applyflag=1;
                        self.ApplyLabel.Enable='on';
                    end

                    if self.Parent.View.UseAppContainer
                        str=self.DataSourcePopup.Value;
                    else
                        str=self.DataSourcePopup.String{self.DataSourcePopup.Value};
                    end

                    if strcmpi(str,'File')
                        if self.Parent.View.UseAppContainer
                            self.FileNameEdit.Value='default.s2p';
                            self.FileNameEdit.BackgroundColor=[1,0.96,0.88];
                            self.DataSourcePopup.Value='File';
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.Value=Inf;
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.Value=Inf;
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.ApplyLabel.Enable='on';
                        else
                            self.FileNameEdit.String='default.s2p';
                            self.FileNameEdit.BackgroundColor=[1,0.96,0.88];
                            self.DataSourcePopup.Value=1;
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.String=num2str(Inf);
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.String=num2str(Inf);
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.ApplyLabel.Enable='on';
                        end
                    else
                        if self.Parent.View.UseAppContainer
                            self.DataSourcePopup.Value='Object';
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.WkSpcEdit.Value=num2str(self.Parent.View.Canvas.SelectedElement.VarName);
                            self.ApplyLabel.Enable='off';
                            self.WkSpcEdit.BackgroundColor=[1,0.96,0.88];
                            self.NFEdit.Value=0;
                            self.NFEdit.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.Value=Inf;
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.Value=Inf;
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.SparametersObj=[];
                        else
                            self.WkSpcEdit.String=self.Parent.View.Canvas.SelectedElement.VarName;

                            self.WkSpcEdit.BackgroundColor=[1,0.96,0.88];
                            self.DataSourcePopup.Value=2;
                            self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];
                            self.NFEdit.String=num2str(0);
                            self.NFEdit.BackgroundColor=[1,0.96,0.88];
                            self.OIP2Edit.String=num2str(Inf);
                            self.OIP2Edit.BackgroundColor=[1,0.96,0.88];
                            self.OIP3Edit.String=num2str(Inf);
                            self.OIP3Edit.BackgroundColor=[1,0.96,0.88];
                            self.SparametersObj=[];
                        end
                    end
                    self.DataSourcePopup.BackgroundColor=[1,0.96,0.88];

                    parameterPaneChange(self)

                    layoutUIControls(self);

                    if self.Parent.View.UseAppContainer
                    else
                        add(...
                        self.Parent.Layout,self.Panel,2,1,...
                        'MinimumWidth',self.Width,...
                        'Fill','Horizontal',...
                        'MinimumHeight',self.Height,...
                        'Anchor','North')
                    end
                case{'WkSpcEditField','WkSpc'}
                    self.WkSpcEdit.BackgroundColor=valueChangedColor;
                case{'ApplyButton','ApplyTag'}
                    try
                        applyflag=0;
                        applyFunction(self);
                    catch me
                        if strcmpi(me.identifier,'MATLAB:m_incomplete_statement')
                            message='Network Parameters value must not be empty';
                            h=errordlg(message,'Error Dialog','modal');
                        else
                            h=errordlg(me.message,'Error Dialog','modal');
                        end
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
            if self.IsReturnKey
                try
                    applyflag=0;
                    self.applyFunction();
                catch me
                    if strcmpi(me.identifier,'MATLAB:m_incomplete_statement')
                        message='Network Parameters value must not be empty';
                        h=errordlg(message,'Error Dialog','modal');
                    else
                        h=errordlg(me.message,'Error Dialog','modal');
                    end
                    uiwait(h)
                    self.Parent.View.enableActions(true);
                end
            end
            self.IsReturnKey=0;
            if applyflag

                self.ApplyLabel.Enable='on';
                self.Parent.View.setStatusBarMsg(...
                'Click ''Apply'' or hit ''Enter'' to update Amplifier parameters.');
                if self.Parent.View.UseAppContainer
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyButton','off'));
                else
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyTag','off'));
                end
            end
        end

        function applyFunction(self)


            if self.Parent.View.UseAppContainer
                valueString='Value';
            else
                valueString='String';
            end
            if~self.NameChanged&&~self.OtherPropertiesChanged

                self.IsReturnKey=0;
                i=self.Parent.View.Canvas.SelectIdx;
                if self.Parent.View.UseAppContainer
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,'ApplyButton','inactive'));
                else
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,'ApplyTag','inactive'));
                end
                return;
            end
            self.Parent.View.enableActions(false);
            i=self.Parent.View.Canvas.SelectIdx;
            amplifierobj=self.simrfV2_amplifier_design();
            if self.Parent.View.UseAppContainer
                self.Parent.View.Canvas.SelectedElement.VarName=self.WkSpcEdit.Value;
            else
                self.Parent.View.Canvas.SelectedElement.VarName=self.WkSpcEdit.String;
            end
            parameterPaneChange(self)
            layoutUIControls(self)
            if self.Parent.View.UseAppContainer
            else
                add(...
                self.Parent.Layout,self.Panel,2,1,...
                'MinimumWidth',self.Width,...
                'Fill','Horizontal',...
                'MinimumHeight',self.Height,...
                'Anchor','North')
            end

            if self.Parent.View.UseAppContainer
                self.Parent.notify('DisableCanvas',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,'ApplyButton','inactive'));
            else
                self.Parent.notify('DisableCanvas',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,'ApplyTag','inactive'));
            end
            if self.NameChanged&&~self.OtherPropertiesChanged

                self.Parent.notify('ElementParameterChanged',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Name',self.NameEdit.(valueString)));
            else


                if self.Parent.View.UseAppContainer
                    self.Parent.notify('ElementParameterChanged',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyButton',amplifierobj));
                else
                    self.Parent.notify('ElementParameterChanged',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyTag',amplifierobj));
                end
            end
            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.NFEdit.BackgroundColor=whiteColor;
            self.OIP2Edit.BackgroundColor=whiteColor;
            self.OIP3Edit.BackgroundColor=whiteColor;
            self.ZinEdit.BackgroundColor=whiteColor;
            self.ZoutEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.UseNetworkDataPopup.BackgroundColor=whiteColor;
            self.FileNameEdit.BackgroundColor=whiteColor;
            self.DataSourcePopup.BackgroundColor=whiteColor;
            self.WkSpcEdit.BackgroundColor=whiteColor;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
            enableIP2(self.Parent.View.Toolstrip,false);
            self.NameChanged=0;
            self.OtherPropertiesChanged=0;
            self.IsReturnKey=0;
            self.Parent.View.enableActions(true);
        end

        function parameterPaneChange(self)

            if self.Parent.View.UseAppContainer
                str=self.UseNetworkDataPopup.Value;
            else
                str=self.UseNetworkDataPopup.String{self.UseNetworkDataPopup.Value};
            end

            if strcmpi(str,'Network Parameters')
                if strcmpi(self.DataSource,'File')

                    if~isempty(self.simrfV2_amplifier_design.NoiseData.Frequencies)||isempty(self.FileName)

                        self.NFLabel.Visible='off';
                        self.NFEdit.Visible='off';
                        self.NFUnits.Visible='off';


                        self.WkSpcLabel.Visible='off';
                        self.WkSpcEdit.Visible='off';

                        self.FileNameLabel.Visible='on';
                        self.FileNameEdit.Visible='on';
                        self.FileNameButton.Visible='on';

                        self.DataSourceLabel.Visible='on';
                        self.DataSourcePopup.Visible='on';
                    else


                        self.WkSpcLabel.Visible='off';
                        self.WkSpcEdit.Visible='off';

                        self.FileNameLabel.Visible='on';
                        self.FileNameEdit.Visible='on';
                        self.FileNameButton.Visible='on';

                        self.DataSourceLabel.Visible='on';
                        self.DataSourcePopup.Visible='on';

                        self.NFLabel.Visible='on';
                        self.NFEdit.Visible='on';
                        self.NFUnits.Visible='on';
                    end
                    self.OIP3Label.Visible='on';
                    self.OIP3Edit.Visible='on';
                    self.OIP3Units.Visible='on';

                    self.OIP2Label.Visible='on';
                    self.OIP2Edit.Visible='on';
                    self.OIP2Units.Visible='on';

                    self.GainLabel.Visible='off';
                    self.GainEdit.Visible='off';
                    self.GainUnits.Visible='off';

                    self.ZinLabel.Visible='off';
                    self.ZinEdit.Visible='off';
                    self.ZinUnits.Visible='off';

                    self.ZoutLabel.Visible='off';
                    self.ZoutEdit.Visible='off';
                    self.ZoutUnits.Visible='off';
                else
                    self.GainLabel.Visible='off';
                    self.GainEdit.Visible='off';
                    self.GainUnits.Visible='off';

                    self.ZinLabel.Visible='off';
                    self.ZinEdit.Visible='off';
                    self.ZinUnits.Visible='off';

                    self.ZoutLabel.Visible='off';
                    self.ZoutEdit.Visible='off';
                    self.ZoutUnits.Visible='off';

                    self.OIP3Label.Visible='on';
                    self.OIP3Edit.Visible='on';
                    self.OIP3Units.Visible='on';

                    self.OIP2Label.Visible='on';
                    self.OIP2Edit.Visible='on';
                    self.OIP2Units.Visible='on';

                    self.FileNameLabel.Visible='off';
                    self.FileNameEdit.Visible='off';
                    self.FileNameButton.Visible='off';

                    self.DataSourceLabel.Visible='on';
                    self.DataSourcePopup.Visible='on';

                    self.NFLabel.Visible='on';
                    self.NFEdit.Visible='on';
                    self.NFUnits.Visible='on';


                    self.WkSpcLabel.Visible='on';
                    self.WkSpcEdit.Visible='on';

                end
            else
                self.GainLabel.Visible='on';
                self.GainEdit.Visible='on';
                self.GainUnits.Visible='on';

                self.ZinLabel.Visible='on';
                self.ZinEdit.Visible='on';
                self.ZinUnits.Visible='on';

                self.ZoutLabel.Visible='on';
                self.ZoutEdit.Visible='on';
                self.ZoutUnits.Visible='on';

                self.NFLabel.Visible='on';
                self.NFEdit.Visible='on';
                self.NFUnits.Visible='on';

                self.OIP3Label.Visible='on';
                self.OIP3Edit.Visible='on';
                self.OIP3Units.Visible='on';

                self.OIP2Label.Visible='on';
                self.OIP2Edit.Visible='on';
                self.OIP2Units.Visible='on';

                self.FileNameLabel.Visible='off';
                self.FileNameEdit.Visible='off';
                self.FileNameButton.Visible='off';

                self.DataSourceLabel.Visible='off';
                self.DataSourcePopup.Visible='off';


                self.WkSpcLabel.Visible='off';
                self.WkSpcEdit.Visible='off';
            end
        end

        function FigKeyEvent(self,ev)


            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.AmplifierDialog')
                key=ev.Key;
                switch key
                case 'return'
                    self.IsReturnKey=1;
                end
            end
        end

        function FigKeyEventCanvas(self,ev)


            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.AmplifierDialog')
                key=ev.Key;
                switch key
                case 'return'
                    try
                        self.applyFunction();
                    catch me
                        h=errordlg(me.message,'Error Dialog','modal');
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
        end


        function addListeners(self)


            if self.Parent.View.UseAppContainer
                callbackFcn='ValueChangedFcn';
                self.ApplyLabel.ButtonPushedFcn=@(h,e)parameterChanged(self,e);
                self.NameEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.GainEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.NFEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.OIP3Edit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.OIP2Edit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.ZinEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.ZoutEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.WkSpcEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.UseNetworkDataPopup.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.FileNameEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.DataSourcePopup.(callbackFcn)=@(h,e)parameterChanged(self,e);
            else
                callbackFcn='KeyPressFcn';
                self.Listeners.Apply=addlistener(self.ApplyLabel,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
                self.NameEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.GainEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.NFEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.OIP3Edit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.OIP2Edit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.ZinEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.ZoutEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.WkSpcEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.Listeners.UseNetworkData=addlistener(self.UseNetworkDataPopup,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
                self.FileNameEdit.(callbackFcn)=@(h,e)parameterChanged(self,e);
                self.Listeners.DataSource=addlistener(self.DataSourcePopup,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
            end
        end

        function amplifierobj=simrfV2_amplifier_design(self)

            if self.Parent.View.UseAppContainer
                str=self.UseNetworkDataPopup.Value;
            else
                str=self.UseNetworkDataPopup.String{self.UseNetworkDataPopup.Value};
            end

            if strcmpi(str,'Network Parameters')
                if strcmpi(self.DataSource,'File')
                    amplifierobj=amplifier(...
                    'Name',self.Name,...
                    'FileName',self.FileName,...
                    'NF',self.NF,...
                    'OIP2',self.OIP2,...
                    'OIP3',self.OIP3);
                else
                    if self.Parent.View.UseAppContainer
                        sObj=evalin('base',self.WkSpcEdit.Value);
                        self.SparametersObj=sObj;
                        amplifierobj=amplifier('Name',self.Name,...
                        'NetworkData',self.SparametersObj,...
                        'NF',self.NF,...
                        'OIP2',self.OIP2,...
                        'OIP3',self.OIP3);
                    else
                        sObj=evalin('base',self.WkSpcEdit.String);
                        self.SparametersObj=sObj;
                        amplifierobj=amplifier('Name',self.Name,...
                        'NetworkData',self.SparametersObj,...
                        'NF',self.NF,...
                        'OIP2',self.OIP2,...
                        'OIP3',self.OIP3);
                    end

                end
            else
                amplifierobj=amplifier(...
                'Name',self.Name,...
                'Gain',self.Gain,...
                'NF',self.NF,...
                'OIP2',self.OIP2,...
                'OIP3',self.OIP3,...
                'Zin',self.Zin,...
                'Zout',self.Zout,...
                'UseNetworkData',self.UseNetworkData);
            end
        end
    end
end




