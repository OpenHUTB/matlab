classdef ModulatorDialog<handle






    properties
Parent
Panel
Layout
        Width=0
        Height=0
Listeners
    end

    properties(Dependent)
Name
Gain
NF
OIP2
OIP3
LO
ConverterType
Zin
Zout
    end

    properties(Access=private)
Title
NameLabel
NameEdit
GainLabel
GainEdit
GainUnits
NFLabel
NFEdit
NFUnits
OIP2Label
OIP2Edit
OIP2Units
OIP3Label
OIP3Edit
OIP3Units
LOLabel
LOEdit
LOUnits
ConverterTypeLabel
ConverterTypePopup
ZinLabel
ZinEdit
ZinUnits
ZoutLabel
ZoutEdit
ZoutUnits
ApplyLabel
        IsReturnKey=0
        NameChanged=0
        OtherPropertiesChanged=0
    end

    methods


        function self=ModulatorDialog(parent)
            if nargin==0
                parent=figure;
            end
            self.Parent=parent;
            createUIControls(self)
            layoutUIControls(self)
            addListeners(self)
        end
    end

    methods


        function str=get.Name(self)
            if self.Parent.View.UseAppContainer
                str=self.NameEdit.Value;
            else
                str=self.NameEdit.String;
            end
        end

        function set.Name(self,str)
            if self.Parent.View.UseAppContainer
                self.NameEdit.Value=str;
            else
                self.NameEdit.String=str;
            end
        end

        function val=get.Gain(self)
            if self.Parent.View.UseAppContainer
                val=self.GainEdit.Value;
            else
                val=str2num(self.GainEdit.String);%#ok<*ST2NM>
            end
        end

        function set.Gain(self,val)
            if self.Parent.View.UseAppContainer
                self.GainEdit.Value=val;
            else
                self.GainEdit.String=num2str(val);
            end
        end

        function val=get.NF(self)
            if self.Parent.View.UseAppContainer
                val=self.NFEdit.Value;
            else
                val=str2num(self.NFEdit.String);
            end
        end

        function set.NF(self,val)
            if self.Parent.View.UseAppContainer
                self.NFEdit.Value=val;
            else
                self.NFEdit.String=num2str(val);
            end
        end

        function val=get.OIP2(self)
            if self.Parent.View.UseAppContainer
                val=self.OIP2Edit.Value;
            else
                val=str2num(self.OIP2Edit.String);
            end
        end

        function set.OIP2(self,val)
            if self.Parent.View.UseAppContainer
                self.OIP2Edit.Value=val;
            else
                self.OIP2Edit.String=num2str(val);
            end
        end

        function val=get.OIP3(self)
            if self.Parent.View.UseAppContainer
                val=self.OIP3Edit.Value;
            else
                val=str2num(self.OIP3Edit.String);
            end
        end

        function set.OIP3(self,val)
            if self.Parent.View.UseAppContainer
                self.OIP3Edit.Value=val;
            else
                self.OIP3Edit.String=num2str(val);
            end
        end

        function freq=get.LO(self)
            if self.Parent.View.UseAppContainer
                fac=1e3^(find(strcmpi(self.LOUnits.Items,self.LOUnits.Value))-1);
                freq=fac*self.LOEdit.Value;
            else
                fac=1e3^(self.LOUnits.Value-1);
                freq=fac*str2num(self.LOEdit.String);
            end
        end

        function set.LO(self,freq)
            [y,e,u]=engunits(freq);
            i=strcmp(u,{'','k','M','G','T'});
            if self.Parent.View.UseAppContainer
                if any(i)
                    self.LOEdit.Value=y;
                    self.LOUnits.Value=self.LOUnits.Items{i};
                elseif e<...
1e-12
                    self.LOEdit.Value=freq*1e-12;
                    self.LOUnits.Value='THz';
                else
                    self.LOEdit.Value=freq;
                    self.LOUnits.Value='Hz';
                end
            else
                if any(i)
                    self.LOEdit.String=num2str(y);
                    self.LOUnits.Value=find(i);
                elseif e<...
1e-12
                    self.LOEdit.String=num2str(freq*1e-12);
                    self.LOUnits.Value=5;
                else
                    self.LOEdit.String=num2str(freq);
                    self.LOUnits.Value=1;
                end
            end
        end

        function str=get.ConverterType(self)
            if self.Parent.View.UseAppContainer
                str=self.ConverterTypePopup.Value;
            else
                str=self.ConverterTypePopup.String{self.ConverterTypePopup.Value};
            end
        end

        function set.ConverterType(self,str)
            if self.Parent.View.UseAppContainer
                self.ConverterTypePopup.Value=str;
            else
                if strcmp(str,'Down')
                    self.ConverterTypePopup.Value=1;
                else
                    self.ConverterTypePopup.Value=2;
                end
            end
        end

        function val=get.Zin(self)
            if self.Parent.View.UseAppContainer
                val=self.ZinEdit.Value;
            else
                val=str2num(self.ZinEdit.String);
            end
        end

        function set.Zin(self,val)
            if self.Parent.View.UseAppContainer
                self.ZinEdit.Value=val;
            else
                self.ZinEdit.String=num2str(val);
            end
        end

        function val=get.Zout(self)
            if self.Parent.View.UseAppContainer
                val=self.ZoutEdit.Value;
            else
                val=str2num(self.ZoutEdit.String);
            end
        end

        function set.Zout(self,val)
            if self.Parent.View.UseAppContainer
                self.ZoutEdit.Value=val;
            else
                self.ZoutEdit.String=num2str(val);
            end
        end

        function setListenersEnable(self,val)
            self.Listeners.Name.Enabled=val;
            self.Listeners.Gain.Enabled=val;
            self.Listeners.NF.Enabled=val;
            self.Listeners.OIP2.Enabled=val;
            self.Listeners.OIP3.Enabled=val;
            self.Listeners.LO.Enabled=val;
            self.Listeners.LOUnits.Enabled=val;
            self.Listeners.ConverterType.Enabled=val;
            self.Listeners.Zin.Enabled=val;
            self.Listeners.Zout.Enabled=val;
            self.Listeners.Apply.Enabled=val;
        end

        function resetDialogAccess(self)


            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.NFEdit.BackgroundColor=whiteColor;
            self.OIP2Edit.BackgroundColor=whiteColor;
            self.OIP3Edit.BackgroundColor=whiteColor;
            self.LOEdit.BackgroundColor=whiteColor;
            self.ConverterTypePopup.BackgroundColor=whiteColor;
            self.ZinEdit.BackgroundColor=whiteColor;
            self.ZoutEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.ConverterTypePopup.BackgroundColor=whiteColor;
            self.OtherPropertiesChanged=0;
            self.NameChanged=0;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
            i=self.Parent.View.Canvas.SelectIdx;
            if strcmpi(self.ConverterType,'Up')
                self.Parent.notify('IconUpdate',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Type','modulator'));
            else
                self.Parent.notify('IconUpdate',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Type','demodulator'));
            end
        end

        function setFigureKeyPress(self)




            if self.Parent.View.UseAppContainer
                set(self.Parent.View.ParametersFig.Figure,'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                self.Listeners.KeyPress=addlistener(...
                self.Parent.View.ParametersFig.Figure,...
                'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
            else

                if self.Parent.View.UseAppContainer
                    set(self.Parent.View.ParametersFig.Figure,...
                    'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                    self.Listeners.KeyPress=addlistener(...
                    self.Parent.View.ParametersFig.Figure,...
                    'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
                else
                    set(self.Parent.View.ParametersFig,...
                    'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                    self.Listeners.KeyPress=addlistener(...
                    self.Parent.View.ParametersFig,...
                    'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
                end
            end
        end

        function enableUIControls(self,val)




            if val==false
                val='off';
            elseif val==true
                val='on';
            end
            self.NameEdit.Enable=val;
            self.GainEdit.Enable=val;
            self.NFEdit.Enable=val;
            self.OIP2Edit.Enable=val;
            self.OIP3Edit.Enable=val;
            self.LOEdit.Enable=val;
            self.ConverterTypePopup.Enable=val;
            self.ZinEdit.Enable=val;
            self.ZoutEdit.Enable=val;
            if strcmpi(val,'on')
                if self.OtherPropertiesChanged||...
                    self.NameChanged
                    self.ApplyLabel.Enable='on';
                else
                    self.ApplyLabel.Enable='off';
                end
            else
                self.ApplyLabel.Enable='off';
            end
        end
    end

    methods(Access=private)


        function createUIControls(self)


            userData=struct(...
            'Dialog','modulator',...
            'Stage',self.Parent.SelectedStage);
            if self.Parent.View.UseAppContainer

                self.Layout=uigridlayout(...
                'Parent',self.Parent.View.ParametersFig.Figure,...
                'Scrollable','on',...
                'Tag','Layout',...
                'RowSpacing',3,...
                'ColumnSpacing',2,...
                'Visible','off');
                self.Title=uilabel(...
                'UserData',userData,...
                'Tag','TitleLabel',...
                'Parent',self.Layout,...
                'Text',' Modulator Element',...
                'FontColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');
                self.NameLabel=uilabel(...
                'UserData',userData,...
                'Tag','NameLabel',...
                'Parent',self.Layout,...
                'Text','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uieditfield(...
                'UserData',userData,...
                'Tag','NameEditField',...
                'Parent',self.Layout,...
                'Value','Modulator',...
                'HorizontalAlignment','left');
                self.GainLabel=uilabel(...
                'UserData',userData,...
                'Tag','GainLabel',...
                'Parent',self.Layout,...
                'Text','Available Power Gain',...
                'HorizontalAlignment','right');
                self.GainEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','GainEditField',...
                'Parent',self.Layout,...
                'Value',0,...
                'HorizontalAlignment','left');
                self.GainUnits=uilabel(...
                'UserData',userData,...
                'Tag','GainUnitsLabel',...
                'Parent',self.Layout,...
                'Text','dB',...
                'HorizontalAlignment','left');
                self.NFLabel=uilabel(...
                'UserData',userData,...
                'Tag','NFLabel',...
                'Parent',self.Layout,...
                'Text','Noise Figure',...
                'HorizontalAlignment','right');
                self.NFEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','NFEditField',...
                'Parent',self.Layout,...
                'Value',0,...
                'HorizontalAlignment','left');
                self.NFUnits=uilabel(...
                'UserData',userData,...
                'Tag','NFUnitsLabel',...
                'Parent',self.Layout,...
                'Text','dB',...
                'HorizontalAlignment','left');
                self.OIP2Label=uilabel(...
                'UserData',userData,...
                'Tag','OIP2Label',...
                'Parent',self.Layout,...
                'Text',...
                'OIP2',...
                'HorizontalAlignment','right');
                self.OIP2Edit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','OIP2EditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'HorizontalAlignment','left');
                self.OIP2Units=uilabel(...
                'UserData',userData,...
                'Tag','OIP2UnitsLabel',...
                'Parent',self.Layout,...
                'Text','dBm',...
                'HorizontalAlignment','left');
                self.OIP3Label=uilabel(...
                'UserData',userData,...
                'Tag','OIP3Label',...
                'Parent',self.Layout,...
                'Text',...
                'OIP3',...
                'HorizontalAlignment','right');
                self.OIP3Edit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','OIP3UnitsEditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'Tag',...
                'OIP3',...
                'HorizontalAlignment','left');
                self.OIP3Units=uilabel(...
                'UserData',userData,...
                'Tag','OIP3UnitsLabel',...
                'Parent',self.Layout,...
                'Text','dBm',...
                'HorizontalAlignment','left');
                self.LOLabel=uilabel(...
                'UserData',userData,...
                'Tag','LOLabel',...
                'Parent',self.Layout,...
                'Text','LO Frequency',...
                'HorizontalAlignment','right');
                self.LOEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','LOEditField',...
                'Parent',self.Layout,...
                'Value',1,...
                'HorizontalAlignment','left');
                self.LOUnits=uidropdown(...
                'UserData',userData,...
                'Tag','LOUnitsDropdown',...
                'Parent',self.Layout,...
                'Items',{'Hz','kHz','MHz','GHz','THz'},...
                'Value','GHz');
                self.ConverterTypeLabel=uilabel(...
                'UserData',userData,...
                'Tag','TypeLabel',...
                'Parent',self.Layout,...
                'Text','Converter Type',...
                'HorizontalAlignment','right');
                self.ConverterTypePopup=uidropdown(...
                'UserData',userData,...
                'Tag','TypeDropdown',...
                'Parent',self.Layout,...
                'Items',{'Down','Up'},...
                'Value','Up');
                self.ZinLabel=uilabel(...
                'UserData',userData,...
                'Tag','ZinLabel',...
                'Parent',self.Layout,...
                'Text','Input Impedance',...
                'HorizontalAlignment','right');
                self.ZinEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','ZinEditField',...
                'Parent',self.Layout,...
                'Value',50,...
                'HorizontalAlignment','left');
                self.ZinUnits=uilabel(...
                'UserData',userData,...
                'Tag','ZinUnitsLabel',...
                'Parent',self.Layout,...
                'Text','Ohm',...
                'HorizontalAlignment','left');
                self.ZoutLabel=uilabel(...
                'UserData',userData,...
                'Tag','ZoutLabel',...
                'Parent',self.Layout,...
                'Text','Output Impedance',...
                'HorizontalAlignment','right');
                self.ZoutEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','ZoutEditField',...
                'Parent',self.Layout,...
                'Value',50,...
                'Tag',...
                'Zout',...
                'HorizontalAlignment','left');
                self.ZoutUnits=uilabel(...
                'UserData',userData,...
                'Tag','ZoutUnitsLabel',...
                'Parent',self.Layout,...
                'Text','Ohm',...
                'HorizontalAlignment','left');
                self.ApplyLabel=uibutton(...
                'Tag','ApplyButton',...
                'Parent',self.Layout,...
                'Text','Apply',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');

                for i=1:length(self.Layout.RowHeight)
                    self.Layout.RowHeight{i}=29;
                end
            else
                self.Panel=uipanel(...
                'Parent',self.Parent.View.ParametersFig,...
                'Title','',...
                'BorderType','line',...
                'HighlightColor',[.5,.5,.5],...
                'Visible','on');
                self.Title=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','TitleLabel',...
                'String',' Modulator Element',...
                'ForegroundColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');
                self.NameLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NameLabel',...
                'String','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Name',...
                'String','Amplifier',...
                'HorizontalAlignment','left');
                self.GainLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','GainLabel',...
                'String','Available Power Gain',...
                'HorizontalAlignment','right');
                self.GainEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','GainEditField',...
                'String','0',...
                'HorizontalAlignment','left');
                self.GainUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','GainUnitsLabel',...
                'String','dB',...
                'HorizontalAlignment','left');
                self.NFLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NFLabel',...
                'String','Noise Figure',...
                'HorizontalAlignment','right');
                self.NFEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','NFEditField',...
                'String','0',...
                'HorizontalAlignment','left');
                self.NFUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NFUnitsLabel',...
                'String','dB',...
                'HorizontalAlignment','left');
                self.OIP2Label=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP2Label',...
                'String',...
                'OIP2',...
                'HorizontalAlignment','right');
                self.OIP2Edit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','OIP2',...
                'String','Inf',...
                'Tag',...
                'OIP2EditField',...
                'HorizontalAlignment','left');
                self.OIP2Units=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP2UnitsLabel',...
                'String','dBm',...
                'HorizontalAlignment','left');
                self.OIP3Label=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP3Label',...
                'String',...
                'OIP3',...
                'HorizontalAlignment','right');
                self.OIP3Edit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','OIP3',...
                'String','Inf',...
                'Tag',...
                'OIP3EditField',...
                'HorizontalAlignment','left');
                self.OIP3Units=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','OIP3UnitsLabel',...
                'String','dBm',...
                'HorizontalAlignment','left');
                self.LOLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','LOLabel',...
                'String','LO Frequency',...
                'HorizontalAlignment','right');
                self.LOEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','LOEditField',...
                'String','',...
                'Tag',...
                'LO',...
                'HorizontalAlignment','left');
                self.LOUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','popup',...
                'String',{'Hz','kHz','MHz','GHz','THz'},...
                'Tag','LOUnits',...
                'Value',4,...
                'HorizontalAlignment','left');
                self.ConverterTypeLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','TypeLabel',...
                'String','Converter Type',...
                'HorizontalAlignment','right');
                self.ConverterTypePopup=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','popup',...
                'String',{'Down','Up'},...
                'Tag','ConverterType',...
                'Value',2,...
                'HorizontalAlignment','left');
                self.ZinLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZinLabel',...
                'String','Input Impedance',...
                'HorizontalAlignment','right');
                self.ZinEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Zin',...
                'String','50',...
                'Tag',...
                'ZinEditField',...
                'HorizontalAlignment','left');
                self.ZinUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZinUnitsLabel',...
                'String','Ohm',...
                'HorizontalAlignment','left');
                self.ZoutLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZoutLabel',...
                'String','Output Impedance',...
                'HorizontalAlignment','right');
                self.ZoutEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Zout',...
                'String','50',...
                'Tag',...
                'ZoutEditField',...
                'HorizontalAlignment','left');
                self.ZoutUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','ZoutUnitsLabel',...
                'String','Ohm',...
                'HorizontalAlignment','left');
                self.ApplyLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','pushbutton',...
                'String','Apply',...
                'Tag','ApplyTag',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');
            end
        end


        function layoutUIControls(self)


            hspacing=3;
            vspacing=4;
            w1=rf.internal.apps.budget.SystemParametersSection.Width1;
            w2=rf.internal.apps.budget.SystemParametersSection.Width2;
            w3=rf.internal.apps.budget.SystemParametersSection.Width3;
            titleHt=16;
            if self.Parent.View.UseAppContainer
            else

                self.Layout=...
                matlabshared.application.layout.GridBagLayout(...
                self.Panel,...
                'VerticalGap',vspacing,...
                'HorizontalGap',hspacing,...
                'VerticalWeights',[0,0,0,0,0,0,0,0,1],...
                'HorizontalWeights',[0,1,0]);

            end
            row=1;
            self.Parent.addTitle(self.Layout,self.Title,row,[1,3],...
            titleHt,hspacing,vspacing,self.Parent.View.UseAppContainer)
            h=24;
            row=row+1;
            self.Parent.addText(self.Layout,self.NameLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.NameEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.GainLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.GainEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.GainUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.NFLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.NFEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.NFUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.OIP2Label,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.OIP2Edit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.OIP2Units,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.OIP3Label,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.OIP3Edit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.OIP3Units,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.LOLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.LOEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addPopup(self.Layout,self.LOUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.ConverterTypeLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addPopup(self.Layout,self.ConverterTypePopup,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.ZinLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.ZinEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.ZinUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.ZoutLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.ZoutEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.ZoutUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.ApplyLabel,row,2,w3,...
            h+10,self.Parent.View.UseAppContainer)
            if self.Parent.View.UseAppContainer
                w=500;
                h=500;
                self.Layout.Visible='on';
            else
                [~,~,w,h]=getMinimumSize(self.Layout);
                self.Width=sum(w)+self.Layout.HorizontalGap*(numel(w)+1);
                self.Height=max(h(2:end-1))*numel(h(2:end))+...
                self.Layout.VerticalGap*(numel(h(2:end-1))+1)+(titleHt+2)+10;
            end
        end

        function parameterChanged(self,e)



            i=self.Parent.View.Canvas.SelectIdx;

            drawnow;
            if strcmpi(e.EventName,'PostSet')||...
                strcmpi(e.EventName,'ValueChanged')||...
                strcmpi(e.EventName,'ButtonPushed')

                if self.Parent.View.UseAppContainer
                    name=e.Source.Tag;
                    uiObject=e.Source;
                    uiObjectType=class(uiObject);
                else
                    name=e.AffectedObject.Tag;
                    uiObject=e.AffectedObject;
                    uiObjectType=uiObject.Style;
                end
                key='';
            elseif strcmpi(e.EventName,'KeyPress')

                name=e.Source.Tag;
                uiObject=e.Source;
                uiObjectType=uiObject.Style;
                a=get(self.Parent.View.ParametersFig,'CurrentCharacter');
                if isempty(a)


                    return;
                end
                key=e.Key;
                if any(strcmpi(key,{'leftarrow',...
                    'uparrow',...
                    'downarrow',...
                    'rightarrow'}))

                    return;
                end
            end
            if strcmp(name,'LOUnits')
                name='LO';
            end

            applyflag=1;
            valueChangedColor=[1,0.96,0.88];
            if~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                if~any(strcmpi(uiObjectType,{'popupmenu','matlab.ui.control.DropDown'}))
                    if~strcmpi(key,'return')



                        if strcmpi(name,'NameEditField')||strcmpi(name,'Name')
                            self.NameChanged=1;
                        elseif~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                            self.OtherPropertiesChanged=1;
                        end
                    end
                else
                    if~strcmpi(key,'return')&&~strcmpi(key,'')


                        return;
                    else
                        if strcmpi(key,'')

                            self.OtherPropertiesChanged=1;
                        end
                    end
                end
            end
            if~strcmpi(key,'return')
                switch name
                case{'NameEditField','Name'}
                    self.NameEdit.BackgroundColor=valueChangedColor;
                case{'GainEditField','Gain'}
                    self.GainEdit.BackgroundColor=valueChangedColor;
                case{'NFEditField','NF'}
                    self.NFEdit.BackgroundColor=valueChangedColor;
                case{'OIP3EditField','OIP3'}
                    self.OIP3Edit.BackgroundColor=valueChangedColor;
                case{'OIP2EditField','OIP2'}
                    self.OIP2Edit.BackgroundColor=valueChangedColor;
                case{'LOEditField','LO'}
                    self.LOEdit.BackgroundColor=valueChangedColor;
                case{'ConverterTypeDropdown','ConverterType'}
                    self.ConverterTypePopup.BackgroundColor=valueChangedColor;
                case{'ZinEditField','Zin'}
                    self.ZinEdit.BackgroundColor=valueChangedColor;
                case{'ZoutEditField','Zout'}
                    self.ZoutEdit.BackgroundColor=valueChangedColor;
                case{'ApplyButton','ApplyTag'}
                    try
                        applyflag=0;
                        self.applyFunction();
                    catch me
                        h=errordlg(me.message,'Error Dialog','modal');
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
            if self.IsReturnKey
                try
                    applyflag=0;
                    self.applyFunction()
                catch me
                    h=errordlg(me.message,'Error Dialog','modal');
                    uiwait(h)
                    self.Parent.View.enableActions(true);
                end
            end
            self.IsReturnKey=0;
            if applyflag
                self.ApplyLabel.Enable='on';
                self.Parent.View.setStatusBarMsg(...
                'Click ''Apply'' or hit ''Enter'' to update Modulator parameters.');
                if self.Parent.View.UseAppContainer
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyButton','off'));
                else
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyTag','off'));
                end
            end
        end

        function applyFunction(self)


            if self.Parent.View.UseAppContainer
                valueString='Value';
            else
                valueString='String';
            end
            if~self.NameChanged&&~self.OtherPropertiesChanged
                self.IsReturnKey=0;
                i=self.Parent.View.Canvas.SelectIdx;
                self.Parent.notify('DisableCanvas',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'ApplyButton','inactive'));
                return;
            end
            self.Parent.View.enableActions(false);
            i=self.Parent.View.Canvas.SelectIdx;
            modulatorobj=self.simrfV2_modulator_design();
            self.Parent.notify('DisableCanvas',...
            rf.internal.apps.budget.ElementParameterChangedEventData(i,...
            'ApplyButton','inactive'));
            if self.NameChanged&&~self.OtherPropertiesChanged
                self.Parent.notify('ElementParameterChanged',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Name',self.NameEdit.(valueString)));
            else
                self.Parent.notify('ElementParameterChanged',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'ApplyButton',modulatorobj));
            end
            if strcmpi(self.ConverterType,'Up')
                self.Parent.notify('IconUpdate',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Type','modulator'));
            else
                self.Parent.notify('IconUpdate',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Type','demodulator'));
            end
            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.NFEdit.BackgroundColor=whiteColor;
            self.OIP2Edit.BackgroundColor=whiteColor;
            self.OIP3Edit.BackgroundColor=whiteColor;
            self.LOEdit.BackgroundColor=whiteColor;
            self.ZinEdit.BackgroundColor=whiteColor;
            self.ZoutEdit.BackgroundColor=whiteColor;
            self.GainEdit.BackgroundColor=whiteColor;
            self.ConverterTypePopup.BackgroundColor=whiteColor;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
            self.IsReturnKey=0;
            enableIP2(self.Parent.View.Toolstrip,false);
            self.NameChanged=0;
            self.OtherPropertiesChanged=0;
            self.Parent.View.enableActions(true);
        end

        function FigKeyEvent(self,ev)

            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.ModulatorDialog')
                key=ev.Key;
                switch key
                case 'return'
                    self.IsReturnKey=1;
                end
            end
        end

        function FigKeyEventCanvas(self,ev)



            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.ModulatorDialog')
                key=ev.Key;
                switch key
                case 'return'
                    try
                        self.applyFunction();
                    catch me
                        h=errordlg(me.message,'Error Dialog','modal');
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
        end


        function addListeners(self)


            if self.Parent.View.UseAppContainer
                self.Listeners.LOUnits.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.ConverterTypePopup.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.NameEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.GainEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.LOEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.NFEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.OIP2Edit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.OIP3Edit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.ZinEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.ZoutEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.ApplyLabel.ButtonPushedFcn=@(h,e)parameterChanged(self,e);
            else
                self.Listeners.LOUnits=addlistener(self.LOUnits,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
                self.LOUnits.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.Listeners.ConverterType=addlistener(self.ConverterTypePopup,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
                self.ConverterTypePopup.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.NameEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.GainEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.LOEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.NFEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.OIP2Edit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.OIP3Edit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.ZinEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.ZoutEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.Listeners.Apply=addlistener(self.ApplyLabel,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
            end
        end

        function modulatorobj=simrfV2_modulator_design(self)
            modulatorobj=modulator('Name',self.Name,...
            'Gain',self.Gain,...
            'NF',self.NF,...
            'OIP2',self.OIP2,...
            'OIP3',self.OIP3,...
            'LO',self.LO,...
            'ConverterType',self.ConverterType,...
            'Zin',self.Zin,...
            'Zout',self.Zout);
        end
    end
end





