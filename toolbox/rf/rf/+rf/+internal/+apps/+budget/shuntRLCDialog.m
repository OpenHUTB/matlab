classdef shuntRLCDialog<handle







    properties
Parent
Panel
Layout
        Width=0
        Height=0
Listeners
    end

    properties(Dependent)
Name
R
L
C
    end

    properties(Access=private)
Title
NameLabel
NameEdit
RLabel
REdit
RUnits
LLabel
LEdit
LUnits
CLabel
CEdit
CUnits
ApplyLabel
        IsReturnKey=0
        NameChanged=0
        OtherPropertiesChanged=0
    end

    methods


        function self=shuntRLCDialog(parent)




            if nargin==0
                parent=figure;
            end
            self.Parent=parent;
            createUIControls(self)
            layoutUIControls(self)
            addListeners(self)
        end
    end

    methods


        function str=get.Name(self)
            if self.Parent.View.UseAppContainer
                str=self.NameEdit.Value;
            else
                str=self.NameEdit.String;
            end
        end

        function set.Name(self,str)
            if self.Parent.View.UseAppContainer
                self.NameEdit.Value=str;
            else
                self.NameEdit.String=str;
            end
        end

        function val=get.R(self)
            if self.Parent.View.UseAppContainer
                val=self.REdit.Value;%#ok<*ST2NM>
            else
                val=str2num(self.REdit.String);%#ok<*ST2NM>
            end
        end

        function set.R(self,val)
            if self.Parent.View.UseAppContainer
                self.REdit.Value=val;
            else
                self.REdit.String=num2str(val);
            end
        end

        function val=get.L(self)
            if self.Parent.View.UseAppContainer
                val=self.LEdit.Value;
            else
                val=str2num(self.LEdit.String);
            end
        end

        function set.L(self,val)
            if self.Parent.View.UseAppContainer
                self.LEdit.Value=val;
            else
                self.LEdit.String=num2str(val);
            end
        end

        function val=get.C(self)
            if self.Parent.View.UseAppContainer
                val=self.CEdit.Value;
            else
                val=str2num(self.CEdit.String);
            end
        end

        function set.C(self,val)
            if self.Parent.View.UseAppContainer
                self.CEdit.Value=val;
            else
                self.CEdit.String=num2str(val);
            end
        end

        function resetDialogAccess(self)


            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.REdit.BackgroundColor=whiteColor;
            self.LEdit.BackgroundColor=whiteColor;
            self.CEdit.BackgroundColor=whiteColor;
            self.NameChanged=0;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
        end

        function setFigureKeyPress(self)





            if self.Parent.View.UseAppContainer
                set(self.Parent.View.ParametersFig.Figure,...
                'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                self.Listeners.KeyPress=addlistener(...
                self.Parent.View.ParametersFig.Figure,...
                'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
            else
                set(self.Parent.View.ParametersFig,...
                'KeyPressFcn',@(h,e)FigKeyEventCanvas(self,e));
                self.Listeners.KeyPress=addlistener(...
                self.Parent.View.ParametersFig,...
                'WindowKeyPress',@(h,e)FigKeyEvent(self,e));
            end
        end

        function enableUIControls(self,val)




            if val==false
                val='off';
            elseif val==true
                val='on';
            end
            self.NameEdit.Enable=val;
            self.REdit.Enable=val;
            self.LEdit.Enable=val;
            self.CEdit.Enable=val;
            if strcmpi(val,'on')
                if self.OtherPropertiesChanged||...
                    self.NameChanged
                    self.ApplyLabel.Enable='on';
                else
                    self.ApplyLabel.Enable='off';
                end
            else
                self.ApplyLabel.Enable='off';
            end
        end
    end

    methods(Access=private)


        function createUIControls(self)


            userData=struct(...
            'Dialog','shuntRLC',...
            'Stage',self.Parent.SelectedStage);
            if self.Parent.View.UseAppContainer

                self.Layout=uigridlayout(...
                'Parent',self.Parent.View.ParametersFig.Figure,...
                'Scrollable','on',...
                'Tag','Layout',...
                'RowSpacing',3,...
                'ColumnSpacing',2,...
                'Visible','off');
                self.Title=uilabel(...
                'UserData',userData,...
                'Tag','TitleLabel',...
                'Parent',self.Layout,...
                'Text','Shunt RLC Element',...
                'FontColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');
                self.NameLabel=uilabel(...
                'UserData',userData,...
                'Tag','NameLabel',...
                'Parent',self.Layout,...
                'Text','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uieditfield(...
                'UserData',userData,...
                'Tag','NameEditField',...
                'Parent',self.Layout,...
                'Value','shuntRLC',...
                'HorizontalAlignment','left');
                self.RLabel=uilabel(...
                'UserData',userData,...
                'Tag','RLabel',...
                'Parent',self.Layout,...
                'Text','Resistance',...
                'HorizontalAlignment','right');
                self.REdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','REditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'HorizontalAlignment','left');
                self.RUnits=uilabel(...
                'UserData',userData,...
                'Tag','RUnitsLabel',...
                'Parent',self.Layout,...
                'Text','Ohm',...
                'HorizontalAlignment','left');
                self.LLabel=uilabel(...
                'UserData',userData,...
                'Tag','LLabel',...
                'Parent',self.Layout,...
                'Text','Inductance',...
                'HorizontalAlignment','right');
                self.LEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','LEditField',...
                'Parent',self.Layout,...
                'Value',Inf,...
                'HorizontalAlignment','left');
                self.LUnits=uilabel(...
                'UserData',userData,...
                'Tag','LUnitsLabel',...
                'Parent',self.Layout,...
                'Text','H',...
                'HorizontalAlignment','left');
                self.CLabel=uilabel(...
                'UserData',userData,...
                'Tag','CLabel',...
                'Parent',self.Layout,...
                'Text','Capacitance',...
                'HorizontalAlignment','right');
                self.CEdit=uieditfield(...
                'numeric',...
                'UserData',userData,...
                'Tag','CEditField',...
                'Parent',self.Layout,...
                'Value',0,...
                'HorizontalAlignment','left');
                self.CUnits=uilabel(...
                'UserData',userData,...
                'Tag','CUnitsLabel',...
                'Parent',self.Layout,...
                'Text','F',...
                'HorizontalAlignment','left');
                self.ApplyLabel=uibutton(...
                'Tag','ApplyButton',...
                'Parent',self.Layout,...
                'Text','Apply',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');

                for i=1:length(self.Layout.RowHeight)
                    self.Layout.RowHeight{i}=29;
                end
            else
                self.Panel=uipanel(...
                'Parent',self.Parent.View.ParametersFig,...
                'Title','',...
                'BorderType','line',...
                'HighlightColor',[.5,.5,.5],...
                'Visible','on');
                self.Title=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','TitleLabel',...
                'String','Shunt RLC Element',...
                'ForegroundColor',[0,0,0],...
                'BackgroundColor',[.94,.94,.94],...
                'HorizontalAlignment','left');
                self.NameLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','NameLabel',...
                'String','Name',...
                'HorizontalAlignment','right');
                self.NameEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','Name',...
                'String','shuntRLC',...
                'HorizontalAlignment','left');
                self.RLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','RLabel',...
                'String','Resistance',...
                'HorizontalAlignment','right');
                self.REdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','R',...
                'String','inf',...
                'HorizontalAlignment','left');
                self.RUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','RUnitsLabel',...
                'String','Ohm',...
                'HorizontalAlignment','left');
                self.LLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','LLabel',...
                'String','Inductance',...
                'HorizontalAlignment','right');
                self.LEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','L',...
                'String','inf',...
                'HorizontalAlignment','left');
                self.LUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','LUnitsLabel',...
                'String','H',...
                'HorizontalAlignment','left');
                self.CLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','CLabel',...
                'String','Capacitance',...
                'HorizontalAlignment','right');
                self.CEdit=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','edit',...
                'Tag','C',...
                'String','0',...
                'HorizontalAlignment','left');
                self.CUnits=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','text',...
                'Tag','CUnitsLabel',...
                'String','F',...
                'HorizontalAlignment','left');
                self.ApplyLabel=uicontrol(...
                'UserData',userData,...
                'Parent',self.Panel,...
                'Style','pushbutton',...
                'String','Apply',...
                'Tag','ApplyTag',...
                'HorizontalAlignment','center',...
                'Tooltip','Apply parameters to selected Element (Enter)');
            end
        end


        function layoutUIControls(self)


            hspacing=3;
            vspacing=4;
            w1=rf.internal.apps.budget.SystemParametersSection.Width1;
            w2=rf.internal.apps.budget.SystemParametersSection.Width2;
            w3=rf.internal.apps.budget.SystemParametersSection.Width3;
            if self.Parent.View.UseAppContainer
            else
                self.Layout=...
                matlabshared.application.layout.GridBagLayout(...
                self.Panel,...
                'VerticalGap',vspacing,...
                'HorizontalGap',hspacing,...
                'VerticalWeights',[0,0,0,0,0,0,1],...
                'HorizontalWeights',[0,1,0]);
            end
            row=1;
            titleHt=16;
            self.Parent.addTitle(self.Layout,self.Title,row,[1,3],...
            titleHt,hspacing,vspacing,self.Parent.View.UseAppContainer)
            h=24;
            row=row+1;
            self.Parent.addText(self.Layout,self.NameLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.NameEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.RLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.REdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.RUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.LLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.LEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.LUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.CLabel,row,1,w1,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addEdit(self.Layout,self.CEdit,row,2,w2,...
            h,self.Parent.View.UseAppContainer)
            self.Parent.addText(self.Layout,self.CUnits,row,3,w3,...
            h,self.Parent.View.UseAppContainer)
            row=row+1;
            self.Parent.addText(self.Layout,self.ApplyLabel,row,2,w3,...
            h+10,self.Parent.View.UseAppContainer)
            if self.Parent.View.UseAppContainer
                w=500;
                h=500;
                self.Layout.Visible='on';
            else
                [~,~,w,h]=getMinimumSize(self.Layout);
                self.Width=sum(w)+self.Layout.HorizontalGap*(numel(w)+1);
                self.Height=max(h(2:end-1))*numel(h(2:end))+...
                self.Layout.VerticalGap*(numel(h(2:end-1))+1)+(titleHt+2)+10;
            end
        end

        function parameterChanged(self,e)


            i=self.Parent.View.Canvas.SelectIdx;
            if strcmpi(e.EventName,'PostSet')||...
                strcmpi(e.EventName,'ValueChanged')||...
                strcmpi(e.EventName,'ButtonPushed')

                if self.Parent.View.UseAppContainer
                    name=e.Source.Tag;
                    uiObject=e.Source;
                    uiObjectType=class(uiObject);
                else
                    name=e.AffectedObject.Tag;
                    uiObject=e.AffectedObject;
                    uiObjectType=uiObject.Style;
                end
                key='';
            elseif strcmpi(e.EventName,'KeyPress')

                name=e.Source.Tag;
                uiObject=e.Source;
                uiObjectType=uiObject.Style;
                a=get(self.Parent.View.ParametersFig,'CurrentCharacter');
                if isempty(a)


                    return;
                end
                key=e.Key;
                if any(strcmpi(key,{'leftarrow',...
                    'uparrow',...
                    'downarrow',...
                    'rightarrow'}))

                    return;
                end
            end
            drawnow;

            applyflag=1;
            valueChangedColor=[1,0.96,0.88];
            if~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                if~any(strcmpi(uiObjectType,{'popupmenu','matlab.ui.control.DropDown'}))
                    if~strcmpi(key,'return')



                        if strcmpi(name,'NameEditField')||strcmpi(name,'Name')
                            self.NameChanged=1;
                        elseif~strcmpi(name,'ApplyButton')||~strcmpi(name,'ApplyTag')
                            self.OtherPropertiesChanged=1;
                        end
                    end
                end
            end
            if~strcmpi(key,'return')


                switch name
                case{'NameEditField','Name'}
                    self.NameEdit.BackgroundColor=valueChangedColor;
                case{'REditField','R'}
                    self.REdit.BackgroundColor=valueChangedColor;
                case{'LEditField','L'}
                    self.LEdit.BackgroundColor=valueChangedColor;
                case{'CEditField','C'}
                    self.CEdit.BackgroundColor=valueChangedColor;
                case{'ApplyButton','ApplyTag'}
                    try
                        applyflag=0;
                        applyFunction(self);
                    catch me
                        h=errordlg(me.message,'Error Dialog','modal');
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
            if self.IsReturnKey
                try
                    applyflag=0;
                    self.applyFunction();
                catch me
                    h=errordlg(me.message,'Error Dialog','modal');
                    uiwait(h)
                    self.Parent.View.enableActions(true);
                end
            end
            self.IsReturnKey=0;
            if applyflag
                self.ApplyLabel.Enable='on';
                self.Parent.View.setStatusBarMsg(...
                'Click ''Apply'' or hit ''Enter'' to update RLC parameters.');
                if self.Parent.View.UseAppContainer
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyButton','off'));
                else
                    self.Parent.notify('DisableCanvas',...
                    rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                    'ApplyTag','off'));
                end
            end
        end

        function applyFunction(self)


            if self.Parent.View.UseAppContainer
                valueString='Value';
            else
                valueString='String';
            end
            if~self.NameChanged&&~self.OtherPropertiesChanged

                self.IsReturnKey=0;
                i=self.Parent.View.Canvas.SelectIdx;
                self.Parent.notify('DisableCanvas',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'ApplyButton','inactive'));
                return;
            end
            self.Parent.View.enableActions(false);
            i=self.Parent.View.Canvas.SelectIdx;
            shuntRLCobj=shuntRLC('Name',self.Name,'R',self.R,...
            'L',self.L,'C',self.C);
            self.Parent.notify('DisableCanvas',...
            rf.internal.apps.budget.ElementParameterChangedEventData(i,...
            'ApplyButton','inactive'));
            if self.NameChanged&&~self.OtherPropertiesChanged

                self.Parent.notify('ElementParameterChanged',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'Name',self.NameEdit.(valueString)));
            else


                self.Parent.notify('ElementParameterChanged',...
                rf.internal.apps.budget.ElementParameterChangedEventData(i,...
                'ApplyButton',shuntRLCobj));
            end
            whiteColor=[1,1,1];
            self.NameEdit.BackgroundColor=whiteColor;
            self.REdit.BackgroundColor=whiteColor;
            self.LEdit.BackgroundColor=whiteColor;
            self.CEdit.BackgroundColor=whiteColor;
            self.ApplyLabel.Enable='off';
            self.Parent.View.setStatusBarMsg('');
            enableIP2(self.Parent.View.Toolstrip,false);
            self.NameChanged=0;
            self.OtherPropertiesChanged=0;
            self.IsReturnKey=0;
            self.Parent.View.enableActions(true);
        end

        function FigKeyEvent(self,ev)

            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.shuntRLCDialog')
                key=ev.Key;
                switch key
                case 'return'
                    self.IsReturnKey=1;
                end
            end
        end

        function FigKeyEventCanvas(self,ev)



            if isa(self.Parent.ElementDialog,'rf.internal.apps.budget.seriesRLCDialog')
                key=ev.Key;
                switch key
                case 'return'
                    try
                        self.applyFunction();
                    catch me
                        h=errordlg(me.message,'Error Dialog','modal');
                        uiwait(h)
                        self.Parent.View.enableActions(true);
                    end
                end
            end
        end


        function addListeners(self)


            if self.Parent.View.UseAppContainer
                self.NameEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.REdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.LEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.CEdit.ValueChangedFcn=@(h,e)parameterChanged(self,e);
                self.ApplyLabel.ButtonPushedFcn=@(h,e)parameterChanged(self,e);
            else
                self.NameEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.REdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.LEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.CEdit.KeyPressFcn=@(h,e)parameterChanged(self,e);
                self.Listeners.Apply=addlistener(self.ApplyLabel,...
                'Value',...
                'PostSet',@(h,e)parameterChanged(self,e));
            end
        end
    end
end





