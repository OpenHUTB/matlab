function[trialStep,state]...
    =feasibilityStep(state,xCurrent,cEq,cIneq,JacTrans_ip,barrierParam,slacks,...
    trRadius,bndryThresh,sizes,options)











    if~state.enabled
        state=initState(state,barrierParam,cEq,cIneq,slacks,sizes);
    end


    trRadiusFeas=trRadius*sqrt(state.sizes.nVar/sizes.nVar);

    slacksRelaxEqPlus=state.slacks(state.xIndices.eqPlus);
    slacksRelaxEqMinus=state.slacks(state.xIndices.eqMinus);
    slacksIneq=state.slacks(state.xIndices.ineq);
    slacksRelaxIneq=state.slacks(state.xIndices.relaxIneq);





    state.cIneq_all=[cIneq+state.relaxIneq;...
    state.relaxEqPlus;...
    state.relaxEqMinus;...
    state.relaxIneq];
    state.cEq_all=cEq-state.relaxEqPlus+state.relaxEqMinus;


    state.cFeas=[state.cEq_all;...
    cIneq+state.relaxIneq-slacksIneq;...
    state.relaxEqPlus-slacksRelaxEqPlus;...
    state.relaxEqMinus-slacksRelaxEqMinus;...
    state.relaxIneq-slacksRelaxIneq];

    state.jacFeasTrans=formJacobianFeas(state.jacFeasTrans,JacTrans_ip,...
    sizes.nVar,sizes.mEq,sizes.mIneq,slacksRelaxEqPlus,...
    slacksRelaxEqMinus,slacksIneq,slacksRelaxIneq);

    [state.AugMatrix,state.AugFactor]=formAndFactorFeasMatrix(state.AugMatrix,...
    state.AugFactor,state.jacFeasTrans,slacksRelaxEqPlus,slacksRelaxEqMinus,...
    slacksIneq,slacksRelaxIneq,sizes,options);

    [normal,state.c_pred]=normalStep(state.cFeas,state.jacFeasTrans,trRadiusFeas,...
    state.AugFactor,state.slacks,bndryThresh,false,false,state.sizes);


    state.scaledGrad_ip=[zeros(sizes.nVar,1);...
    ones(2*sizes.mEq+sizes.mIneq,1);...
    -barrierParam*ones(sizes.mEq,1);...
    -barrierParam*ones(sizes.mEq,1);...
    -barrierParam*ones(sizes.mIneq,1);...
    -barrierParam*ones(sizes.mIneq,1)];
    state.xFeas=[xCurrent;state.relaxEqPlus;state.relaxEqMinus;state.relaxIneq];

    state.constrGradNormsFeas=vecnorm(state.jacFeasTrans)';






















    projGradient=solveFeasSystem(state.AugFactor,-state.scaledGrad_ip(1:state.sizes.nVar),...
    -state.scaledGrad_ip(state.sizes.nVar+1:state.sizes.nPrimal,1)...
    -barrierParam*normal(state.sizes.nVar+1:state.sizes.nPrimal,1),...
    state.zerosMEq,state.zerosMIneq,state.slacks);


    trRadius_tang=sqrt(trRadiusFeas^2-norm(normal)^2);
    tangential=projGradient*(trRadius_tang/norm(projGradient));
    alpha_s=fractionToBoundaryTangential(normal(state.sizes.nVar+1:state.sizes.nPrimal,1),...
    tangential(state.sizes.nVar+1:state.sizes.nPrimal,1),bndryThresh);
    tangential=alpha_s*tangential;

    trialStep.stepFeas=normal+tangential;
    trialStep.stepFeasPrimal=trialStep.stepFeas(1:state.sizes.nPrimal);

    state.drelax=trialStep.stepFeas(sizes.nVar+1:sizes.nVar+2*sizes.mEq+sizes.mIneq);
    state.dslacks=trialStep.stepFeas(sizes.nVar+2*sizes.mEq+sizes.mIneq+1:sizes.nVar+4*sizes.mEq+3*sizes.mIneq);

    state.slacksTrial=state.slacks.*(1+state.dslacks);
    state.relaxTrial=state.xFeas(sizes.nVar+1:end)+state.drelax;








    if options.FeasModeSlackReset
        state.slacksTrial(state.xIndices.eqPlus)...
        =max(state.relaxTrial(state.xIndices.eqPlus),barrierParam);
        state.slacksTrial(state.xIndices.eqMinus)...
        =max(state.relaxTrial(state.xIndices.eqMinus),barrierParam);
        state.stacksTrial(state.xIndices.ineq)...
        =max(cIneq+state.relaxTrial(state.xIndices.ineq),barrierParam);




        state.slacksTrial(state.xIndices.relaxIneq)...
        =max(state.relaxTrial(state.xIndices.ineq),barrierParam);
    end


    trialStep.type='cgfeas';



    trialStep.normal=[normal(1:sizes.nVar);...
    normal(sizes.nVar+4*sizes.mEq+sizes.mIneq+1:sizes.nVar+4*sizes.mEq+2*sizes.mIneq)];
    trialStep.tangential=[tangential(1:sizes.nVar);...
    tangential(sizes.nVar+4*sizes.mEq+sizes.mIneq+1:sizes.nVar+4*sizes.mEq+2*sizes.mIneq)];

    state.obj_pred=-state.scaledGrad_ip'*trialStep.stepFeas;

    trialStep.bkCount=0;
    trialStep.projCGIter=0;
    trialStep.autoReject=0;

end

function state=initState(state,barrierParam,cEq,cIneq,slacks,sizes)

    nVar=sizes.nVar;
    mEq=numel(cEq);
    mIneq=numel(cIneq);
    sizes=struct('nVar',nVar+2*mEq+mIneq,...
    'nPrimal',nVar+4*mEq+3*mIneq,...
    'nFiniteLb',sizes.nFiniteLb,...
    'nFiniteUb',sizes.nFiniteUb,...
    'mEq',mEq,...
    'mIneq',2*mEq+2*mIneq,...
    'mLinIneq',sizes.mLinIneq,...
    'mNonlinIneq',sizes.mNonlinIneq,...
    'mAll',3*mEq+2*mIneq,...
    'nonlinEq_start',sizes.nonlinEq_start,...
    'nonlinEq_end',sizes.nonlinEq_end,...
    'nonlinIneq_start',sizes.nonlinIneq_start,...
    'ineq_start',sizes.ineq_start);

    relaxEqPlus=max(cEq,barrierParam);
    relaxEqMinus=-min(cEq,-barrierParam);
    relaxIneq=max(barrierParam,slacks-cIneq);

    slacksRelaxEqPlus=relaxEqPlus;
    slacksRelaxEqMinus=relaxEqMinus;
    slacksIneq=slacks;
    slacksRelaxIneq=relaxIneq;

    slacksFeas=[slacksRelaxEqPlus;...
    slacksRelaxEqMinus;...
    slacksIneq;...
    slacksRelaxIneq];

    barrierParamFeas=barrierParam;

    xIndices=struct('eqPlus',1:mEq,...
    'eqMinus',mEq+1:2*mEq,...
    'ineq',2*mEq+1:2*mEq+mIneq,...
    'relaxIneq',2*mEq+mIneq+1:2*mEq+2*mIneq);

    state=struct('relaxEqPlus',relaxEqPlus,...
    'relaxEqMinus',relaxEqMinus,...
    'relaxIneq',relaxIneq,...
    'slacks',slacksFeas,...
    'barrierParamFeas',barrierParamFeas,...
    'AugFactor',[],...
    'AugMatrix',[],...
    'jacFeasTrans',[],...
    'sizes',sizes,...
    'latestPrimalFeasError',state.latestPrimalFeasError,...
    'xIndices',xIndices,...
    'enabled',true,...
    'zerosMEq',zeros(sizes.mEq,1),...
    'zerosMIneq',zeros(sizes.mIneq,1));
end

function jacFeasTrans=formJacobianFeas(jacFeasTrans,JacTrans_ip,nVar,...
    mEq,mIneq,slacksRelaxEqPlus,slacksRelaxEqMinus,slacksIneq,slacksRelaxIneq)

    mEqId=speye(mEq,mEq);
    mIneqId=speye(mIneq,mIneq);


    jacFeasTrans=[sparse(JacTrans_ip(1:nVar,1:mEq+mIneq)),sparse(nVar,2*mEq+mIneq);...
    -mEqId,sparse(mEq,mIneq),mEqId,sparse(mEq,mEq+mIneq);...
    mEqId,sparse(mEq,mIneq+mEq),mEqId,sparse(mEq,mIneq);...
    sparse(mIneq,mEq),mIneqId,sparse(mIneq,2*mEq),mIneqId;...
    sparse(mEq,mEq+mIneq),-spdiags(slacksRelaxEqPlus(:),0,mEq,mEq),sparse(mEq,mEq+mIneq);...
    sparse(mEq,mEq+mIneq+mEq),-spdiags(slacksRelaxEqMinus(:),0,mEq,mEq),sparse(mEq,mIneq);...
    sparse(mIneq,mEq),-spdiags(slacksIneq(:),0,mIneq,mIneq),sparse(mIneq,2*mEq+mIneq);...
    sparse(mIneq,3*mEq+mIneq),-spdiags(slacksRelaxIneq(:),0,mIneq,mIneq)];

end




