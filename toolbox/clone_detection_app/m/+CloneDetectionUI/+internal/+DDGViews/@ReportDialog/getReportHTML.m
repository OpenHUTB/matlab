function htmlFile=getReportHTML(~,activeObj)




    htmlFile=fullfile(tempdir,'clone_detection_Report_index.html');


    cloneGroupSidMap=activeObj.cloneGroupSidListMap;
    closeImg=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','images','close.png');
    closeImg=strrep(closeImg,filesep,[filesep,filesep]);
    openImg=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','images','open.png');
    openImg=strrep(openImg,filesep,[filesep,filesep]);
    check=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','images','check.png');
    uncheck=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','images','uncheck.png');
    cssPath=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','css','report.css');
    collapisibleCssPath=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','css','collapsible.css');
    exclusionImg=fullfile(matlabroot,'toolbox','clone_detection_app','m','ui','images','exclude_16.png');

    if isempty(activeObj.libraryList)
        detectLibImg=uncheck;
    else
        detectLibImg=check;
    end

    if activeObj.excludeInactiveRegions
        excludeInactiveRegionImg=check;
    else
        excludeInactiveRegionImg=uncheck;
    end

    if activeObj.excludeLibraries
        excludeLibImg=check;
    else
        excludeLibImg=uncheck;
    end

    if activeObj.excludeModelReferences
        excludeModelRefrencesImg=check;
    else
        excludeModelRefrencesImg=uncheck;
    end

    if activeObj.isReplaceExactCloneWithSubsysRef
        ReplaceWithSSrefImg=check;
    else
        ReplaceWithSSrefImg=uncheck;
    end

    if activeObj.enableClonesAnywhere
        ClonesAnywhere=check;
    else
        ClonesAnywhere=uncheck;
    end

    html=[
    '<!DOCTYPE html>',...
    '<html>',...
    '<head>',...
    '<meta http-equiv="X-UA-Compatible" content="IE=8"> ',...
    '<meta http-equiv="Content-Type" content="text/html; charset=utf-8">',...
    '<title>Clone Detection Report</title>',...
    '<link rel="stylesheet" type="text/css" href="',cssPath,'">',...
    '<link rel="stylesheet" type="text/css" href="',collapisibleCssPath,'">',...
    '</head>',...
    '<body>',...
    '<span id="modelName"><b>Model:</b></span>&nbsp',get_param(activeObj.model,'name'),'<hr><h4> Clone Detection Configurations</h4>',...
    ' <img src="',detectLibImg,'"/>&nbsp<b>Detect Libraries </b><br/>',...
    ' <img src="',ReplaceWithSSrefImg,'"/>&nbsp<b>Replace Exact Clones With Subsystem References </b><br><br/>',...
    ' <img src="',ClonesAnywhere,'"/>&nbsp<b>Detect Clones Across Model </b>'];

    if activeObj.enableClonesAnywhere
        html=[html,...
        '<br><b>Minimum Region Size: ',num2str(activeObj.regionSize),'</b><br>',...
        '<b>Minimum Clone Group Size: ',num2str(activeObj.cloneGroupSize),'</b>'];
    end

    html=[html,'<br><br>'];

    if~isempty(activeObj.libraryList)
        html=[html,'<table>',...
        '<tr><th>Library full path</th></tr>'];
        for cloneGroupIndex=1:length(activeObj.libraryList)
            html=strcat(html,...
            ['<tr><td>',activeObj.libraryList{cloneGroupIndex},'</td><tr>']);
        end
        html=[html,'</table><br>'];
    end
    html=[html,...
    '<b>Parameter Threshold : ',activeObj.parameterThreshold,...
    '</b><br/><br>',...
    '<img src="',exclusionImg,'"/>&nbsp<b> Exclusions</b><br/><br/>'...
    ,'<img src="',excludeLibImg,'"/>&nbsp Exclude library links <br/>',...
    '<img src="',excludeModelRefrencesImg,'"/>&nbsp Exclude model references <br/>',...
    '<img src="',excludeInactiveRegionImg,'"/>&nbsp Exclude inactive and commented out regions'];
    if~isempty(activeObj.excludeCloneDetection)
        html=strcat(html,...
        ['<br/><br/><b> Candidates excluded from clone detection and replacement</b><br/>',...
        '<table>',...
        '<tr><th>Excluded Candidate(s)</th></tr>']);
        for cloneGroupIndex=1:length(activeObj.excludeCloneDetection)
            html=strcat(html,...
            ['<tr><td>',activeObj.excludeCloneDetection{cloneGroupIndex},'</td><tr>']);
        end
        html=[html,...
        '</table>'];
    end

    html=[html,...
'<hr><h4> Clone Detection Results</h4>'...
    ];
    if~isempty(cloneGroupSidMap)
        keyList=keys(cloneGroupSidMap);
        if~isempty(keyList)
            for cloneGroupIndex=1:length(keyList)
                html=strcat(html,...
                [' <button class="collapsible">',cloneGroupSidMap(keyList{cloneGroupIndex}).CloneGroupName,'</button><div class="content">',...
                ]);

                cloneIndex=cloneGroupSidMap(keyList{cloneGroupIndex}).cloneIndex;
                if contains(cloneGroupSidMap(keyList{cloneGroupIndex}).CloneGroupName,...
                    DAStudio.message('sl_pir_cpp:creator:sysclonedetc_PrefixExact'))
                    idx=activeObj.m2mObj.cloneresult.exact{cloneIndex}.index;
                else
                    idx=activeObj.m2mObj.cloneresult.similar{cloneIndex}.index;
                end
                if~activeObj.enableClonesAnywhere
                    sidBlockNameList=activeObj.m2mObj.cloneresult.Before{idx};
                    for ii=1:length(sidBlockNameList)
                        html=strcat(html,...
                        [sidBlockNameList{ii},'<br/>',...
                        ]);
                    end
                    html=strcat(html,...
                    '</div>');
                else
                    sidBlockNameList=activeObj.m2mObj.cloneresult.Before(idx);
                    for i=1:length(sidBlockNameList.Region)
                        html=strcat(html,...
                        [' <button class="collapsible">',['Clone Region',num2str(i)],'</button><div class="content">',...
                        ]);
                        for j=1:length(sidBlockNameList.Region(i).Candidates)
                            html=strcat(html,...
                            [sidBlockNameList.Region(i).Candidates{j},'<br/>',...
                            ]);
                        end
                        html=strcat(html,...
                        '</div>');
                    end
                    html=strcat(html,...
                    '</div>');
                end
            end
        else
            html=[html,...
            '<b>No clones found </b><br>'];
        end
    end


















    if(activeObj.m2mObj.excluded_sysclone.Count>0)
        html=[html,...
        '<hr><b>',DAStudio.message('sl_pir_cpp:creator:ExcludedCands'),'</b><br/>',...
        '<p>',DAStudio.message('sl_pir_cpp:creator:ExclusionReasons'),'</p>'];

        html=[html,'<table>',...
        '<tr>',...
        '<th>',DAStudio.message('sl_pir_cpp:creator:ExcludedCands'),'</th>',...
        '<th>',DAStudio.message('sl_pir_cpp:creator:Reason'),'</th>',...
        '</tr>'];

        for excludedCloneName=keys(activeObj.m2mObj.excluded_sysclone)

            html=strcat(html,...
            ['<tr><td>',char(excludedCloneName)...
            ,'</td><td>',activeObj.m2mObj.excluded_sysclone(char(excludedCloneName)),'</td><tr>']);
        end

        html=[html,...
        '</table>'];
    end


    if isfield(activeObj.m2mObj,'genmodelprefix')
        if~strcmp(activeObj.m2mObj.genmodelprefix,'snapshot_')
            html=[html,...
'<hr><h4> Clone Refactor Results</h4>'...
            ];
            backupModelName=slEnginePir.util.getBackupModelName(activeObj.m2mObj.genmodelprefix,...
            get_param(activeObj.model,'name'));
            html=[html,...
            '<p>',DAStudio.message('sl_pir_cpp:creator:RefactorMessage',...
            backupModelName,get_param(activeObj.model,'name')),'</p>'];

        end
    end

    html=[html,...
    '<script>',...
    'var z;',...
    'var coll = document.getElementsByClassName("collapsible");',...
    'var i;',...
    '    for (i = 0; i < coll.length; i++) {',...
    '        coll[i].addEventListener("click", function() {',...
    '        console.log("hello report"); ',...
    '        this.classList.toggle("active");',...
    '        var content = this.nextElementSibling;',...
    '         if (content.style.maxHeight) {',...
    '            content.style.maxHeight = null;',...
    '        }',...
    '        else {',...
    '            content.style.maxHeight = content.scrollHeight + "px";',...
    '        }',...
    '      });',...
    '    }',...
    '</script>',...
    '</body>',...
'</html>'
    ];

    fid=fopen(htmlFile,'w');
    fprintf(fid,'%s',html);
    fclose(fid);

end


