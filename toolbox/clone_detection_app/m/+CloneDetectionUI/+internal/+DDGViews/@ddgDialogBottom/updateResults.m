function html=updateResults(obj)


    html=[
    '<!DOCTYPE html>',...
    '<html>',...
    '<head>',...
    '<meta http-equiv="X-UA-Compatible" content="IE=8"> ',...
    '<meta http-equiv="Content-Type" content="text/html; charset=utf-8">',...
    '<title>Clone Detection Report</title>',...
    '<style>',...
    'table{',...
    ' border-collapse: collapse;',...
    '}',...
    'table,tr,td{',...
    'border: 1px solid black;',...
    '}',...
    'body{',...
    'font-size:0.9em ;',...
    '}',...
    '</style>',...
    '</head>',...
    '<body>',...
    ];
    switch(obj.message)
    case 'detect_clones'
        html=[html,'<b>',obj.result,'</b><br>'];
        if~isempty(obj.cloneUIObj.excludeCloneDetection)
            html=[html,'<hr><h4>Exclusions</h4>'...
            ];
            html=[html,...
            '<b> Candidates excluded from clone detection and replacement</b><br>',...
            '<table>',...
            '<tr><th>Excluded Candidate(s)</th></tr>'];
            for i=1:length(obj.cloneUIObj.excludeCloneDetection)
                exclusionTableRowHTML=['<tr><td><a href="matlab:CloneDetectionUI.internal.util..hilite_system_callback(''',...
                obj.cloneUIObj.excludeCloneDetection{i},''')">',obj.cloneUIObj.excludeCloneDetection{i},'</td><tr>'];
                html=strcat(html,exclusionTableRowHTML);
            end
            html=[html,...
            '</table>'];
        end

    case 'refactor'

        crbefore=obj.cloneUIObj.m2mObj.cloneresult.Before;
        html=[html,'<b>',obj.result,'</b><br>'];

        if(obj.cloneUIObj.m2mObj.excluded_sysclone.Count>0&&strcmp(obj.result,'Refactor Successful'))
            html=[html,...
            '<hr><b>',DAStudio.message('sl_pir_cpp:creator:ExcludedCands'),'</b><br/>',...
            DAStudio.message('sl_pir_cpp:creator:sysclonerep_ExcludedCands')];
            html=[html,'<p>',DAStudio.message('sl_pir_cpp:creator:ExclusionReasons'),'</p>'];

            html=[html,'<table>',...
            '<tr>',...
            '<th>',DAStudio.message('sl_pir_cpp:creator:ExcludedCands'),'</th>',...
            '<th>',DAStudio.message('sl_pir_cpp:creator:Reason'),'</th>',...
            '</tr>'];

            for i=1:length(crbefore)
                for j=1:length(crbefore{i})
                    fname=crbefore{i}{j};
                    if isKey(obj.cloneUIObj.m2mObj.excluded_sysclone,fname)
                        sid=Simulink.ID.getSID({fname});
                        html=strcat(html,['<tr><td><a href="matlab:CloneDetectionUI.internal.util.hilite_system_callback',...
                        '(''',char(sid),''')">',fname,'</a></td><td>',obj.cloneUIObj.m2mObj.excluded_sysclone(fname),'</td><tr>']);
                    end
                end
            end
            html=[html,...
            '</table>'];
        end
    case 'error'
        html=[html,'<b>',obj.result,'</b><br>'];
    otherwise
        html='';

    end
    html=[html,'</body></html>'];
end