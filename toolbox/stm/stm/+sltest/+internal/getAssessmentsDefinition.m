function def=getAssessmentsDefinition(testCaseID,reportFile)





















    assessmentID=stm.internal.getAssessmentsID(testCaseID);
    aInfo=stm.internal.getAssessmentsInfo(assessmentID);
    def=stm.internal.getAssessmentsDefinitionHelper(aInfo);










    if strcmp(stm.internal.assessmentsFeature('ShowAssessmentsCallback'),'on')
        callback=stm.internal.getAssessmentsCallbackInfo(testCaseID);
        if isempty(def)&&~isempty(callback)
            def.assessmentsCallback=callback;
            if~isfield(def,'assessmentsDefinition')
                def.assessmentsDefinition=[];
            end
            if~isfield(def,'symbolsDefinition')
                def.symbolsDefinition={};
            end
        elseif~isempty(def)
            def.assessmentsCallback=callback;
        end
    end

    if(nargin>1)
        printHTMLReport(def,reportFile);
    end
end

function printHTMLReport(res,filename)

    str=...
    "<!DOCTYPE html>"+newline+...
    "<html>"+newline+...
    "<head>"+newline+...
    "<style>"+newline+...
    "table, th, td {border: 1px solid gray;}"+newline+...
    ".assessment-empty-placeholder {background-color: lemonchiffon;}"+newline+...
    ".assessment-expression-link-text {font-weight: bold;}"+newline+...
    ".syntax-error-style {font-style: italic; font-weight: bold; background-color: bisque;}"+newline+...
    ".symbol-error-style {font-style: italic; font-weight: bold; background-color: bisque;}"+newline+...
    ".type-error-style {font-style: italic; font-weight: bold; background-color: bisque;}"+newline+...
    ".comment-style {color: green; font-style: italic;}"+newline+...
    ".metadata-div {display:inline-flex}"+newline+...
    ".metadata-label {color: blue; font-style: italic; margin-left: 5px;}"+newline+...
    "</style>"+newline+...
    "</head>"+newline+...
    "<body>"+newline+...
    "<h1>ASSESSMENTS</h1>"+newline+...
    "<table>"+newline+...
    "<tr>"+newline+...
    "<th>Enabled</th>"+newline+...
    "<th>Name</th>"+newline+...
    "<th>Definition</th>"+newline+...
    "<th>Requirements</th>"+newline+...
    "</tr>"+newline;

    for a=res.assessmentsDefinition
        str=str+...
        "<tr>"+newline+...
        "<td>"+a.enabled+"</td>"+newline+...
        "<td>"+a.assessmentName+"</td>"+newline+...
        "<td>"+a.formattedLabel+"</td>"+newline+...
        "<td>"+a.requirements+"</td>"+newline+...
        "</tr>"+newline;
    end

    str=str+...
    "</table>"+newline+...
    "<h1>SYMBOLS</h1>"+newline+...
    "<table>"+newline+...
    "<tr>"+newline+...
    "<th>Symbol</th>"+newline+...
    "<th>Scope</th>"+newline+...
    "<th>Metadata</th>"+newline+...
    "</tr>"+newline;

    for idx=1:numel(res.symbolsDefinition)
        str=str+...
        "<tr>"+newline+...
        "<td>"+res.symbolsDefinition{idx}.Name+"</td>"+newline+...
        "<td>"+res.symbolsDefinition{idx}.Scope+"</td>"+newline;
        metadata="";
        if isstruct(res.symbolsDefinition{idx}.Value)
            symFields=fields(res.symbolsDefinition{idx}.Value);
            for fidx=1:numel(symFields)
                metadata=metadata+"<div><div class=""metadata-div"">"+symFields{fidx}+"<div class=""metadata-label"">"+res.symbolsDefinition{idx}.Value.(symFields{fidx})+"</div></div></div>";
            end
        end
        str=str+...
        "<td>"+metadata+"</td>"+newline+...
        "</tr>"+newline;
    end
    str=str+...
    "</table>"+newline+...
    "</body>"+newline+...
    "</html>"+newline;
    fid=fopen(filename,"w");
    fprintf(fid,"%s",str);
    fclose(fid);
end
