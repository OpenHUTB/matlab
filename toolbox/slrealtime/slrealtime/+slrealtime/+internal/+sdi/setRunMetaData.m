function setRunMetaData(runId,appName,targetName,appOrModelDesc)





    narginchk(3,4);

    verInfo=ver('simulink');
    slVersionStr=sprintf('%s %s %s',...
    verInfo.Name,...
    verInfo.Version,...
    verInfo.Release);

    try
        userIdStr=getenv("USERNAME");
    catch
        userIdStr=[];
    end
    if isempty(userIdStr)
        userIdStr=DAStudio.message('slrealtime:target:notAvailable');
    end

    modelDesc=[];
    if~isempty(appOrModelDesc)
        if isa(appOrModelDesc,'slrealtime.Application')
            modelDesc=appOrModelDesc.getInformation;
        elseif isa(appOrModelDesc,'struct')
            modelDesc=appOrModelDesc;
        end
    end

    if isfield(modelDesc,'ModelVersion')
        modelVerStr=modelDesc.ModelVersion;
    else
        modelVerStr=DAStudio.message('slrealtime:target:notAvailable');
    end
    if isfield(modelDesc,'ModelSolverType')
        solverType=modelDesc.ModelSolverType;
    else
        solverType=DAStudio.message('slrealtime:target:notAvailable');
    end
    if isfield(modelDesc,'ModelSolverName')
        solverName=modelDesc.ModelSolverName;
    else
        solverName=DAStudio.message('slrealtime:target:notAvailable');
    end

    Simulink.HMI.updateRunMetaData(...
    runId,...
    appName,...
    'real-time',...
    0,...
    inf,...
    modelVerStr,...
    userIdStr,...
    targetName,...
    solverType,...
    solverName,...
    slVersionStr,...
    0,...
    0,...
    0,...
    0,...
    0,...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'),...
    DAStudio.message('slrealtime:target:notAvailable'));
end
