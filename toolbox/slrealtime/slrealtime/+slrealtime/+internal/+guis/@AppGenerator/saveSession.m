function cancelled=saveSession(this)








    cancelled=false;

    if isempty(this.SessionSavedToFile)

        [filename,pathname]=uiputfile(...
        {'*.mat',getString(message('MATLAB:uistring:uiopen:MATfiles'))},...
        this.SaveSessionToFile_msg);


        this.bringToFront();

        if~isequal(filename,0)&&~isequal(pathname,0)

            this.SessionSavedToFile=fullfile(pathname,filename);
        else

            cancelled=true;
            return;
        end
    else

        [~,filename,~]=fileparts(this.SessionSavedToFile);
    end


    options=struct(...
    'OptionsToolstripItem',this.OptionsToolstripItem.Value,...
    'OptionsMenuItem',this.OptionsMenuItem.Value,...
    'OptionsStatusBarItem',this.OptionsStatusBarItem.Value,...
    'OptionsTETMonitorItem',this.OptionsTETMonitorItem.Value,...
    'OptionsInstrumentedSignalsItem',this.OptionsInstrumentedSignalsItem.Value,...
    'OptionsDashboardItem',this.OptionsDashboardItem.Value,...
    'OptionsUseGridItem',this.OptionsUseGridItem.Value,...
    'OptionsCallbackItem',this.OptionsCallbackItem.Value...
    );
    treeConfig=struct(...
    'ConfigSignals',this.TreeConfigureSignals.Value,...
    'ConfigParameters',this.TreeConfigureParameters.Value...
    );
    props=struct(...
    'TargetSelector',{this.savePropValues(this.PropsTargetSelector)},...
    'ConnectButton',{this.savePropValues(this.PropsConnectButton)},...
    'LoadButton',{this.savePropValues(this.PropsLoadButton)},...
    'StartStopButton',{this.savePropValues(this.PropsStartStopButton)},...
    'StopTime',{this.savePropValues(this.PropsStopTime)},...
    'SystemLog',{this.savePropValues(this.PropsSystemLog)},...
    'StatusBar',{this.savePropValues(this.PropsStatusBar)},...
    'Menu',{this.savePropValues(this.PropsMenu)}...
    );
    keys=this.PropsMap.keys;
    values=this.PropsMap.values;
    for i=1:numel(values)
        props.Map.(keys{i})=this.savePropValues(values{i});
    end
    data=struct(...
    'SessionSource',{this.SessionSource},...
    'Options',{options},...
    'TreeConfig',{treeConfig},...
    'Props',{props},...
    'BindingData',{this.BindingData},...
    'BindingTableData',{this.BindingTable.Data}...
    );


    try
        save(this.SessionSavedToFile,'data');
    catch ME
        this.errorDlg('slrealtime:appdesigner:SaveSessionError',ME.message);
        return;
    end


    this.Dirty=false;


    this.addToRecentSessionFiles(filename,this.SessionSavedToFile);
end
