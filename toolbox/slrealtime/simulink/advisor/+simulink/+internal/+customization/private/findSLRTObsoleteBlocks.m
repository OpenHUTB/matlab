function result=findSLRTObsoleteBlocks(model,key)




    switch key
    case 'UDPConfig'
        libraryBlocks={...
        'xpcrtudplib/UDP Configure',...
        sprintf('xpciplib/Real-time UDP \nConfiguration '),...
        sprintf('ptplib/PTP UDP/Real-time UDP \nConfiguration ')};
    case 'OtherUDP'
        libraryBlocks={...
        'ptplib/PTP UDP/UDP Produce ',...
        'ptplib/PTP UDP/UDP Tx ',...
        'ptplib/PTP UDP/UDP Rx ',...
        'ptplib/PTP UDP/UDP Consume ',...
        'ptplib/PTP UDP/Send ',...
        'ptplib/PTP UDP/Receive ',...
        'xpciplib/UDP Produce ',...
        'xpciplib/UDP Tx ',...
        'xpciplib/UDP Rx ',...
        'xpciplib/UDP Consume '};
    case 'PTP'
        libraryBlocks={...
        'ptplib/IEEE 1588 Real-Time UDP',...
        'ptplib/IEEE 1588 Ethernet',...
        sprintf('ptplib/IEEE 1588\nSync Status'),...
        'ptplib/IEEE 1588 Sync Execution',...
        'ptplib_internal/IEEE1588 Setup ',...
        'ptplib_internal/IEEE1588 Create Message ',...
        'ptplib_internal/IEEE1588 Process Message ',...
        'ptplib_internal/IEEE1588 Adjust Time ',...
        'ptplib_internal/IEEE 1588 Sync Error',...
        'ptplib_internal/Current Step Size',...
        'ptplib_internal/Adjust Step Size'};
    case 'J1939'
        libraryBlocks={...
        'xpcJ1939lib/J1939 Unpack',...
        'xpcJ1939lib/J1939 Pack',...
        'xpcJ1939lib/J1939 Message Triggering/Timer',...
        'xpcJ1939lib/J1939 Database Setup',...
        'xpcJ1939lib/J1939 Transmit',...
        'xpcJ1939lib/J1939 Receive',...
        'xpcJ1939lib/J1939 Message Triggering',...
        'xpcJ1939lib/J1939 Protocol Stack',...
        'xpcJ1939lib/J1939 Controller Application',...
        'xpcJ1939lib/J1939 Database (CANdb) Setup',...
        'xpcJ1939lib/J1939 Message Trigger',...
        'xpcJ1939lib/J1939 Transmit Message',...
        'xpcJ1939lib/J1939 Receive Message'};
    case 'FPGA'
        libraryBlocks={...
        'xpcfpgalib/Speedgoat IO325/IO325 Setup',...
        'xpcfpgalib/Speedgoat IO325/IO325 PCI Read',...
        'xpcfpgalib/Speedgoat IO325/IO325 PCI Write',...
        'xpcfpgalib/Speedgoat IO325/IO325 A//D Calibration',...
        'xpcfpgalib/Speedgoat IO3xx/IO3xx Setup',...
        'xpcfpgalib/Speedgoat IO3xx/IO3xx PCI Read Write',...
        'xpcfpgalib/Speedgoat IO3xx/IO3xx PCI Read',...
        'xpcfpgalib/Speedgoat IO3xx/IO3xx PCI Write',...
        'xpcfpgalib/Speedgoat IO3xx/IO321-5 A//D Calibration',...
        'xpcfpgalib/Speedgoat IO3xx/IO331-6 A//D Range',...
        'xpcfpgalib/Speedgoat IO333/IO333 Setup',...
        'xpcfpgalib/Speedgoat IO333/IO333 PCI Read Write',...
        'xpcfpgalib/Speedgoat IO333/IO333 PCI Read',...
        'xpcfpgalib/Speedgoat IO333/IO333 PCI Write'};
    case 'Overload'
        libraryBlocks={...
        sprintf('slrtlib/Target\nManagement/Execution\nParameters/Task Execution\nTime '),...
        sprintf('slrtlib/Target\nManagement/Execution\nParameters/Get Overload\nCounter '),...
        sprintf('slrtlib/Target\nManagement/Execution\nParameters/Set Overload\nCounter ')};
    case 'IRQ'
        libraryBlocks={...
        sprintf('slrtlib/Asynchronous\nEvent/IRQ Source ')};
    case 'FromFile'
        libraryBlocks={...
        sprintf('slrtlib/Target\nManagement/From File ')};
    case 'All'
        libraryBlocks={};
    otherwise
        error('Invalid key');
    end

    result=locFind(model,libraryBlocks);

end

function list=locFind(model,libraryBlocks)
    if~isempty(libraryBlocks)
        validateattributes(libraryBlocks,{'cell'},{'vector'});
        list={};
        for i=1:length(libraryBlocks)
            list=[list;find_system(model,...
            'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
            'FollowLinks','on',...
            'LookUnderMasks','on',...
            'MaskType','Obsolete Simulink Real-Time Block',...
            'ObsoleteBlock',libraryBlocks{i})];%#ok<AGROW>
        end
    else
        list=find_system(model,...
        'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
        'FollowLinks','on',...
        'LookUnderMasks','on',...
        'MaskType','Obsolete Simulink Real-Time Block');
    end
end