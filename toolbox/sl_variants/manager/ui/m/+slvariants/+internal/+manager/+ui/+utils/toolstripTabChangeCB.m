function toolstripTabChangeCB(tabName,modelHandle)





    import slvariants.internal.manager.ui.config.ReduceAnalyzeModes;
    import slvariants.internal.manager.ui.config.VMgrConstants;

    modelName=getfullname(modelHandle);
    configsDlg=slvariants.internal.manager.ui.config.getConfigurationsDialog(modelName);
    configDlgSchema=configsDlg.getSource;

    configs=configDlgSchema.SourceObj.Configurations;
    vmStudioHandle=slvariants.internal.manager.core.getStudio(modelHandle);
    modelHierarchySS=vmStudioHandle.getComponent('GLUE2:SpreadSheet',message('Simulink:VariantManagerUI:HierarchyTitleVariant').getString());


    helpCompIdx=slvariants.internal.manager.ui.utils.getHelpComponentIndices();
    defaultHelpTabIdx=0;


    vMgrToolStrip=vmStudioHandle.getToolStrip;

    vMgrStudioContainer=slvariants.internal.manager.core.getStudioContainer(modelHandle);
    ctxApp=vMgrStudioContainer.getContextObject.App;


    configsDDGComp=slvariants.internal.manager.ui.config.getConfigurationsComp(modelHandle);
    configsDDGComp.Title=slvariants.internal.manager.ui.config.VMgrConstants.Configurations;


    autoGenConfigureCtrlVarDDGComp=vmStudioHandle.getComponent('GLUE2:DDG Component',message('Simulink:VariantManagerUI:AutoGenConfigureControlVariablesDDG').getString());
    autoGeneratedConfigsDDGComp=vmStudioHandle.getComponent('GLUE2:DDG Component',message('Simulink:VariantManagerUI:AutoGeneratedConfigsDDG').getString());

    diagComp=vmStudioHandle.getComponent('GLUE2:DDG Component',message('Simulink:VariantManagerUI:DiagnosticsTitle').getString());

    constraintsDlg=slvariants.internal.manager.ui.config.getConstraintsDialog(modelName);
    constrsDDGComp=slvariants.internal.manager.ui.config.getConstraintsComp(modelHandle);

    switch tabName
    case 'variantManagerTab'
        configDlgSchema.ReduceAnalyzeModeFlag=ReduceAnalyzeModes.Unset;


        configsDlg.refresh();
        constraintsDlg.refresh();



        slvariants.internal.manager.ui.utils.setHelpDocIndex(vmStudioHandle,defaultHelpTabIdx);

        transitReduceAnalyzeTabToManageTab();




        showManageTabComponents();
        hideGenerateTabComponents();
        modelHierarchySS.enable;

    case 'variantReducerTab'

        modelHierarchySS.disable;
        if isempty(ctxApp.ReductionOptions.ReductionMode)
            defaultMode=defaultReductionOrAnalysisMode();

            ctxApp.ReductionOptions.ReductionMode=defaultMode;
            as=vMgrToolStrip.getActionService();
            as.refreshAction('variantReductionModeDropDownAction');
        end


        slvariants.internal.manager.ui.compbrowser.SpreadSheetTabChange.setCompBrowserVisible(modelName,false);

        hideGenerateTabComponents();
        showManageTabComponents();

        slvariants.internal.manager.ui.utils.switchReductionModeUtil(modelHandle,vmStudioHandle,ctxApp.ReductionOptions.ReductionMode);


        slvariants.internal.manager.ui.utils.setHelpDocIndex(vmStudioHandle,helpCompIdx.Reduce);


        constraintsDlg.refresh();


        as=vMgrToolStrip.getActionService();
        as.refreshAction('reduceModelPushButtonAction');
        as.refreshAction('variantReductionGenerateSummaryCheckBoxAction');

    case 'variantAnalyzerTab'

        slvariants.internal.manager.ui.compbrowser.SpreadSheetTabChange.setCompBrowserVisible(modelName,false);

        modelHierarchySS.disable;

        hideGenerateTabComponents();
        showManageTabComponents();
        if isempty(ctxApp.ConfigAnalysisMode)
            defaultMode=defaultReductionOrAnalysisMode();

            ctxApp.ConfigAnalysisMode=defaultMode;
            as=vMgrToolStrip.getActionService();
            as.refreshAction('variantConfigAnalysisModeDropDownAction');
        end

        slvariants.internal.manager.ui.utils.switchConfigAnalysisModeUtil(modelHandle,vmStudioHandle,ctxApp.ConfigAnalysisMode);


        slvariants.internal.manager.ui.utils.setHelpDocIndex(vmStudioHandle,helpCompIdx.Analyze);


        constraintsDlg.refresh()


        as=vMgrToolStrip.getActionService();
        as.refreshAction('analyzeModelPushButtonAction');

    case 'generateConfigTab'

        if~slvariants.internal.manager.core.createDlgForUnexportedChanges(modelHandle,configDlgSchema,vMgrToolStrip)
            return;
        end

        createGenerateTabComponentsIfNotCreated();




        showGenerateTabComponents();
        hideManageTabComponents();



        ctxApp.AutoGenConfigToolStripBroker.initializeGenerateTab(modelHandle);


        slvariants.internal.manager.ui.utils.setHelpDocIndex(vmStudioHandle,helpCompIdx.GenerateConfigs);
    end

    function isCompCreatedNow=createGenerateTabComponentsIfNotCreated()

        isCompCreatedNow=false;
        if isempty(autoGenConfigureCtrlVarDDGComp)
            autoGenConfigureCtrlVarDDGComp=slvariants.internal.manager.ui.configgen.createConfigCtrlVariablesDDG(modelHandle);
            isCompCreatedNow=true;
        end

        if isempty(autoGeneratedConfigsDDGComp)
            autoGeneratedConfigsDDGComp=slvariants.internal.manager.ui.configgen.createGeneratedConfigsDDG(modelHandle);
            isCompCreatedNow=true;
        end
    end

    function showGenerateTabComponents()
        vMgrStudioContainer.showComponent(autoGenConfigureCtrlVarDDGComp);



        vmStudioHandle.setActiveComponent(autoGenConfigureCtrlVarDDGComp);

        vMgrStudioContainer.showComponent(autoGeneratedConfigsDDGComp);



        vmStudioHandle.setActiveComponent(autoGeneratedConfigsDDGComp);


        vMgrStudioContainer.restoreComponent(diagComp);

        vmStudioHandle.moveComponentToDockPosition(diagComp,'right');
    end

    function hideGenerateTabComponents()
        if~isempty(autoGenConfigureCtrlVarDDGComp)
            vMgrStudioContainer.hideComponent(autoGenConfigureCtrlVarDDGComp);
        end
        if~isempty(autoGeneratedConfigsDDGComp)
            vMgrStudioContainer.hideComponent(autoGeneratedConfigsDDGComp);
        end


        vmStudioHandle.moveComponentToDockPosition(diagComp,'bottom');
        vMgrStudioContainer.minimizeComponent(diagComp);
    end

    function showManageTabComponents()
        slvariants.internal.manager.core.minimizeDiagnosticViewer(modelHandle);

        modelHierarchySS.show();

        modelHierarchySS.update();

        vMgrStudioContainer.showComponent(configsDDGComp);
        vMgrStudioContainer.showComponent(constrsDDGComp);
        vmStudioHandle.setActiveComponent(configsDDGComp);
    end

    function hideManageTabComponents()
        vMgrStudioContainer.hideComponent(configsDDGComp);
        vMgrStudioContainer.hideComponent(constrsDDGComp);




        modelHierarchySS.hide();
    end

    function transitReduceAnalyzeTabToManageTab()
        slvariants.internal.manager.core.hideVariableGroups(modelHandle);
        slvariants.internal.manager.ui.config.hideCheckBoxesInConfigNamesSS(modelHandle);
    end

    function defaultMode=defaultReductionOrAnalysisMode()

        if numel(configs)<1


            configDlgSchema.ReduceAnalyzeModeFlag=ReduceAnalyzeModes.SpecifyVariableGrps;


            configsDlg.refresh();

            defaultMode='Simulink:VariantManagerUI:VariantReducerCtrlvarRadiobuttonText';
        else


            configDlgSchema.ReduceAnalyzeModeFlag=ReduceAnalyzeModes.SpecifyVariantConfig;


            configsDlg.refresh();

            defaultMode='Simulink:VariantManagerUI:VariantReducerConfigRadiobuttonText';
        end

    end
end


