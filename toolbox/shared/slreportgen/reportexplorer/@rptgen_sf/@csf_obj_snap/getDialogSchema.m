function dlgStruct=getDialogSchema(this,name)




    if~builtin('license','checkout','SIMULINK_Report_Gen')
        dlgStruct=this.buildErrorMessage(name,true);
        return;
    end

    if this.isPrintFrame&&~strcmpi(this.imageSizing,'manual')&&~this.isPrintFrameSettings

        this.imageSizing='manual';
    end



    wImageFormat=this.dlgWidget('ImageFormat',...
    'ColSpan',[2,2],...
    'RowSpan',[1,1]);
    tImageFormat=this.dlgText(wImageFormat.Name,...
    'ColSpan',[1,1],...
    'RowSpan',wImageFormat.RowSpan);
    wImageFormat=rmfield(wImageFormat,'Name');

    allFormat=rptgen.getImgFormat('ALLSF');



    if ispc&&~rptgen.isWordOutput(this)
        idx=contains(allFormat(:,1),'wmf');
        formatDesc=allFormat{idx,2};
        idx=~cellfun(@(x)strcmp(x,formatDesc),wImageFormat.Entries);
        wImageFormat.Entries=wImageFormat.Entries(idx);
        wImageFormat.Values=wImageFormat.Values(idx);
    end


    if rptgen.use_java
        imgInfo=char(rptgen.getImgFormat('AUTOSF',this));
    else
        imgInfo=rptgen.getImgFormat('AUTOSF',this);
        imgInfo=imgInfo.Name;
    end
    idx=contains(allFormat(:,1),'AUTOSF');
    formatDesc=allFormat{idx,2};
    formatDescReplace=[formatDesc,' (',imgInfo,')'];

    idx=cellfun(@(x)strcmp(x,formatDesc),wImageFormat.Entries);
    wImageFormat.Entries{idx}=formatDescReplace;


    wPaperOrientation=this.dlgWidget('PaperOrientation',...
    'Enabled',~this.isPrintFrame||~this.isPrintFrameSettings,...
    'ColSpan',[2,2],...
    'RowSpan',[2,2]);
    tPaperOrientation=this.dlgText(wPaperOrientation.Name,...
    'ColSpan',[1,1],...
    'RowSpan',wPaperOrientation.RowSpan);
    wPaperOrientation=rmfield(wPaperOrientation,'Name');


    if~isempty(this.LastPrintUnits)&&~strcmpi(this.PrintUnits,this.LastPrintUnits)
        this.PrintSize=rptgen.convertUnits(this.PrintSize,this.LastPrintUnits,this.PrintUnits);
        this.MaxPrintSize=rptgen.convertUnits(this.MaxPrintSize,this.LastPrintUnits,this.PrintUnits);
        this.LastPrintUnits=this.PrintUnits;
    end
    if isempty(this.LastPrintUnits)
        this.LastPrintUnits=this.PrintUnits;
    end

    isZoom=(~this.isPrintFrame||~this.isPrintFrameSettings)&&strcmp(this.imageSizing,'zoom');
    isManual=(~this.isPrintFrame||~this.isPrintFrameSettings)&&strcmp(this.imageSizing,'manual');


    dlgStruct=this.dlgMain(name,{
    this.dlgContainer({
wImageFormat
tImageFormat

wPaperOrientation
tPaperOrientation

    this.dlgText('','ColSpan',[1,2],'RowSpan',[3,3],'MinimumSize',[1,10])
    gr_buildScalingContainer(this,[1,2],[4,4],true,...
    struct('Name','ScalingMode','MemberName','imageSizing',...
    'Enabled',~this.isPrintFrame||~this.isPrintFrameSettings),...
    struct('Name','Size','MemberName','PrintSize',...
    'Enabled',isManual),...
    struct('Name','Units','MemberName','PrintUnits',...
    'Enabled',isZoom||isManual),...
    struct('Name','Zoom','MemberName','PrintZoom',...
    'Enabled',isZoom),...
    struct('Name','MaxSize','MemberName','MaxPrintSize',...
    'Enabled',isZoom))

    },...
    getString(message('RptgenSL:rsf_csf_obj_snap:snapshotLabel')),...
    'LayoutGrid',[4,2],...
    'ColSpan',[1,1],...
    'ColStretch',[0,1],...
    'RowStretch',[0,0,0,0],...
    'RowSpan',[1,1])

    this.dlgContainer({
    this.dlgWidget('isCallouts',...
    'ColSpan',[1,5],...
    'RowSpan',[1,1])
    this.dlgWidget('isPrintFrame',...
    'DialogRefresh',true,...
    'Enabled',true,...
    'ColSpan',[1,2],...
    'RowSpan',[2,2])
    this.dlgWidget('PrintFrameName',...
    'Enabled',this.isPrintFrame,...
    'ColSpan',[3,4],...
    'RowSpan',[2,2])
    this.dlgFileBrowse('PrintFrameName','*.fig',...
    'Enabled',this.isPrintFrame,...
    'ColSpan',[5,5],...
    'RowSpan',[2,2])
    this.dlgWidget('isPrintFrameSettings',...
    'DialogRefresh',true,...
    'Enabled',this.isPrintFrame,...
    'ColSpan',[2,5],...
    'RowSpan',[3,3])
    this.dlgWidget('TerminalChildAnchors',...
    'ColSpan',[1,5],...
    'RowSpan',[4,4])
    this.dlgWidget('picMinChildren',...
    'ColSpan',[1,5],...
    'RowSpan',[5,5])
    },...
    getString(message('RptgenSL:rsf_csf_obj_snap:PropertiesLabel')),...
    'LayoutGrid',[5,3],...
    'ColStretch',[0,0,1],...
    'ColSpan',[1,1],...
    'RowSpan',[2,2])

    loc_buildAdvancedButton(this,[1,1],[3,3])

    this.gr_buildDisplayOptions(...
    struct('none',getString(message('RptgenSL:rsf_csf_obj_snap:noTitleLabel')),...
    'objname',getString(message('RptgenSL:rsf_csf_obj_snap:objectNameLabel')),...
    'fullsfname',getString(message('RptgenSL:rsf_csf_obj_snap:objectNameWithSFPathLabel')),...
    'fullslsfname',getString(message('RptgenSL:rsf_csf_obj_snap:objectNameWithSLSFPathLabel')),...
    'manual','-Title'),...
    struct('manual','-Caption',...
    'auto',getString(message('RptgenSL:rsf_csf_obj_snap:fromDescriptionLabel')),...
    'none',getString(message('RptgenSL:rsf_csf_obj_snap:noCaptionLabel'))),...
    'RowSpan',[4,4],...
    'ColSpan',[1,1],...
    'Visible',this.isAdvancedVisible)

    },...
    'LayoutGrid',[5,1],...
    'RowStretch',[0,0,0,0,1]);
end





function button=loc_buildAdvancedButton(this,colSpan,rowSpan)

    if this.isAdvancedVisible
        label=getString(message('RptgenSL:rsf_csf_obj_snap:AdvancedLeftLabel'));
    else
        label=getString(message('RptgenSL:rsf_csf_obj_snap:AdvancedRightLabel'));
    end

    button=struct('Type','pushbutton',...
    'Enabled',true,...
    'Name',label,...
    'ObjectMethod','toggleAdvanced',...
    'ToolTip',getString(message('RptgenSL:rsf_csf_obj_snap:toggleAdvancedOptionsLabel')),...
    'DialogRefresh',true,...
    'ColSpan',colSpan,...
    'RowSpan',rowSpan,...
    'MaximumSize',[100,100]);
end
