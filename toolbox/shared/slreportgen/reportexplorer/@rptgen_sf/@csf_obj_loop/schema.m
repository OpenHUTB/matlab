function schema






    pkg=findpackage('rptgen_sf');
    pkgRG=findpackage('rptgen');

    h=schema.class(pkg,'csf_obj_loop',pkgRG.findclass('rpt_looper'));

    lic='SIMULINK_Report_Gen';


    termTypes=listTerminalTypes(rptgen_sf.appdata_sf);

    for i=1:length(termTypes)
        p=rptgen.prop(h,['isReport',termTypes{i}],'bool',true,...
        sprintf(getString(message('RptgenSL:rsf_csf_obj_loop:reportOnObjectsLabel')),termTypes{i}),lic);
    end


    p=rptgen.prop(h,'Depth',{
    'local',getString(message('RptgenSL:rsf_csf_obj_loop:localChildrenOnlyLabel'))
    'deep',getString(message('RptgenSL:rsf_csf_obj_loop:allObjectsLabel'))
    },'local',getString(message('RptgenSL:rsf_csf_obj_loop:reportDepthLabel')),lic);


    p=rptgen.prop(h,'RemoveRedundant','bool',false,...
    getString(message('RptgenSL:rsf_csf_obj_loop:removeLessComplexObjectsLabel')),lic);


    p=rptgen.prop(h,'SkipAutogenerated','bool',true,...
    getString(message('RptgenSL:rsf_csf_obj_loop:skipAutoGeneratedChartsLabel')),lic);


    p=rptgen.prop(h,'isSFFilterList','bool',false,...
    getString(message('RptgenSL:rsf_csf_obj_loop:searchStateflowLabel')),lic);


    p=rptgen.prop(h,'SFFilterTerms','MATLAB array',{'Tag','MyTag'},...
    '',lic);
    p.Visible='off';


    p=rptgen.prop(h,'LockType','bool',false,...
    '');
    p.AccessFlags.PublicSet='off';
    p.AccessFlags.PublicGet='off';
    p.Visible='off';











    rptgen.makeStaticMethods(h,{
    },{
'loop_getContextString'
'loop_getLoopObjects'
'loop_getObjectType'
'loop_getPropSrc'
'loop_restoreState'
'loop_saveState'
'loop_setState'
    });


    p=rptgen.prop(h,'isReportNote','bool',false,...
    '',lic);
    p.AccessFlags.Serialize='off';
    p.AccessFlags.Copy='off';
    p.AccessFlags.Init='off';
    p.AccessFlags.AbortSet='off';
    p.GetFunction=@getReportNote;
    p.SetFunction=@setReportNote;
    p.Visible='off';


    function returnedValue=getReportNote(this,storedValue)%#ok



        returnedValue=get(this,'isReportAnnotation');


        function valueStored=setReportNote(this,proposedValue)



            set(this,'isReportAnnotation',proposedValue);
            valueStored='';

