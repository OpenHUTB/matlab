function status=buildModelRefsForSLDV(topMdl,varargin)




    topModelH=get_param(topMdl,'Handle');
    try
        topModelCodeGenFolder='';




        buildArgs=coder.build.internal.createBuildArgs(topMdl,...
        topModelCodeGenFolder,varargin{:});
        buildArgs.IsUpdatingSimForRTW=true;


        [~,genSettings]=coder.internal.getSTFInfo...
        (topMdl,...
        'noTLCSettings',true,...
        'modelreferencetargettype',buildArgs.ModelReferenceTargetType);
        cleanupGenSettingsCache=coder.internal.infoMATFileMgr...
        ([],[],[],[],...
        'InitializeGenSettings',genSettings);%#ok<NASGU>




        searchForAllModels=true;
        simMode=get_param(topMdl,'SimulationMode');
        orderedMdlRefs=slprivate('get_ordered_model_references',topMdl,searchForAllModels,...
        'ModelReferenceRTWTargetOnly',buildArgs.ModelReferenceRTWTargetOnly,...
        'ModelReferenceTargetType',buildArgs.ModelReferenceTargetType,...
        'OnlyCheckConfigsetMismatch',buildArgs.OnlyCheckConfigsetMismatch,...
        'TopOfBuildModel',buildArgs.TopOfBuildModel,...
        'UpdateTopModelReferenceTarget',buildArgs.UpdateTopModelReferenceTarget,...
        'Verbose',buildArgs.Verbose,...
        'XilInfo_IsModelBlockXil',buildArgs.XilInfo.IsModelBlockXil,...
        'XilInfo_UpdatingRTWTargetsForXil',buildArgs.XilInfo.UpdatingRTWTargetsForXil,...
        'isUpdatingSimForRTW',buildArgs.IsUpdatingSimForRTW,...
        'IsRapidAccelerator',buildArgs.IsRapidAccelerator,...
        'IsRSim',buildArgs.IsRSim,...
        'ConfigSetActivator',buildArgs.ConfigSetActivator,...
        'SimModeIn',simMode,...
        'GenerateCodeOnly',buildArgs.BaGenerateCodeOnly,...
        'ModelCompInfo',buildArgs.BaModelCompInfo,...
        'DefaultCompInfo',buildArgs.BaDefaultCompInfo);

        assert(~buildArgs.UpdateTopModelReferenceTarget,...
        'Top model should not be updated as a model reference target');

        orderedMdlRefs=orderedMdlRefs(1:end-1);

        mdlRefNames={orderedMdlRefs.modelName};
        nTotalMdls=length(mdlRefNames);
        mdlRefStatus=false(1,nTotalMdls);
        for idx=1:nTotalMdls
            mdlRefH=get_param(mdlRefNames{idx},'Handle');
            mdlRefStatus(idx)=sldvshareprivate('rtwgenForSLDV',topModelH,mdlRefH,buildArgs);
        end
        status=true;
    catch MEx %#ok<NASGU> 
        status=false;
    end
end


