function script=hdlgetlintscript(tool,script_type)


































    scripts=initLintScript(tool);

    if(nargin<2)
        script=scripts;
        return;
    end

    tool_scripts.HDLLintCmd=scripts{2};
    tool_scripts.HDLLintInit=scripts{4};
    tool_scripts.HDLLintTerm=scripts{6};

    script=tool_scripts.(script_type);

    return

end


function newParams=initLintScript(tool)
    switch(lower(tool))
    case lower('SpyGlass')
        newParams={
        'HDLLintCmd','read_file -type hdl %s\n',...
        'HDLLintInit',['#!SPYGLASS_PROJECT_FILE\n'...
        ,'#!VERSION 3.0\n'],...
        'HDLLintTerm',['##Common Options Section\n',...
        'set_option projectwdir .\n',...
        'set_option language_mode mixed\n',...
        'set_option designread_enable_synthesis yes\n',...
        'set_option designread_disable_flatten no\n',...
        'set_option active_methodology $SPYGLASS_HOME/GuideWare/New_RTL\n',...
        '##Goal Setup Section\n',...
        'current_methodology $SPYGLASS_HOME/GuideWare/New_RTL\n\n',...
        '##Custom Goals\n',...
        'define_goal starcgoal -policy { starc2005 } {\n',...
        '}\n']};
    case lower('LEDA')
        newParams={
        'HDLLintCmd','',...
        'HDLLintInit','#!/bin/csh -f',...
        'HDLLintTerm',['setenv LEDA_LANGUAGE JAPANESE\n',...
        'setenv LANG C\n',...
        '\n',...
        '# prepare Rule File as following\n',...
        'setenv  LEDA_CONFIG  ./leda_config.tcl\n',...
        '\n',...
        'if ( $hdl_lang == "ver" ) then\n',...
        '	leda	-translate_directive	\\\n',...
        '			-f			LEDA_ver.lst \\\n',...
        '			+v2k		\\\n',...
        '			-top		$mod_name \\\n',...
        '			-full_log \\\n',...
        '			-summary \\\n',...
        '			-log_dir	LOG \\\n',...
        '			-config		$LEDA_CONFIG \\\n',...
        '			-html		LOG/leda-html\\\n',...
        'else if ( $hdl_lang == "vhd" ) then\\\n',...
        '	leda 	-top		$mod_name \\\n',...
        '			-files		LEDA_vhd.lst \\\n',...
        '			-log_dir	LOG \\\n',...
        '			-html		LOG/leda-html \\\n',...
'			-mk \\\n'...
        ,'			-translate_directive\\\n',...
        'endif']};
    case{lower('AscentLint'),lower('Ascent Lint')}
        newParams={'HDLLintCmd','analyze -work %s -format %s %s\n',...
        'HDLLintInit',['cleanup\n',...
        'disable_rules MULTIPLY\n',...
        'set ri_max_loop_unroll 4096\n',...
        'set ri_max_total_range_bits 400000\n'],...
        'HDLLintTerm',['elaborate -work %s %s\n',...
        'report -output %s_AscentLint.rpt -top %s -errors -warnings -info']};
    case lower('Custom')
        newParams={'HDLLintCmd','%s\n',...
        'HDLLintInit','#!/bin/csh',...
        'HDLLintTerm',''};
    case{lower('HDLDesigner'),lower('HDL Designer')}
        newParams={'HDLLintCmd','append files [pwd]/%s " "\n',...
        'HDLLintInit',['#execute the following command on terminal to kickoff Lint analysis',char(10),...
        '#hdl_designer -tcl ./%s_HDLDesigner.prj ',char(10),...
        'set DIR [file normalize [pwd]]',char(10),...
        'set files ""',char(10),...
        'setupTask {DesignChecker} -setting Policy My_DO-254_Policy',char(10),...
        'setupTask {DesignChecker} -setting OutputFormat CSV',char(10),...
        'setupTask {DesignChecker} -setting OutputFile %s_HDLDesigner.csv',char(10),...
        'setupTask {DesignChecker} -setting SummaryFormat CSV',char(10),...
        'setupTask {DesignChecker} -setting SummaryFile %s_Summary_HDLDesigner.csv',char(10)],...
        'HDLLintTerm',['',char(10),...
        'setLibrariesRootDirectory $DIR',char(10),...
        'eval runHdlImport {"%s"} $files -copy',char(10),...
        'runTask {DesignChecker} %s %s',char(10)]};
    otherwise
        newParams={'HDLLintCmd','',...
        'HDLLintInit','',...
        'HDLLintTerm',''};
    end




    assert(strcmpi(newParams{1},'HDLLintCmd'),' Parameter name changed');
    assert(strcmpi(newParams{3},'HDLLintInit'),' Parameter name changed');
    assert(strcmpi(newParams{5},'HDLLintTerm'),' Parameter name changed');

end
