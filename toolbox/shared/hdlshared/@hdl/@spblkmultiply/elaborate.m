function elaborate(this)





    hN=this.hN;
    slrate=this.slrate;

    outexp=hdlexpandconnectiontovectorsignal(hN,this.out);
...
...
...
...
...
...
...
...
...
...
...
...
...
...

    if this.cplx1&&this.cplx2
        re1exp=hdlexpandvectorsignal(this.re1);
        re2exp=hdlexpandvectorsignal(this.re2);
        im1exp=hdlexpandvectorsignal(this.im1);
        im2exp=hdlexpandvectorsignal(this.im2);

        for ii=1:length(this.in1vec)
            hT1=this.in1vec(ii).Type.BaseType;
            hT2=this.in2vec(ii).Type.BaseType;
            in1vec_re=hN.addSignal2('Type',hT1,'Name',[this.in1.Name,'_',num2str(ii-1),'_re'],...
            'SimulinkRate',slrate);
            in1vec_im=hN.addSignal2('Type',hT1,'Name',[this.in1.Name,'_',num2str(ii-1),'_im'],...
            'SimulinkRate',slrate);
            in2vec_re=hN.addSignal2('Type',hT2,'Name',[this.in2.Name,'_',num2str(ii-1),'_re'],...
            'SimulinkRate',slrate);
            in2vec_im=hN.addSignal2('Type',hT2,'Name',[this.in2.Name,'_',num2str(ii-1),'_im'],...
            'SimulinkRate',slrate);
            pirelab.getComplex2RealImag(hN,this.in1vec(ii),[in1vec_re,in1vec_im]);
            pirelab.getComplex2RealImag(hN,this.in2vec(ii),[in2vec_re,in2vec_im]);

            pirelab.getMulComp(hN,[in1vec_re,in2vec_re],re1exp(ii),...
            this.rounding,this.saturation);

            pirelab.getMulComp(hN,[in1vec_re,in2vec_im],im1exp(ii),...
            this.rounding,this.saturation);

            pirelab.getMulComp(hN,[in1vec_im,in2vec_re],im2exp(ii),...
            this.rounding,this.saturation);

            pirelab.getMulComp(hN,[in1vec_im,in2vec_im],re2exp(ii),...
            this.rounding,this.saturation);


            outexp_re=hN.addSignal2('Type',outexp(ii).Type.BaseType,...
            'Name',[outexp(ii).Name,'_',num2str(ii-1),'_re'],...
            'SimulinkRate',slrate);
            outexp_im=hN.addSignal2('Type',outexp(ii).Type.BaseType,...
            'Name',[outexp(ii).Name,'_',num2str(ii-1),'_im'],...
            'SimulinkRate',slrate);



            pirelab.getSubComp(hN,[re1exp(ii),re2exp(ii)],outexp_re,this.rounding,this.saturation);

            pirelab.getAddComp(hN,[im1exp(ii),im2exp(ii)],outexp_im,this.rounding,this.saturation);


            pirelab.getRealImag2Complex(hN,[outexp_re,outexp_im],outexp(ii));


        end
    else
        for ii=1:length(this.in1vec)
            pirelab.getMulComp(hN,[this.in1vec(ii),this.in2vec(ii)],outexp(ii),...
            this.rounding,this.saturation);
        end
    end
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...


