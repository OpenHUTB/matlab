function hdlbody=vhdlcheckerdelay(this,instance,check_enb,check_cnt,cnt_sz,delay,rd_enb)




    hdlbody=[];

    counter=hdlsignalname(check_cnt);
    enable=hdlsignalname(check_enb);
    rdenb=hdlsignalname(rd_enb);

    if cnt_sz<2
        cnt_reset=[counter,' <= ''0'';\n'];
    else
        cnt_reset=[counter,' <= (others => ''0'');\n'];
    end

    ClockName=this.OutportSnk(instance).ClockName;
    ResetName=getResetNameForPort(this,instance,'out');

    if delay==1
        enableCondition=[rdenb,' = ''1'''];

        if hdlgetparameter('clockedge')==0
            hdlbody=[hdlbody,...
            sprintf('  checker_delay%d: PROCESS(%s, %s)\n',instance,ClockName,ResetName),...
            '  BEGIN\n',...
            sprintf('    IF %s = ''%d'' THEN\n',ResetName,this.ForceResetValue),...
            '      ',enable,' <= ''0'';\n',...
            '    ELSIF ',ClockName,'''event and ',ClockName,' =''1'' THEN\n'];
        else
            hdlbody=[hdlbody,...
            sprintf('  checker_delay%d: PROCESS(%s, %s)\n',instance,ClockName,ResetName),...
            '  BEGIN\n',...
            sprintf('    IF %s = ''%d'' THEN\n',ResetName,this.ForceResetValue),...
            '      ',enable,' <= ''0'';\n',...
            '    ELSIF ',ClockName,'''event and ',ClockName,' =''0'' THEN\n'];
        end

        hdlbody=[hdlbody,...
        '      IF ',enableCondition,' THEN\n',...
        '         ',enable,' <= ''1'';\n',...
        '      END IF;\n',...
        '    END IF;\n',...
        sprintf('  END PROCESS checker_delay%d;\n\n',instance)];
    else

        if hdlgetparameter('clockedge')==0
            clock_str=['    ELSIF ',ClockName,'''event and ',ClockName,' =''1'' THEN\n'];
        else
            clock_str=['    ELSIF ',ClockName,'''event and ',ClockName,' =''0'' THEN\n'];
        end

        if delay==2
            counterCondition=[rdenb,' = ''1'' AND ',counter,' /= ''1'''];
            enableCondition=[rdenb,' = ''1'' AND ',counter,' = ''1'''];
            counterAssign=[counter,' <= ''1'';\n'];
        else
            counterCondition=sprintf('%s = ''1'' AND %s < %d',rdenb,counter,delay-1);
            enableCondition=sprintf('%s = ''1'' AND %s = %d',rdenb,counter,delay-1);
            counterAssign=sprintf('%s <= %s + 1;\n',counter,counter);
        end
        hdlbody=[hdlbody,...
        sprintf('  checker_delay%d: PROCESS(%s, %s)\n',instance,ClockName,ResetName),...
        '  BEGIN\n',...
        sprintf('    IF %s = ''%d'' THEN\n',ResetName,this.ForceResetValue),...
        '      ',enable,' <= ''0'';\n',...
        '      ',cnt_reset,...
        clock_str];
        hdlbody=[hdlbody,...
        '      IF (',counterCondition,') THEN\n',...
        '         ',counterAssign,...
        '      END IF;\n',...
        '      IF ',enableCondition,' THEN\n',...
        '         ',enable,' <= ''1'';\n',...
        '      END IF;\n',...
        '    END IF;\n',...
        sprintf('  END PROCESS checker_delay%d;\n\n',instance)];
    end
