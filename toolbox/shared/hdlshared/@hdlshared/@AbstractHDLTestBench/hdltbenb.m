function hdlbody=hdltbenb(this,srcDone,snkDone,tb_enb,testFailure)


    if this.ForceClock==1
        hdlbody=[this.insertComment({'Driving the test bench enable'}),'\n'];

        hasoutput=this.DutHasOutputs;

        if hasoutput==true
            endsignaltest=hdlsignalname(snkDone);
        else
            endsignaltest=hdlsignalname(srcDone);
        end

        label='completed_msg';

        if hdlgetparameter('isvhdl')
            resetassertedval=sprintf('''%d''',this.ForceResetValue);
            if hasoutput==1
                assert_section=[...
                '        IF (',hdlsignalname(testFailure),' = ''0'') THEN\n',...
                '              ASSERT FALSE\n',...
                '                REPORT "**************TEST COMPLETED (PASSED)**************"\n',...
                '                SEVERITY NOTE;\n',...
                '        ELSE\n',...
                '              ASSERT FALSE\n',...
                '                REPORT "**************TEST COMPLETED (FAILED',this.additionalSimFailureMsg,')**************"\n',...
                '                SEVERITY NOTE;\n',...
                '        END IF;\n'];
            else
                assert_section=[...
                '  ASSERT FALSE\n',...
                '    REPORT "**************TEST COMPLETED (PASSED)**************"\n',...
                '    SEVERITY NOTE;\n'];
            end

            hdlbody=[hdlbody,...
            '  ',hdlsignalname(tb_enb),' <= ''0'' WHEN ',this.ResetName,' = ',resetassertedval,' ELSE \n',...
            '            ''1'' WHEN ',endsignaltest,' = ''0'' ELSE \n',...
            '            ''0'' AFTER ',this.hdlclkperiod(this.ClockName),' * 2;\n\n'];


            if hdlgetparameter('clockedge')==0
                clock_str=['    ELSIF ',this.ClockName,'''event AND ',this.ClockName,' = ''1'' THEN\n'];
            else
                clock_str=['    ELSIF ',this.ClockName,'''event AND ',this.ClockName,' = ''0'' THEN\n'];
            end

            hdlbody=[hdlbody,...
            '  ',label,': PROCESS (',this.ClockName,', ',this.ResetName,')\n',...
            '  BEGIN\n',...
            '    IF (',this.ResetName,' = ',resetassertedval,') THEN \n',...
            '       -- Nothing to reset here.\n',...
            clock_str,...
            '      IF ',endsignaltest,'=''1'' THEN\n',...
            assert_section,...
            '      END IF;\n',...
            '    END IF;\n',...
            '  END PROCESS ',label,';\n\n'];
        else
            if hasoutput==1
                assert_section=[...
                '        if (',hdlsignalname(testFailure),' == 0)\n',...
                '              $display("**************TEST COMPLETED (PASSED)**************");\n',...
                '        else\n',...
                '              $display("**************TEST COMPLETED (FAILED',this.additionalSimFailureMsg,')**************");\n'];
            else
                assert_section='  $display("**************TEST COMPLETED (PASSED)**************");\n';
            end

            if(this.ForceResetValue==0)
                resetedge='negedge';
                resetinv='~';
            else
                resetedge='posedge';
                resetinv='';
            end

            hdlbody=[hdlbody,...
            '  always @(',this.ResetName,', ',endsignaltest,')\n',...
            '  begin\n',...
            sprintf('    if (%s == 1''b%d)\n',this.ResetName,this.ForceResetValue),...
            '      ',hdlsignalname(tb_enb),' <= 1''b0;\n',...
            '    else if (',endsignaltest,' == 1''b0 )\n',...
            '      ',hdlsignalname(tb_enb),' <= 1''b1;\n',...
            '    else begin\n',...
            '    # (',this.hdlclkperiod(this.ClockName),' * 2);\n',...
            '      ',hdlsignalname(tb_enb),' <= 1''b0;\n',...
            '    end\n',...
            '  end\n\n'];

            fpCloseBody=[];
            if hdlgetparameter('clockedge')==0
                clk_str=['  always @(posedge ',this.ClockName,' or ',resetedge,' ',this.ResetName,') // ',label,'\n'];
            else
                clk_str=['  always @(negedge ',this.ClockName,' or ',resetedge,' ',this.ResetName,') // ',label,'\n'];
            end

            hdlbody=[hdlbody,...
            clk_str,...
            '  begin\n',...
            '    if (',resetinv,this.ResetName,') begin \n',...
            '       // Nothing to reset.\n',...
            '    end \n',...
            '    else begin \n',...
            '      if (',endsignaltest,' == 1) begin\n',...
            fpCloseBody,...
            assert_section,...
            '      end\n',...
            '    end\n',...
            '  end // ',label,';\n\n'];
        end
    else
        hdlbody=[];
    end
end

