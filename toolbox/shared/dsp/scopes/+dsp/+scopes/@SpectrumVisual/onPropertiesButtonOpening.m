function onPropertiesButtonOpening(this,hButton,~)




    handles=this.Handles;

    if isempty(handles)||~isfield(handles,'SpectrumSettingsButton')
        handles.SpectrumSettingsButton=uitoggletool(hButton,...
        'Tag','uimgr.uitoggletool_SpectrumSettings',...
        'ClickedCallback',hButton.ClickedCallback,...
        'CData',hButton.CData,...
        'State',hButton.State,...
        'TooltipString',hButton.TooltipString);

        hScope=this.Application;
        handles.PropertiesButton=uipushtool(hButton,...
        'Tag','uimgr.uipushtool_Properties',...
        'CData',getIcon(hScope,'parameters'),...
        'ClickedCallback',uiservices.makeCallback(@onEditOptions,this),...
        'TooltipString',getString(message('Spcuilib:scopes:DisplayPropertiesContextMenuLabel')));

        handles.StyleButton=uipushtool(hButton,...
        'Tag','uimgr.uipushtool_Style',...
        'CData',getIcon(hScope,'style'),...
        'ClickedCallback',uiservices.makeCallback(@showStyleDialog,this),...
        'TooltipString',getString(message('Spcuilib:scopes:ButtonViewStyle')));

        handles.LegendButton=uitoggletool('Parent',hButton,...
        'Tag','button_Legend',...
        'CData',getIcon(hScope,'toggle_legend'),...
        'ClickedCallback',@this.toggleLegend,...
        'TooltipString',getString(message('Spcuilib:scopes:LegendLabel')));

        this.Handles=handles;
    end


    set(handles.StyleButton,'Enable',uiservices.logicalToOnOff(~isempty(this.Lines)));
    set(handles.LegendButton,'State',uiservices.logicalToOnOff(isLegendVisible(this)));

