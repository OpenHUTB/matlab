function onViewMenuOpening(this,hScope,~)






    handles=this.Handles;
    if isempty(handles)||~isfield(handles,'PropertiesMenu')
        position=uiservices.Counter(0);
        hView=hScope.Handles.viewMenu;


        handles.PropertiesMenu=uimenu(hView,...
        'Tag','uimgr.uimenu_Properties',...
        'Position',position.next,...
        'Label',uiscopes.message('DisplayPropertiesLabel'),...
        'Callback',uiservices.makeCallback(@onEditOptions,this));

        handles.StyleMenu=uimenu(hView,...
        'Tag','uimgr.uimenu_Style',...
        'Position',position.next,...
        'Label',uiscopes.message('MenuViewStyle'),...
        'Callback',uiservices.makeCallback(@showStyleDialog,this));

        handles.LegendMenu=uimenu(hView,...
        'Tag','menu_showLegend',...
        'Position',position.next,...
        'Label',getString(message('Spcuilib:scopes:MenuViewLegend')),...
        'Callback',@this.toggleLegend);

        handles.SpectrumSettingsMenu=uimenu(hView,...
        'Tag','uimgr.spctogglemenu_SpectrumSettings',...
        'Position',length(hView.Children)+1,...
        'Separator','on',...
        'Label',getString(message('dspshared:SpectrumAnalyzer:SpectrumSettings')),...
        'Callback',uiservices.makeCallback(@toggleSpectrumSettingsDialog,this));

        this.Handles=handles;
    end

    set(handles.StyleMenu,'Enable',uiservices.logicalToOnOff(~isempty(this.Lines)));
    set(handles.LegendMenu,'Checked',uiservices.logicalToOnOff(isLegendVisible(this)));
    set(handles.LegendMenu,'Enable',uiservices.logicalToOnOff(~isSpectrogramMode(this)));
    set(handles.SpectrumSettingsMenu,'Checked',uiservices.logicalToOnOff(this.SpectrumSettingsDialogEnabled));
