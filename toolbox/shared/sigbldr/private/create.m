function dialog=create(varargin)




    persistent stvbmp;%#ok<PSET> % loaded from .mat file

    if nargin>0&&~isempty(varargin{1})
        keep_hidden=varargin{1};
    else
        keep_hidden=0;
    end

    if nargin>1

        dataSet=dataSet_data_struct(varargin{2});
    else

        dataSet=dataSet_data_struct;
    end


    geomConst.scrollHeight=15;
    geomConst.axesVdelta=14;
    geomConst.figBuffer=8;
    geomConst.smallFigBuff=3;
    geomConst.bevelBuff=1.5;

    if(ispc)
        geomConst.bevelBevelDelta=1.5;
        geomConst.wideBevelBevelDelta=0.75;
        geomConst.bevelFigDelta=0;
        geomConst.bevelInset=8;
        geomConst.bevelSelectorDelta=1.5;
        geomConst.bevelDelta=0;
        geomConst.bevelOff=3;
    else
        geomConst.bevelBevelDelta=1.5;
        geomConst.wideBevelBevelDelta=0.75;
        geomConst.bevelFigDelta=0.75;
        geomConst.bevelInset=8;
        geomConst.bevelSelectorDelta=1.5;
        geomConst.bevelDelta=0.75;
        geomConst.bevelOff=3;
    end

    geomConst.legdBorder=4;
    geomConst.msgWdth=290;
    geomConst.objVdelta=5;
    geomConst.objHdelta=6;
    geomConst.smallVdelta=2;
    geomConst.smallHdelta=3;
    geomConst.verySmallHdelta=1.5;
    geomConst.verySmallVdelta=1;
    geomConst.numDispExt=[60,14];
    geomConst.numEntryExt=[45,14];
    geomConst.intPopupExt=[30,14];
    geomConst.popupYoff=1.5;
    geomConst.numDispVDelta=2;
    geomConst.lineDispWidth=15;
    geomConst.legdEntryVDelta=6;
    geomConst.legdEntryHDelta=4;
    geomConst.legdlineVsep=4;
    geomConst.axes2tabBuff=20;
    geomConst.axesOffset=[35,20];
    geomConst.singleClickThresh=0.5;
    geomConst.staticTextH=12;

    adjust.XDisp=[];
    adjust.YDisp=[];

    current.verifyWidth=160;
    current.state='IDLE';
    current.mode=1;
    current.channel=0;
    current.last_modified_channel=0;
    current.axes=0;
    current.editPoints=[];
    current.tempPoints=[];
    current.bdPoint=[0,0];
    current.bdObj=[];
    current.prevbdObj=[];
    current.selectLine=[];
    current.figPos=[50,50,520,400];
    current.zoomStart=[];
    current.zoomAxesInd=[];
    current.zoomXLine=[];
    current.zoomYLine=[];
    current.lockOutSingleClick=0;
    current.dataSetIdx=1;
    current.simMode=[];
    current.simWasStopped=0;
    current.isVerificationVisible=0;
    buff=geomConst.figBuffer;
    legdWidth=2*(geomConst.legdBorder+geomConst.numDispExt(1))...
    +geomConst.legdEntryHDelta;

    current.axesExtent=[buff,buff,current.figPos(3:4)-3*buff]-...
    [0,0,legdWidth+geomConst.objHdelta,geomConst.scrollHeight+geomConst.axesVdelta];
    current.gridSetting='on';

    figbgcolor=[1,1,1]*0.8;
    dialog=figure('Name','Signal Builder',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'Color',figbgcolor,...
    'Units','points',...
    'HandleVisibility','off',...
    'Interruptible','off',...
    'IntegerHandle','off',...
    'Visible','off',...
    'Tag','SignalBuilderGUI');


    if~(strcmp(get(dialog,'WindowStyle'),'docked'))
        set(dialog,'Position',current.figPos);
    end


    colordef(dialog,'white');


    UD.textExtent=uicontrol(...
    'Units','points',...
    'Parent',dialog,...
    'Visible','off',...
    'Style','text',...
    'String','abcdefghijklABCDEFG'...
    );


    txtExt=get(UD.textExtent,'Extent');
    if(ispc)
        txtDispHeight=1.15*txtExt(4);
        geomConst.staticTextH=txtExt(4);
        geomConst.intPopupExt=[45,txtDispHeight];
    elseif(ismac)
        txtDispHeight=1.5*txtExt(4);
        geomConst.staticTextH=txtExt(4);
        geomConst.intPopupExt=[75,txtDispHeight];
        geomConst.popupYoff=-5;
    else
        txtDispHeight=txtExt(4);
        geomConst.staticTextH=txtExt(4);
        geomConst.intPopupExt=[45,txtDispHeight];
    end

    geomConst.numDispExt=[60,txtDispHeight];
    geomConst.numEntryExt=[45,txtDispHeight];


    UD.adjust=adjust;
    UD.dialog=dialog;
    UD.current=current;
    UD.numChannels=0;
    UD.numAxes=0;
    UD.geomConst=geomConst;
    UD.dataSet=dataSet;

    load('sigbuilder_pointer_images');
    UD.pointerdata=pointerdata;


    currX=geomConst.smallFigBuff;
    msgPos=[[0,0,geomConst.msgWdth]*geomConst.bevelOff+[0,.5,-.5]*geomConst.smallVdelta,geomConst.staticTextH+1];

    UD.hgCtrls.status.msgText=uicontrol('Parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',msgPos,...
    'String',getString(message('sigbldr_ui:create:OKStr')),...
    'HorizontalAlignment','left',...
    'FontWeight','normal',...
    'Style','text',...
    'handlevisibility','callback',...
    'Tag','statusMsgText',...
    'FontSize',9...
    );


    currX=currX+geomConst.msgWdth+geomConst.bevelFigDelta;
    frameWidth=current.figPos(3)-currX-geomConst.bevelFigDelta;
    frameHeight=geomConst.staticTextH+geomConst.smallVdelta;
    selectFramePos=[currX,geomConst.bevelFigDelta,frameWidth,frameHeight];
    selectTxtPos=[selectFramePos(1:3)+[1,0,0]*geomConst.bevelOff+[0,.5,-.5]*geomConst.smallVdelta,geomConst.staticTextH];

    UD.hgCtrls.status.selText=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',selectTxtPos,...
    'String','',...
    'HorizontalAlignment','left',...
    'FontWeight','normal',...
    'Style','text',...
    'handlevisibility','callback');
    UD.hgCtrls.status.selFrame=sigbuilder_beveled_frame(UD.dialog,selectFramePos);


    currY=geomConst.bevelFigDelta+frameHeight+geomConst.bevelBevelDelta;
    currX=geomConst.bevelFigDelta;

    currOrg=[currX,currY]+geomConst.bevelInset;
    [UD.hgCtrls.chDispProp,groupExtent]=create_channel_disp_controls(UD,currOrg);
    controlsHeight=groupExtent(2)+2*geomConst.bevelOff;

    currOrg=currOrg+[groupExtent(1)+geomConst.bevelInset,0];
    [UD.hgCtrls.chLeftPoint,groupExtent]=create_channel_point_disp(UD,currOrg,getString(message('sigbldr_ui:create:LeftPointStr')));

    currOrg=currOrg+[groupExtent(1)+geomConst.bevelInset,0];
    [UD.hgCtrls.chRightPoint,groupExtent]=create_channel_point_disp(UD,currOrg,getString(message('sigbldr_ui:create:RightPointStr')));

    controlsWidth=current.figPos(3)-currX-geomConst.bevelFigDelta;
    controlsOrigin=[currX,currY];

    currOrg=currOrg+[groupExtent(1)+2*geomConst.bevelInset,0];
    lboxWidth=controlsWidth-currOrg(1)-geomConst.bevelFigDelta;
    lboxHeight=controlsHeight-2*geomConst.bevelFigDelta;

    listBoxToolTip=getString(message('sigbldr_ui:create:ToolTipListBox'));

    UD.hgCtrls.chanListbox=uicontrol('Parent',dialog,...
    'Units','points',...
    'Position',[currOrg(1),currY+1,lboxWidth,lboxHeight],...
    'Style','listbox',...
    'BackgroundColor','w',...
    'Callback','sigbuilder(''ChanListbox'',gcbf,[]);',...
    'Enable','on',...
    'Visible','on',...
    'HorizontalAlignment','left',...
    'Tooltipstring',listBoxToolTip,...
    'Tag','PanelListbox',...
    'handlevisibility','callback');


    currY=currY+controlsHeight+geomConst.verySmallVdelta;
    currX=geomConst.bevelInset+geomConst.axesOffset(1);
    width=current.figPos(3)-currX-geomConst.bevelInset;
    scrollPos=[currX,...
    currY,...
    width,...
    geomConst.scrollHeight];

    tlegend.scrollbar=uicontrol('Parent',dialog,...
    'Units','points',...
    'Position',scrollPos,...
    'Style','slider',...
    'BackgroundColor',figbgcolor,...
    'Callback','sigbuilder(''Scrollbar'',gcbf,[]);',...
    'Enable','off',...
    'Visible','off',...
    'HorizontalAlignment','left',...
    'Tag','PanelListboxScollbar',...
    'handlevisibility','callback');


    currY=currY+geomConst.figBuffer+geomConst.objVdelta;
    UD.current.axesExtent=[geomConst.figBuffer,...
    currY,...
    current.figPos(3)-3*geomConst.figBuffer,...
    current.figPos(4)-currY-geomConst.figBuffer];


    tabMenuTable=...
    {getString(message('sigbldr_ui:create:ContextRename')),'sigbuilder(''dataSetRename'',gcbf);','GroupCntxtRename',char([]);...
    getString(message('sigbldr_ui:create:ContextCopy')),'sigbuilder(''dataSetCopy'',gcbf);','GroupCntxtCopy',char([]);...
    getString(message('sigbldr_ui:create:ContextDelete')),'sigbuilder(''dataSetDelete'',gcbf);','GroupCntxtDelete',char([]);...
    getString(message('sigbldr_ui:create:ContextMoveUp')),'sigbuilder(''dataSetLeft'',gcbf);','GroupCntxtLeft',char([]);...
    getString(message('sigbldr_ui:create:ContextMoveDown')),'sigbuilder(''dataSetRight'',gcbf);','GroupCntxtRight',char([])};
    topHandle=uicontextmenu('Parent',dialog,'Tag','groupTabContextMenu');
    tabContext=sigbuilder_makemenu(topHandle,char(tabMenuTable(:,1)),char(tabMenuTable(:,2)),char(tabMenuTable(:,3)),tabMenuTable(:,4));
    tabContext.handle=topHandle;
    set(tabContext.GroupCntxtDelete,'Enable','off');


    estHeight=18;
    currY=current.figPos(4)-geomConst.figBuffer-estHeight;
    currX=geomConst.bevelBevelDelta;
    UD.hgCtrls.tabselect=sigbuilder_tabselector('create',...
    dialog,...
    [currX,currY],...
    current.figPos(3)-currX-geomConst.bevelBevelDelta,...
    {UD.dataSet.name},1,tabContext.handle);


    tabExt=get(UD.hgCtrls.tabselect.axesH,'Position');
    hDelta=tabExt(4)-estHeight;
    adjust_axes([UD.hgCtrls.tabselect.axesH,UD.hgCtrls.tabselect.leftScroll,UD.hgCtrls.tabselect.rightScroll],-hDelta,'y_coord');
    bottomOfTabSelector=currY-hDelta-2;

    tabHeight=bottomOfTabSelector-controlsOrigin(2)-geomConst.bevelSelectorDelta-...
    geomConst.wideBevelBevelDelta+0.75;

    UD.hgCtrls.chFrame=sigbuilder_beveled_frame(UD.dialog,[controlsOrigin,controlsWidth,tabHeight],'WideTrans');
    tabFramePos(1)=controlsOrigin(1);
    tabFramePos(2)=controlsOrigin(2)+tabHeight+geomConst.wideBevelBevelDelta;
    tabFramePos(3)=controlsWidth;
    tabFramePos(4)=current.figPos(4)-tabFramePos(2)-geomConst.bevelFigDelta;

    UD.hgCtrls.tabFrame=sigbuilder_beveled_frame(UD.dialog,tabFramePos,'NarrowTrans');



    UD.current.axesExtent(4)=UD.current.axesExtent(4)-tabExt(4)-geomConst.axes2tabBuff;


    set(UD.hgCtrls.chLeftPoint.xNumDisp,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''leftX'');');

    set(UD.hgCtrls.chLeftPoint.yNumDisp,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''leftY'');');

    set(UD.hgCtrls.chRightPoint.xNumDisp,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''rightX'');');

    set(UD.hgCtrls.chRightPoint.yNumDisp,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''rightY'');');

    set(UD.hgCtrls.chDispProp.labelEdit,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''label'');');

    set(UD.hgCtrls.chDispProp.indexPopup,...
    'Callback','sigbuilder(''chanUi'',gcbf,[],''index'');');




    menuTable=...
    {...
    getString(message('sigbldr_ui:create:FileMenu')),' ','FileMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:Open'))],'sigbuilder(''open'',gcbf);','FileMenuOpen','o';...
    ['>',getString(message('sigbldr_ui:create:Save'))],'sigbuilder(''save'',gcbf);','FileMenuSave','s';...
    ['>',getString(message('sigbldr_ui:create:SaveAs'))],'sigbuilder(''saveas'',gcbf);','FileMenuSaveas',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:ImportFromFile'))],'sigbuilder(''import_file'',gcbf);','FileMenuImportFile',char([]);...
    ['>',getString(message('sigbldr_ui:create:ExportData'))],' ','FileMenuExportData',char([]);...
    ['>>',getString(message('sigbldr_ui:create:ExportToWorkspace'))],'sigbuilder(''export_ws'',gcbf);','FileMenuExportWs',char([]);...
    ['>>',getString(message('sigbldr_ui:create:ExportToMatFile'))],'sigbuilder(''export_mat'',gcbf);','FileMenuExportMat',char([]);...
    ['>',getString(message('sigbldr_ui:create:SimulationOptions'))],'sigbuilder(''simOpts'',gcbf);','FileMenuSlBlock',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Print'))],'sigbuilder(''PrntMenu'',gcbf,[],''dlg'');','FileMenuPrintDlg','p';...
    ['>',getString(message('sigbldr_ui:create:ExportSubMenu'))],' ','FileMenuExport',char([]);...
    ['>>',getString(message('sigbldr_ui:create:ToFile'))],'sigbuilder(''PrntMenu'',gcbf,[],''export'');','FileMenuExportToFile',char([]);...
    ['>>',getString(message('sigbldr_ui:create:ToFigure'))],'sigbuilder(''PrntMenu'',gcbf,[],''fig'');','FileMenuExportToFigure',char([]);...
    ['>>',getString(message('sigbldr_ui:create:ToSignalEditorBlk'))],'sigbuilder(''convert2SE'');','FileMenuExportToSigEditor',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Close'))],'sigbuilder(''close'',gcbf,[]);','FileMenuClose','w';...
    getString(message('sigbldr_ui:create:EditMenu')),' ','EditMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:Undo'))],'sigbuilder(''undo'',gcbf);','EditMenuUndo','z';...
    ['>',getString(message('sigbldr_ui:create:Redo'))],'sigbuilder(''redo'',gcbf);','EditMenuRedo','y';...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Cut'))],'sigbuilder(''cut'',gcbf);','EditMenuCut','x';...
    ['>',getString(message('sigbldr_ui:create:Copy'))],'sigbuilder(''copy'',gcbf);','EditMenuCopy','c';...
    ['>',getString(message('sigbldr_ui:create:Paste'))],'sigbuilder(''paste'',gcbf);','EditMenuPaste','v';...
    ['>',getString(message('sigbldr_ui:create:Delete'))],'sigbuilder(''delete'',gcbf);','EditMenuDelete',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:CopyToClip'))],'sigbuilder(''PrntMenu'',gcbf,[],''copyToClipboard'');','EditMenuCopyToClipboard',char([]);...
    getString(message('sigbldr_ui:create:GroupMenu')),' ','GroupMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:Rename'))],'sigbuilder(''dataSetRename'',gcbf);','GroupMenuRename',char([]);...
    ['>',getString(message('sigbldr_ui:create:Copy'))],'sigbuilder(''dataSetCopy'',gcbf);','GroupMenuCopy',char([]);...
    ['>',getString(message('sigbldr_ui:create:Delete'))],'sigbuilder(''dataSetDelete'',gcbf);','GroupMenuDelete',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Verification'))],'sigbuilder(''verifyView'',gcbf);','GroupMenuVerification',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:MoveUp'))],'sigbuilder(''dataSetLeft'',gcbf);','GroupMenuMoveLeft',char([]);...
    ['>',getString(message('sigbldr_ui:create:MoveDown'))],'sigbuilder(''dataSetRight'',gcbf);','GroupMenuMoveRight',char([]);...
    getString(message('sigbldr_ui:create:SignalMenu')),'','SignalMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:New'))],' ','SignalMenuNew',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Constant'))],'sigbuilder(''addConstantSignal'',gcbf,[],1);','SignalMenuNewConstant',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Step'))],'sigbuilder(''addStepSignal'',gcbf,[],1);','SignalMenuNewStep',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Pulse'))],'sigbuilder(''addPulseSignal'',gcbf,[],1);','SignalMenuNewPulse',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Square'))],'sigbuilder(''addSquareSignal'',gcbf,[],1);','SignalMenuNewSquare',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Triangle'))],'sigbuilder(''addTriangleSignal'',gcbf,[],1);','SignalMenuNewTriangle',char([]);...
    ['>>',getString(message('sigbldr_ui:create:SampledSine'))],'sigbuilder(''addSampledSineSignal'',gcbf,[],1);','SignalMenuNewSin',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:SampledGaussianNoise'))],'sigbuilder(''addGaussianNoiseSignal'',gcbf,[],1);','SignalMenuNewGaussian',char([]);...
    ['>>',getString(message('sigbldr_ui:create:PseudorandomNoise'))],'sigbuilder(''addBinaryNoiseSignal'',gcbf,[],1);','SignalMenuNewPrbn',char([]);...
    ['>>',getString(message('sigbldr_ui:create:PoissonRandomNoise'))],'sigbuilder(''addPoissonNoiseSignal'',gcbf,[],1);','SignalMenuNewPoisson',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Custom'))],'sigbuilder(''addCustomSignal'',gcbf,[],1);','SignalMenuNewImport',char([]);...
    ['>',getString(message('sigbldr_ui:create:Show'))],' ','SignalMenuShow',char([]);...
    '>---',' ','',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Hide'))],'sigbuilder(''chContext'',gcbf,[],''sighide'');','SignalMenuHide',char([]);...
    ['>',getString(message('sigbldr_ui:create:Rename'))],'sigbuilder(''chContext'',gcbf,[],''sigrename'');','SignalMenuRename',char([]);...
    ['>',getString(message('sigbldr_ui:create:ReplaceWith'))],' ','SignalMenuReplace',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Constant'))],'sigbuilder(''addConstantSignal'',gcbf,[],0);','SignalMenuReplaceConstant',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Step'))],'sigbuilder(''addStepSignal'',gcbf,[],0);','SignalMenuReplaceStep',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Pulse'))],'sigbuilder(''addPulseSignal'',gcbf,[],0);','SignalMenuReplacePulse',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Square'))],'sigbuilder(''addSquareSignal'',gcbf,[],0);','SignalMenuReplaceSquare',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Triangle'))],'sigbuilder(''addTriangleSignal'',gcbf,[],0);','SignalMenuReplaceTriangle',char([]);...
    ['>>',getString(message('sigbldr_ui:create:SampledSine'))],'sigbuilder(''addSampledSineSignal'',gcbf,[],0);','SignalMenuReplaceSin',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:SampledGaussianNoise'))],'sigbuilder(''addGaussianNoiseSignal'',gcbf,[],0);','SignalMenuReplaceGaussian',char([]);...
    ['>>',getString(message('sigbldr_ui:create:PseudorandomNoise'))],'sigbuilder(''addBinaryNoiseSignal'',gcbf,[],0);','SignalMenuReplacePrbn',char([]);...
    ['>>',getString(message('sigbldr_ui:create:PoissonRandomNoise'))],'sigbuilder(''addPoissonNoiseSignal'',gcbf,[],0);','SignalMenuReplacePoisson',char([]);...
    '>>---',' ','',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Custom'))],'sigbuilder(''addCustomSignal'',gcbf,[],0);','SignalMenuReplaceImport',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:Color'))],'sigbuilder(''chContext'',gcbf,[],''setColor'');','SignalMenuColor',char([]);...
    ['>',getString(message('sigbldr_ui:create:LineStyleSubMenu'))],' ','SignalMenuLineStyle',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Solid'))],'sigbuilder(''solid'',gcbf);','SignalMenuSolid',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Dashed'))],'sigbuilder(''dashed'',gcbf);','SignalMenuDashed',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Dotted'))],'sigbuilder(''dotted'',gcbf);','SignalMenuDotted',char([]);...
    ['>>',getString(message('sigbldr_ui:create:DashedDotted'))],'sigbuilder(''dash-dott'',gcbf);','SignalMenuDashdott',char([]);...
    ['>',getString(message('sigbldr_ui:create:LineWidth'))],'sigbuilder(''chanLineWidth'',gcbf);','SignalMenuLineWidth',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:ChangeIndex'))],'sigbuilder(''chanIndex'',gcbf);','SignalMenuChanIndex',char([]);...
    ['>',getString(message('sigbldr_ui:create:OutputSubMenu'))],' ','SignalMenuOutput',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Port'))],'sigbuilder(''outputPorts'',gcbf);','SignalMenuOutputPorts',char([]);...
    ['>>',getString(message('sigbldr_ui:create:FlatBus'))],'sigbuilder(''outputFlatBus'',gcbf);','SignalMenuOutputFlatBus',char([]);...
    '>>---',' ','',char([]);...
    getString(message('sigbldr_ui:create:AxesMenu')),' ','AxesMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:ChangeTimeRange'))],'sigbuilder(''setTrange'',gcbf);','AxesMenuSetTRange',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:SetYGrid'))],' ','AxesMenuYSnap',char([]);...
    ['>',getString(message('sigbldr_ui:create:SetTGrid'))],' ','AxesMenuTSnap',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:SetYDisplay'))],'sigbuilder(''setYrange'',gcbf);','AxesMenuYDispLimits',char([]);...
    ['>',getString(message('sigbldr_ui:create:SetTDisplay'))],'sigbuilder(''tdisprange'',gcbf);','AxesMenuTDispLimits',char([]);...
    getString(message('sigbldr_ui:create:HelpMenu')),' ','HelpMenu',char([]);...
    ['>',getString(message('sigbldr_ui:create:SignalBuilder'))],'helpview([docroot ''/mapfiles/simulink.map''], ''signalbuilder'');','HelpMenuHelpIntro',char([]);...
    ['>',getString(message('sigbldr_ui:create:SignalEditor'))],'helpview([docroot ''/mapfiles/simulink.map''], ''signal_editor_block'');','HelpMenuHelpIntro2',char([]);...
    '>---',' ','',char([]);...
    ['>',getString(message('sigbldr_ui:create:SimulinkHelp'))],'helpview([docroot ''/mapfiles/simulink.map''], ''collection'');','HelpMenuSLHelp',char([]);...
    ['>',getString(message('sigbldr_ui:create:SimulinkDemos'))],'demo(''simulink'');','HelpMenuSLDemos',char([]);...
    };

    figmenu=sigbuilder_makemenu(dialog,char(menuTable(:,1)),char(menuTable(:,2)),char(menuTable(:,3)),menuTable(:,4));

    set(figmenu.EditMenuUndo,'Enable','off');
    set(figmenu.EditMenuRedo,'Enable','off');

    if~vnv_rmi_installed
        set(figmenu.GroupMenuVerification,'Enable','off');
    end

    if~ispc
        pcmenus=[figmenu.EditMenuCopyToClipboard];
        set(pcmenus,'Visible','off');
    end


    figmenu.setStepX.children=add_submenu_number_selection(...
    figmenu.AxesMenuTSnap,...
    'sigbuilder(''chContext'',gcbf,[],''setStepX''',...
    [0,.001,.002,.005,.01,.02,.05,.1,.2,.5,1,2,5]);

    figmenu.setStepY.children=add_submenu_number_selection(...
    figmenu.AxesMenuYSnap,...
    'sigbuilder(''chContext'',gcbf,[],''setStepY''',...
    [0,.01,.02,.05,.1,.2,.5,1,2,5,10,20,50,100]);

    figmenu.channelEnabled=[figmenu.EditMenuCut,figmenu.EditMenuCopy,figmenu.EditMenuDelete];
    set([figmenu.EditMenuPaste,figmenu.channelEnabled],'Enable','off');


    if isempty(stvbmp)
        load('sigbuilder_images');
    end
    ut=uitoolbar(dialog);

    toolbar.open=uipushtool('cdata',stvbmp.open_btn,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''open'',gcbf)',...
    'Tag','ToolbarOpen',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipOpen')));

    toolbar.save=uipushtool('cdata',stvbmp.save,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''save'',gcbf)',...
    'Tag','ToolbarSave',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipSave')));

    toolbar.cut=uipushtool('cdata',stvbmp.cut_btn,...
    'Enable','off',...
    'separator','on',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''cut'',gcbf)',...
    'Tag','ToolbarSignalCut',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipCut')));
    toolbar.copy=uipushtool('cdata',stvbmp.copy_btn,...
    'Enable','off',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''copy'',gcbf)',...
    'Tag','ToolbarSignalCopy',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipCopy')));
    toolbar.paste=uipushtool('cdata',stvbmp.paste_btn,...
    'Enable','off',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''paste'',gcbf)',...
    'Tag','ToolbarSignalPaste',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipPaste')));

    toolbar.undo=uipushtool('cdata',stvbmp.undo_btn,...
    'Enable','off',...
    'separator','on',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''undo'',gcbf)',...
    'Tag','ToolbarUndo',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipUndo')));
    toolbar.redo=uipushtool('cdata',stvbmp.redo_btn,...
    'Enable','off',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''redo'',gcbf)',...
    'Tag','ToolbarRedo',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipRedo')));

    toolbar.constantSig=uipushtool('cdata',stvbmp.constantSig,...
    'separator','on',...
    'parent',ut,...
    'Interruptible','off',...
    'clickedcallback','sigbuilder(''addConstantSignal'',gcbf,[],1);',...
    'Tag','ToolbarSignalNewConstant',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipConstantSig')));

    toolbar.stepSig=uipushtool('cdata',stvbmp.stepSig,...
    'parent',ut,...
    'Interruptible','off',...
    'clickedcallback','sigbuilder(''addStepSignal'',gcbf,[],1);',...
    'Tag','ToolbarSignalNewStep',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipStepSig')));

    toolbar.pulseSig=uipushtool('cdata',stvbmp.pulseSig,...
    'parent',ut,...
    'Interruptible','off',...
    'clickedcallback','sigbuilder(''addPulseSignal'',gcbf,[],1);',...
    'Tag','ToolbarSignalNewPulse',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipPulseSig')));

    toolbar.snapGrid=uitoggletool('cdata',stvbmp.snapGrid,...
    'separator','on',...
    'parent',ut,...
    'Interruptible','off',...
    'state','on',...
    'clickedcallback','sigbuilder(''snapGrid'',gcbf)',...
    'Tag','ToolbarGrid',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipSnapGrid')));

    toolbar.zoomX=uitoggletool('cdata',stvbmp.zoomX,...
    'separator','on',...
    'parent',ut,...
    'Interruptible','off',...
    'clickedcallback','sigbuilder(''zoomX'',gcbf)',...
    'Tag','ToolbarZoomT',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipZoomX')));

    toolbar.zoomY=uitoggletool('cdata',stvbmp.zoomY,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''zoomY'',gcbf)',...
    'Tag','ToolbarZoomY',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipZoomY')));

    toolbar.zoomXY=uitoggletool('cdata',stvbmp.zoomXY,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''zoomXY'',gcbf)',...
    'Tag','ToolbarZoomTY',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipZoomXY')));

    toolbar.fullview=uipushtool('cdata',stvbmp.fullview,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''fullview'',gcbf)',...
    'Tag','ToolbarFullview',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipFullView')));


    toolbar.start=uipushtool('cdata',stvbmp.start_btn,...
    'separator','on',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''start'',gcbf)',...
    'Tag','ToolbarStart',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipStart')));


    toolbar.pause=uipushtool('cdata',stvbmp.pause_btn,...
    'Enable','off',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''pause'',gcbf)',...
    'Tag','ToolbarPause',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipPause')));


    toolbar.stop=uipushtool('cdata',stvbmp.stop_btn,...
    'Enable','off',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''stop'',gcbf)',...
    'Tag','ToolbarStop',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipStop')));


    if is_cv_licensed
        playAllTooltip=getString(message('sigbldr_ui:create:ToolTipPlayAll'));
    else
        playAllTooltip=getString(message('sigbldr_ui:create:ToolTipPlayAllNoCoverage'));
    end

    toolbar.playall=uipushtool('cdata',stvbmp.playall_btn,...
    'parent',ut,...
    'clickedcallback','sigbuilder(''playAll'',gcbf)',...
    'Tag','ToolbarRunAll',...
    'tooltipstring',playAllTooltip);

    toolbar.up=uipushtool('cdata',stvbmp.up_btn,...
    'separator','on',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''up'',gcbf)',...
    'Tag','ToolbarSLDiagram',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipUp')));

    toolbar.simulink=uipushtool('cdata',stvbmp.simulink_btn,...
    'parent',ut,...
    'clickedcallback','slLibraryBrowser',...
    'Tag','ToolbarSLLibrary',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipSimulink')));

    toolbar.sigeditor=uipushtool('cdata',stvbmp.se_btn,...
    'separator','on',...
    'parent',ut,...
    'clickedcallback','sigbuilder(''convert2SE'')',...
    'Tag','ToolbarSigEditor',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipSigEditor')));

    toolbar.verifyView=uitoggletool('cdata',stvbmp.vnv_btn,...
    'separator','on',...
    'parent',ut,...
    'Interruptible','off',...
    'clickedcallback','sigbuilder(''verifyView'',gcbf)',...
    'Tag','ToolbarVerification',...
    'tooltipstring',getString(message('sigbldr_ui:create:ToolTipVerifyView')));


    if~vnv_rmi_installed
        set(toolbar.verifyView,'Enable','off');
    end



    if ishandle(gcbh)
        if strcmp(get_param(bdroot(gcbh),'SimulationStatus'),{'running'})
            set(toolbar.start,'Enable','off');
            set(toolbar.pause,'Enable','on');
            set(toolbar.stop,'Enable','on');
            set(toolbar.playall,'Enable','off');
        end

        if strcmp(get_param(bdroot(gcbh),'SimulationStatus'),{'paused'})
            set(toolbar.stop,'Enable','on');
            set(toolbar.playall,'Enable','off');
        end

        if strcmp(get_param(bdroot(gcbh),'SimulationStatus'),{'compiled'})
            set(toolbar.playall,'Enable','off');
        end

    end



    chanMenuTable=...
    {getString(message('sigbldr_ui:create:ContextRenameDots')),'sigbuilder(''chContext'',gcbf,[],''rename'');','SignalCntxtRename',char([]);...
    getString(message('sigbldr_ui:create:ContextHide')),'sigbuilder(''chContext'',gcbf,[],''sighide'');','SignalCntxthide',char([]);...
    '---',' ',' ',char([]);...
    getString(message('sigbldr_ui:create:ContextFormat')),' ','SignalCntxtFormat',char([]);...
    ['>',getString(message('sigbldr_ui:create:ContextColor'))],'sigbuilder(''chContext'',gcbf,[],''setColor'');','SignalCntxtColor',char([]);...
    ['>',getString(message('sigbldr_ui:create:ContextLineStyleSubMenu'))],' ','SignalCntxtLineStyle',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Solid'))],'sigbuilder(''solid'',gcbf);','SignalCntxtSolid',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Dashed'))],'sigbuilder(''dashed'',gcbf);','SignalCntxtDashed',char([]);...
    ['>>',getString(message('sigbldr_ui:create:Dotted'))],'sigbuilder(''dotted'',gcbf);','SignalCntxtDotted',char([]);...
    ['>>',getString(message('sigbldr_ui:create:DashedDotted'))],'sigbuilder(''dash-dott'',gcbf);','SignalCntxtDashdott',char([]);...
    ['>',getString(message('sigbldr_ui:create:ContextLineWidth'))],'sigbuilder(''chanLineWidth'',gcbf);','SignalCntxtLineWidth',char([]);...
    getString(message('sigbldr_ui:create:ContextSetYLimit')),'sigbuilder(''chContext'',gcbf,[],''yminmax'');','SignalCntxtYMinMax',char([]);...
    '---',' ',' ',char([]);...
    getString(message('sigbldr_ui:create:ContextCut')),'sigbuilder(''cut'',gcbf);','SignalCntxtCut',char([]);...
    getString(message('sigbldr_ui:create:ContextCopy')),'sigbuilder(''copy'',gcbf);','SignalCntxtCopy',char([]);...
    getString(message('sigbldr_ui:create:ContextPaste')),'sigbuilder(''paste'',gcbf);','SignalCntxtPaste',char([]);...
    getString(message('sigbldr_ui:create:ContextDelete')),'sigbuilder(''delete'',gcbf);','SignalCntxtDelete',char([]);...
    '---',' ',' ',char([]);...
    getString(message('sigbldr_ui:create:SetYGrid')),' ','SignalCntxtYSnap',char([]);...
    getString(message('sigbldr_ui:create:SetTGrid')),' ','SignalCntxtTSnap',char([]);...
    '---',' ',' ',char([]);...
    getString(message('sigbldr_ui:create:SetYDisplay')),'sigbuilder(''setYrange'',gcbf);','SignalCntxtYDispLimits',char([]);...
    getString(message('sigbldr_ui:create:SetTDisplay')),'sigbuilder(''tdisprange'',gcbf);','SignalCntxtTDispLimits',char([]);...
    '---',' ',' ',char([]);...
    getString(message('sigbldr_ui:create:ContextChangeTimeRange')),'sigbuilder(''setTrange'',gcbf);','SignalCntxtSetTRange ',char([])};

    topHandle=uicontextmenu('Parent',dialog,'Tag','channelContextMenu');
    channelContext=sigbuilder_makemenu(topHandle,char(chanMenuTable(:,1)),char(chanMenuTable(:,2)),char(chanMenuTable(:,3)),chanMenuTable(:,4));
    channelContext.handle=topHandle;
    set(channelContext.SignalCntxtPaste,'Enable','off');

    channelContext.setStepX.children=add_submenu_number_selection(...
    channelContext.SignalCntxtTSnap,...
    'sigbuilder(''chContext'',gcbf,[],''setStepX''',...
    [0,.001,.002,.005,.01,.02,.05,.1,.2,.5,1,2,5]);

    channelContext.setStepY.children=add_submenu_number_selection(...
    channelContext.SignalCntxtYSnap,...
    'sigbuilder(''chContext'',gcbf,[],''setStepY''',...
    [0,.01,.02,.05,.1,.2,.5,1,2,5,10,20,50,100]);

    channelContext.chngAxes.children=[];

    clipboard.type='none';
    clipboard.content=[];

    UD.menus.channelContext=channelContext;
    UD.menus.tabContext=tabContext;
    UD.menus.figmenu=figmenu;
    UD.menus.tabmenus=[];
    UD.toolbar=toolbar;
    UD.tlegend=tlegend;
    UD.common=common_data_struct([0,10]);
    UD.fromSL=0;
    UD.simulink=[];
    UD.clipboard=clipboard;
    UD.undo=struct('command','none','action','','contents','','index',-1,'view',[],'model',[]);

    UD=create_verify_data(UD);


    if keep_hidden
        set(dialog,'UserData',UD);
        enable_mouse_callback(dialog);
    else

        dockIt=false;
        if strcmpi(get(dialog,'WindowStyle'),'docked')
            set(dialog,'WindowStyle','normal');
            dockIt=true;
        end
        set(dialog,'Visible','on');
        if dockIt
            set(dialog,'WindowStyle','docked');
            UD=resize(UD);
        end
        set(dialog,'UserData',UD);
        enable_mouse_callback(dialog);
    end
end

function handles=add_submenu_number_selection(parentMenu,callBackPrefix,values)


    handles(numel(values))=0;
    for k=1:numel(values)
        numberString=num2str(values(k));
        handles(k)=uimenu('Parent',parentMenu,...
        'Label',numberString,...
        'Callback',[callBackPrefix,',',numberString,');']);
    end
end
function[chDispCntrls,extent]=create_channel_disp_controls(UD,origin)


    geomConst=UD.geomConst;
    figbgcolor=get(UD.dialog,'Color');


    set(UD.textExtent,'FontWeight','bold');
    wdth(1)=get_text_width(getString(message('sigbldr_ui:create:IndexColon')),UD.textExtent);
    wdth(2)=get_text_width('Axes:',UD.textExtent);
    set(UD.textExtent,'FontWeight','normal');

    totalWidth=sum(wdth)+geomConst.intPopupExt(1)+3*geomConst.smallHdelta;


    currX=origin(1);
    currY=origin(2);

    indexLabelPos=[currX,currY,wdth(1),geomConst.staticTextH];
    currX=currX+wdth(1)+geomConst.smallHdelta;
    indexPopupPos=[currX,currY+geomConst.popupYoff,geomConst.intPopupExt];
    currX=origin(1);
    currY=currY+geomConst.intPopupExt(2)+geomConst.smallVdelta+geomConst.popupYoff;
    labelLabelPos=[currX,currY,wdth(1),geomConst.staticTextH];
    currX=currX+wdth(1)+geomConst.smallHdelta;
    labelEditPos=[currX,currY,totalWidth-wdth(1)-geomConst.smallHdelta,geomConst.intPopupExt(2)];
    currY=currY+geomConst.intPopupExt(2)+geomConst.smallVdelta;
    legendAxesPos=[currX,currY,totalWidth,geomConst.intPopupExt(2)];

    totalHeight=currY+geomConst.intPopupExt(2)-origin(2);
    extent=[totalWidth,totalHeight];

    chDispCntrls.indexLabel=uicontrol('parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',indexLabelPos,...
    'String',getString(message('sigbldr_ui:create:IndexColon')),...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'Style','text',...
    'Enable','off',...
    'Tooltipstring',getString(message('sigbldr_ui:create:ToolTipIndexLabel')),...
    'Tag','PanelChanIdxLabel',...
    'handlevisibility','callback');

    chDispCntrls.indexPopup=uicontrol('parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',indexPopupPos,...
    'String','1',...
    'Style','popup',...
    'Tooltipstring',getString(message('sigbldr_ui:create:ToolTipIndexLabel')),...
    'Enable','off',...
    'Tag','PanelChanIdx',...
    'handlevisibility','callback');

    chDispCntrls.labelLabel=uicontrol('parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',labelLabelPos,...
    'String',getString(message('sigbldr_ui:create:NameColon')),...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'Style','text',...
    'Enable','off',...
    'Tag','PanelSignalLabelLabel',...
    'handlevisibility','callback');

    chDispCntrls.labelEdit=uicontrol('parent',UD.dialog,...
    'Units','points',...
    'Position',labelEditPos,...
    'Style','edit',...
    'String','',...
    'Tooltipstring',getString(message('sigbldr_ui:create:ToolTipLabelEdit')),...
    'Enable','off',...
    'BackgroundColor',figbgcolor,...
    'HorizontalAlignment','left',...
    'Tag','PanelSignalLabel',...
    'handlevisibility','callback');

    chDispCntrls.legendAxes=axes('parent',UD.dialog,...
    'units','points',...
    'Position',legendAxesPos,...
    'box','off',...
    'color',figbgcolor,...
    'XColor',figbgcolor,...
    'YColor',figbgcolor,...
    'XLim',[0,1],...
    'YLim',[-1,1],...
    'xtick',[],...
    'ytick',[],...
    'Tag','PanelLegendLabel',...
    'handlevisibility','callback');

    chDispCntrls.legendLine=line('parent',chDispCntrls.legendAxes,...
    'XData',[0,1],...
    'YData',[0,0],...
    'Visible','off',...
    'Tag','PanelLegend'...
    );
end
function[chPointDisp,extent]=create_channel_point_disp(UD,origin,titleStr)

    geomConst=UD.geomConst;
    figbgcolor=get(UD.dialog,'Color');


    set(UD.textExtent,'FontWeight','bold');
    wdth(1)=get_text_width('X:',UD.textExtent);
    wdth(2)=get_text_width('Y:',UD.textExtent);
    labelWidth=max(wdth);
    set(UD.textExtent,'FontWeight','normal');


    currX=origin(1);
    currY=origin(2);
    margin1=currX+labelWidth+geomConst.verySmallHdelta;

    ylabelPos=[currX,currY,labelWidth,geomConst.staticTextH];
    yeditPos=[margin1,currY,geomConst.numDispExt];

    totalWidth=margin1+geomConst.numDispExt(1)-origin(1);
    currY=currY+geomConst.numDispExt(2)+geomConst.smallVdelta;

    xlabelPos=[currX,currY,labelWidth,geomConst.staticTextH];
    xeditPos=[margin1,currY,geomConst.numDispExt];

    currY=currY+geomConst.numDispExt(2)+geomConst.smallVdelta;
    titlePos=[origin(1),currY,totalWidth,geomConst.staticTextH];

    totalHeight=currY+geomConst.staticTextH-origin(2);
    extent=[totalWidth,totalHeight];


    chPointDisp.xLabel=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',xlabelPos,...
    'String',getString(message('sigbldr_ui:create:TColon')),...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'Style','text',...
    'Enable','off',...
    'Tag',['PanelXPosLabel(',titleStr,')'],...
    'handlevisibility','callback');

    chPointDisp.xNumDisp=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'Position',xeditPos,...
    'Enable','off',...
    'Style','edit',...
    'BackgroundColor',figbgcolor,...
    'HorizontalAlignment','left',...
    'Tag',['PanelXPos(',titleStr,')'],...
    'handlevisibility','callback');


    chPointDisp.yLabel=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',ylabelPos,...
    'String',getString(message('sigbldr_ui:create:YColon')),...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'Style','text',...
    'Enable','off',...
    'Tag',['PanelYPosLabel(',titleStr,')'],...
    'handlevisibility','callback');

    chPointDisp.yNumDisp=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'Position',yeditPos,...
    'Enable','off',...
    'Style','edit',...
    'BackgroundColor',figbgcolor,...
    'HorizontalAlignment','left',...
    'Tag',['PanelYPos(',titleStr,')'],...
    'handlevisibility','callback');

    if nargin<3||isempty(titleStr)
        titleStr=getString(message('sigbldr_ui:create:TitleStr'));
    end

    chPointDisp.title=uicontrol(...
    'parent',UD.dialog,...
    'Units','points',...
    'BackgroundColor',figbgcolor,...
    'Position',titlePos,...
    'String',titleStr,...
    'HorizontalAlignment','center',...
    'FontWeight','bold',...
    'Enable','off',...
    'Style','text',...
    'Tag',['PanelPosTitleLabel(',titleStr,')'],...
    'handlevisibility','callback');
end
function UD=create_verify_data(UD)

    verify.cachedSL.allAsserts=[];
    verify.cachedSL.linkedAsserts=[];
    verify.hg.component=[];
    UD.verify=verify;
end
function handleStruct=sigbuilder_beveled_frame(fig,pos,style,frameH)


    if nargin<3
        style='NarrowTrans';
    end

    if nargin<4
        frameH=[];
    end

    switch(style)
    case 'NarrowTrans'
        isWide=0;
        isOpaque=0;
    case 'NarrowOpaq'
        isWide=0;
        isOpaque=1;
    case 'WideTrans'
        isWide=1;
        isOpaque=0;
    case 'WideOpaq'
        isWide=1;
        isOpaque=1;
    end

    lineWidth=1;
    lineHeight=1;

    White=[1.0,1.0,1.0];
    Black=[0.0,0.0,0.0];
    Light=[0.725,0.725,0.725];
    LightGrey=[0.9,0.9,0.9];
    Dark=[0.502,0.502,0.502];


    figUnits=get(fig,'Units');
    switch(figUnits)
    case 'points'

        screenUnits=get(0,'Units');
        set(0,'Units','points');
        pointSize=get(0,'ScreenSize');
        set(0,'Units','pixels');
        pixelsSize=get(0,'ScreenSize');
        set(0,'Units',screenUnits);

        pixels2points=pointSize./pixelsSize;
        pixels2points=mean(pixels2points(3:4));

        lineWidth=lineWidth*pixels2points;
        lineHeight=lineHeight*pixels2points;
    case 'pixels'

    otherwise
        error(message('sigbldr_ui:sigbuilder_beveled_frame:unitsPixelsOrPoints'));
    end


    leftOuter=[pos(1),...
    pos(2),...
    lineWidth,...
    pos(4)];

    topOuter=[pos(1),...
    pos(2)+pos(4)-lineHeight,...
    pos(3),...
    lineHeight];

    bottomOuter=[pos(1)+lineWidth,...
    pos(2),...
    pos(3)-lineWidth,...
    lineHeight];

    rightOuter=[pos(1)+pos(3)-lineWidth,...
    pos(2),...
    lineWidth,...
    pos(4)-lineHeight];


    leftInner=[pos(1)+lineWidth,...
    pos(2)+lineHeight,...
    lineWidth,...
    pos(4)-2*lineHeight];

    topInner=[pos(1)+lineWidth,...
    pos(2)+pos(4)-2*lineHeight,...
    pos(3)-2*lineWidth,...
    lineHeight];

    bottomInner=[pos(1)+2*lineWidth,...
    pos(2)+lineHeight,...
    pos(3)-3*lineWidth,...
    lineHeight];

    rightInner=[pos(1)+pos(3)-2*lineWidth,...
    pos(2)+lineHeight,...
    lineWidth,...
    pos(4)-3*lineHeight];

    if isWide
        framePos=pos+[2,0,-4,0]*lineWidth+[0,2,0,-4]*lineHeight;
        outerDark=Black;
        outerLight=Light;
    else
        framePos=pos+[1,0,-2,0]*lineWidth+[0,1,0,-2]*lineHeight;
        outerDark=Dark;
        outerLight=White;
    end

    if isOpaque
        if~isempty(frameH)
            handleStruct.frame=frameH;
            set(frameH,...
            'BackgroundColor',LightGrey,...
            'ForegroundColor',LightGrey,...
            'Units',figUnits,...
            'Position',framePos,...
            'Style','frame');
        else
            handleStruct.frame=uicontrol(...
            'Parent',fig,...
            'BackgroundColor',LightGrey,...
            'ForegroundColor',LightGrey,...
            'Units',figUnits,...
            'Position',framePos,...
            'Style','frame');
        end
    end


    handleStruct.left=uicontrol(...
    'Parent',fig,...
    'BackgroundColor',outerDark,...
    'Units',figUnits,...
    'Position',leftOuter,...
    'Style','text');

    handleStruct.top=uicontrol(...
    'Parent',fig,...
    'BackgroundColor',outerDark,...
    'Units',figUnits,...
    'Position',topOuter,...
    'Style','text');


    handleStruct.right=uicontrol(...
    'Parent',fig,...
    'BackgroundColor',outerLight,...
    'Units',figUnits,...
    'Position',rightOuter,...
    'Style','text');

    handleStruct.bottom=uicontrol(...
    'Parent',fig,...
    'BackgroundColor',outerLight,...
    'Units',figUnits,...
    'Position',bottomOuter,...
    'Style','text');

    if isWide

        handleStruct.leftInner=uicontrol(...
        'Parent',fig,...
        'BackgroundColor',Dark,...
        'Units',figUnits,...
        'Position',leftInner,...
        'Style','text');

        handleStruct.topInner=uicontrol(...
        'Parent',fig,...
        'BackgroundColor',Dark,...
        'Units',figUnits,...
        'Position',topInner,...
        'Style','text');


        handleStruct.rightInner=uicontrol(...
        'Parent',fig,...
        'BackgroundColor',White,...
        'Units',figUnits,...
        'Position',rightInner,...
        'Style','text');

        handleStruct.bottomInner=uicontrol(...
        'Parent',fig,...
        'BackgroundColor',White,...
        'Units',figUnits,...
        'Position',bottomInner,...
        'Style','text');
    end
end
function handleStruct=sigbuilder_makemenu(ctxtMenu,labels,calls,tags,acc)































































    narginchk(5,5);
    num_objects=size(labels,1);
    if(num_objects~=size(calls,1))
        error(message('sigbldr_ui:sigbuilder_makemenu:labelsAndCallsNeedSameNumberOfRows'));
    end
    if(nargin>=4)
        if(num_objects~=size(tags,1))
            error(message('sigbldr_ui:sigbuilder_makemenu:labelsAndTagsNeedSameNumberOfRows'));
        end
    end

    remember_handles=ctxtMenu;
    handles=[];
    current_level=0;

    tagStr=char([]);
    separatorFlag=0;
    for k=1:num_objects
        labelStr=strtrim(labels(k,:));
        if(nargin>=4)
            tagStr=strtrim(tags(k,:));
            if~isempty(acc)&&~isempty(acc{k})
                accStr=acc{k};
            else
                accStr=char([]);
            end
        end


        loc=find(labelStr~='>');
        if(isempty(loc))
            error(message('sigbldr_ui:sigbuilder_makemenu:noEmptyLabels'));
        end
        new_level=loc(1)-1;
        labelStr=labelStr(loc(1):length(labelStr));
        if(new_level>current_level)
            remember_handles=[remember_handles,handles(length(handles))];
        elseif(new_level<current_level)
            N=length(remember_handles);
            remember_handles(N-(current_level-new_level)+1:N)=[];
        end
        current_level=new_level;

        if(labelStr(1)=='-')
            separatorFlag=1;
        else
            if(separatorFlag)
                separator='on';
                separatorFlag=0;
            else
                separator='off';
            end


            if(isempty(labelStr))
                error(message('sigbldr_ui:sigbuilder_makemenu:emptyLabelField'));
            end





            h=uimenu(remember_handles(length(remember_handles)),...
            'Label',labelStr,'Accelerator',accStr,'Callback',calls(k,:),...
            'Separator',separator,...
            'Tag',tagStr);

            if isempty(handles)
                handleStruct=struct(tagStr,h);
            else
                handleStruct.(tagStr)=h;
            end
            handles=[handles;h];
        end
    end
end

