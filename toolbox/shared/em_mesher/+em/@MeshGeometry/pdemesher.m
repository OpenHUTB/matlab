function[varargout]=pdemesher(obj,varargin)




    gd=varargin{1};
    Hmax=varargin{2};
    Hgrad=varargin{3};
    if(length(varargin)>3)
        Hmin=varargin{4};


    end
    if(length(varargin)>4)
        Htarget=varargin{5};
        Hfeed=varargin{6};



    end
    if(length(varargin)>6)
        sf=varargin{7};
        ns=varargin{8};
        [dl,~]=decsg_atx(gd,sf,ns);


    end
    warnState=warning('off','MATLAB:TriScatteredInterp:ConsSplitPtWarnId');
    if isa(obj,'customArrayGeometry')
        option=1;
    else
        option=0;
    end
    if option==1

        FeedsAndVias=obj.MesherStruct.Mesh.PartMesh.Others.p;
        feedtype=getFeedType(obj);




        [p,e,t]=remesher(gd,dl,Hmax,Hgrad,Hmin,Htarget,Hfeed,FeedsAndVias,feedtype);

    else
        [p,e,t]=initmesh_atx(dl,'MesherVersion','R2013a','Hmax',Hmax,...
        'Hgrad',Hgrad);
    end
    warning(warnState);
    varargout{1}=p;
    varargout{2}=t;
    varargout{3}=e;
end

function[p,e,t]=remesher(gd,dl,Hmax,Hgrad,Hmin,Htarget,Hfeed,feedsAndVias,feedtype)

    Bp=em.internal.getBoundaryPoints(gd);
    [rBp,~]=size(Bp);
    B=mat2cell(Bp,ones(1,rBp),3*ones(1,1));
    [R,~]=em.MeshGeometry.findMaxDistanceFromBoundary(B);
    initHmax=max(R/4,Hfeed);
    if~isscalar(Hfeed)
        Hfeed=max(Hfeed);
    end
    if abs((initHmax-Hfeed)/Hfeed)<0.1
        initHmax=2*initHmax;
    end
    initHgrad=1.7;
    [p,e,t]=initmesh_atx(dl,'MesherVersion','R2013a',...
    'Hmax',initHmax,...
    'Hgrad',initHgrad);
    tedges=e(1:2,:);
    p(3,:)=0;

    [p_index,p_feed,metric_map]=em.internal.getFixedVertices2(p,gd,Hfeed,Hfeed);

















    [~,~,pBoundary,~]=em.internal.extractGeometryFromMesh(p,t);

...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...


    hardNodesFromMesh=[];
    hard_edges=[];
    feedvia_nodes=[];
    feedvia_metricmap=[];
    for i=1:numel(pBoundary)
        boundary_nodes=unique(pBoundary{i});
        hardNodesFromMesh=[hardNodesFromMesh,boundary_nodes];%#ok<AGROW>
    end




    eliminateNodeIds=ismember(p_index,hardNodesFromMesh);
    if any(eliminateNodeIds)
        feedvia_nodes=p_index(~eliminateNodeIds);
...
...
...
...
...
...
...
...
...
...
...
        hard_edges=em.internal.getHardEdges(feedvia_nodes,tedges');
        if~isempty(hard_edges)
            for i=1:size(hard_edges,2)
                tempHardEdge=p(:,hard_edges(:,i));
                tempHardEdgeLength(i)=norm(tempHardEdge(:,1)-tempHardEdge(:,2));%#ok<AGROW>
            end
            numFeedViaNodes=numel(feedvia_nodes);
            if isequal(numel(tempHardEdgeLength),numFeedViaNodes)
                feedvia_metricmap=tempHardEdgeLength;
            end
...
...
...
...
...
...
...
...
        end
    end
    hard_nodes=hardNodesFromMesh;




    [p,t,~]=em.MeshGeometry.cm2_remesher(p,t,Hmax,Hgrad,Hmin,...
    hard_nodes,feedvia_nodes,...
    Htarget,feedvia_metricmap,...
    hard_edges);


end
