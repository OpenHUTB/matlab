function writeFPGAPartList(varargin)






    xapi=eda.internal.workflow.ApiTM;
    fcn_dir=pwd;
    fcn_name='getCustomFPGAPartList';

    crtn='\n';


    fcn_str=[...
    'function partList = ',fcn_name,'(varargin)',crtn...
    ,'%% ',upper(fcn_name),'   Get Xilinx FPGA part list',crtn...
    ,'%% ',crtn...
    ,'%% This is an auto-generated function',crtn...
    ,'%%     ISE version : ',xapi.getIseVersion,crtn...
    ,'%%     Created     : ',datestr(now,31),crtn...
    ,crtn...
    ];


    fcn_str=[fcn_str...
    ,'partList = {};',crtn...
    ,crtn...
    ,'family   = getFamily;',crtn...
    ,'family_v = getVendorFamily;',crtn...
    ,'device   = {};',crtn...
    ,crtn...
    ,'if nargin > 0',crtn...
    ,'    idx1   = find(strcmpi(varargin{1},family));',crtn...
    ,'    idx1_v = find(strcmpi(varargin{1},family_v));',crtn...
    ,'    if ~isempty(idx1)',crtn...
    ,'        device = getDevice(idx1);',crtn...
    ,'    end',crtn...
    ,'end',crtn...
    ,crtn...
    ,'if nargin == 0',crtn...
    ,'    partList = family;',crtn...
    ,'end',crtn...
    ,crtn...
    ,'if nargin == 1',crtn...
    ,'    partList = device;',crtn...
    ,'end',crtn...
    ,crtn...
    ,'if nargin == 2',crtn...
    ,'    if strcmpi(varargin{2}, ''vendorName'')',crtn...
    ,'        partList = '''';',crtn...
    ,'        if ~isempty(idx1)',crtn...
    ,'            partList = family_v{idx1};',crtn...
    ,'        end',crtn...
    ,'    end',crtn...
    ,'    if strcmpi(varargin{2}, ''customerName'')',crtn...
    ,'        partList = '''';',crtn...
    ,'        if ~isempty(idx1_v)',crtn...
    ,'            partList = family{idx1_v};',crtn...
    ,'        end',crtn...
    ,'    end',crtn...
    ,'end',crtn...
    ,crtn...
    ,'if nargin == 3',crtn...
    ,'    idx2 = find(strcmpi(varargin{2},device));',crtn...
    ,'    if ~isempty(idx2)',crtn...
    ,'        if strcmpi(varargin{3},''speed'')',crtn...
    ,'            partList = getSpeed(idx1,idx2);',crtn...
    ,'        end',crtn...
    ,'        if strcmpi(varargin{3},''package'')',crtn...
    ,'            partList = getPackage(idx1,idx2);',crtn...
    ,'        end',crtn...
    ,'    end',crtn...
    ,'end',crtn...
    ,crtn...
    ];


    [f_str,v_str,d_str,s_str,p_str]=getDeviceString(xapi,crtn);

    fcn_str=[fcn_str...
    ,'function lst = getFamily',crtn,f_str...
    ,'lst = family;',crtn,crtn...
    ,'function lst = getVendorFamily',crtn,v_str...
    ,'lst = family;',crtn,crtn...
    ,'function lst = getDevice(idx)',crtn,d_str...
    ,'lst = device{idx};',crtn,crtn...
    ,'function lst = getSpeed(idx1,idx2)',crtn,s_str...
    ,'lst = speed{idx1}{idx2};',crtn,crtn...
    ,'function lst = getPackage(idx1,idx2)',crtn,p_str...
    ,'lst = package{idx1}{idx2};',crtn,crtn...
    ];


    fname=fullfile(fcn_dir,[fcn_name,'.m']);
    fid=fopen(fname,'w');
    if fid==-1
        error(message('EDALink:writeFPGAPartList:openfile'));
    end

    fprintf(fid,'%s',sprintf(fcn_str));
    fclose(fid);


    function[f_str,v_str,d_str,s_str,p_str]=getDeviceString(xapi,crtn)

        f_str='family = {';
        v_str='family = {';
        d_str='';
        s_str='';
        p_str='';

        indent=blanks(4);

        family=xapi.getPartInfo;
        for n=1:length(family)

            f_str=[f_str,'...',crtn,indent,'''',xapi.getPartInfo(family{n},'name'),''','];
            v_str=[v_str,'...',crtn,indent,'''',family{n},''','];


            device{n}=xapi.getPartInfo(family{n});
            d_str=[d_str,'device{',num2str(n),'} = {'];

            for m=1:length(device{n})

                d_str=[d_str,'...',crtn,indent,'''',device{n}{m},''','];


                speed{n}{m}=xapi.getPartInfo(family{n},device{n}{m},'speed');
                s_str=[s_str,'speed{',num2str(n),'}{',num2str(m),'} = {'];

                for k=1:length(speed{n}{m})

                    s_str=[s_str,'...',crtn,indent,'''',speed{n}{m}{k},''','];
                end
                s_str(end)='';
                s_str=[s_str,'};',crtn];


                package{n}{m}=xapi.getPartInfo(family{n},device{n}{m},'package');
                p_str=[p_str,'package{',num2str(n),'}{',num2str(m),'} = {'];

                for i=1:length(package{n}{m})

                    p_str=[p_str,'...',crtn,indent,'''',package{n}{m}{i},''','];
                end
                p_str(end)='';
                p_str=[p_str,'};',crtn];

            end
            d_str(end)='';
            d_str=[d_str,'};',crtn];
        end

        f_str=[f_str(1:end-1),'};',crtn];
        v_str=[v_str(1:end-1),'};',crtn];

