


classdef(ConstructOnLoad=true)dsp_core_tx<eda.internal.component.WhiteBox



    properties
clk
rst
set_stb
set_addr
set_data

dac_a
dac_b

sample
run
strobe
debug

    end

    methods
        function this=dsp_core_tx(varargin)
            this.clk=eda.internal.component.ClockPort;
            this.rst=eda.internal.component.ResetPort;
            this.set_stb=eda.internal.component.Inport('FiType','boolean');
            this.set_addr=eda.internal.component.Inport('FiType','ufix8');
            this.set_data=eda.internal.component.Inport('FiType','ufix32');

            this.dac_a=eda.internal.component.Outport('FiType','ufix16');
            this.dac_b=eda.internal.component.Outport('FiType','ufix16');

            this.sample=eda.internal.component.Inport('FiType','ufix32');
            this.run=eda.internal.component.Inport('FiType','boolean');
            this.strobe=eda.internal.component.Outport('FiType','boolean');
            this.debug=eda.internal.component.Outport('FiType','ufix32');
        end

        function implement(this)
            phase_inc=this.signal('Name','phase_inc','FiType','ufix32');
            scale=this.signal('Name','scale','FiType','ufix32');
            enbANDRate=this.signal('Name','enbAndRate','FiType','ufix32');
            dacmux=this.signal('Name','dacmux','FiType','ufix32');
            dac_i=this.signal('Name','dac_i','FiType','ufix18');
            dac_q=this.signal('Name','dac_q','FiType','ufix18');
            scale_i=this.signal('Name','scale_i','FiType','ufix18');
            scale_q=this.signal('Name','scale_q','FiType','ufix18');
            P_I=this.signal('Name','P_I','FiType','ufix36');
            P_Q=this.signal('Name','P_Q','FiType','ufix36');
            bb_i=this.signal('Name','bb_i','FiType','ufix18');
            bb_q=this.signal('Name','bb_q','FiType','ufix18');
            filter_out_i=this.signal('Name','filter_out_i','FiType','ufix18');
            filter_out_q=this.signal('Name','filter_out_q','FiType','ufix18');
            phase=this.signal('Name','phase','FiType','ufix32');
            toCordic_xi=this.signal('Name','toCordic_xi','FiType','ufix18');
            toCordic_yi=this.signal('Name','toCordic_yi','FiType','ufix18');
            da_c=this.signal('Name','da_c','FiType','ufix24');
            db_c=this.signal('Name','db_c','FiType','ufix24');
            rate=this.signal('Name','rate','FiType','ufix8');
            load_rate=this.signal('Name','load_rate','FiType','boolean');

            this.component(...
            'Name','sr_0',...
            'Component',eda.usrp.setting_reg('my_addr','128'),...
            'clk',this.clk,...
            'rst',this.rst,...
            'strobe',this.set_stb,...
            'addr',this.set_addr,...
            'in',this.set_data,...
            'out',phase_inc,...
            'changed','OPEN');

            this.component(...
            'Name','sr_1',...
            'Component',eda.usrp.setting_reg('my_addr','129'),...
            'clk',this.clk,...
            'rst',this.rst,...
            'strobe',this.set_stb,...
            'addr',this.set_addr,...
            'in',this.set_data,...
            'out',scale,...
            'changed','OPEN');

            this.component(...
            'Name','sr_2',...
            'Component',eda.usrp.setting_reg('my_addr','130'),...
            'clk',this.clk,...
            'rst',this.rst,...
            'strobe',this.set_stb,...
            'addr',this.set_addr,...
            'in',this.set_data,...
            'out',enbANDRate,...
            'changed','OPEN');

            this.component(...
            'Name','sr_4',...
            'Component',eda.usrp.setting_reg('my_addr','132'),...
            'clk',this.clk,...
            'rst',this.rst,...
            'strobe',this.set_stb,...
            'addr',this.set_addr,...
            'in',this.set_data,...
            'out',dacmux,...
            'changed','OPEN');

            this.component(...
            'Name','TxUSRPFilter',...
            'Component',eda.internal.component.filter.usrp2.USRPFilterTX,...
            'clk',this.clk,...
            'reset',this.rst,...
            'clk_enable',this.run,...
            'rate',rate,...
            'load_rate',load_rate,...
            'filter_in_re',bb_i,...
            'filter_in_im',bb_q,...
            'filter_out_re',filter_out_i,...
            'filter_out_im',filter_out_q,...
            'ce_out',this.strobe);


            this.component(...
            'Name','cordic',...
            'Component',eda.usrp.cordic_z24('bitwidth','24'),...
            'clock',this.clk,...
            'reset',this.rst,...
            'enable',this.run,...
            'xi',toCordic_xi,...
            'yi',toCordic_yi,...
            'zi',phase,...
            'xo',da_c,...
            'yo',db_c,...
            'zo','OPEN');

            this.component(...
            'Name','MULTIPLY_I',...
            'Component',eda.usrp.MULT18X18S,...
            'C',this.clk,...
            'CE','HIGH',...
            'R',this.rst,...
            'A',dac_i,...
            'B',scale_i,...
            'P',P_I);

            this.component(...
            'Name','MULTIPLY_Q',...
            'Component',eda.usrp.MULT18X18S,...
            'C',this.clk,...
            'CE','HIGH',...
            'R',this.rst,...
            'A',dac_q,...
            'B',scale_q,...
            'P',P_Q);

            this.component(...
            'Name','glueLogic',...
            'Component',eda.internal.usrp2impl.glueLogic_tx,...
            'clk',this.clk,...
            'rst',this.rst,...
            'run',this.run,...
            'sample',this.sample,...
            'dacmux',dacmux,...
            'scale',scale,...
            'toFilter_i',bb_i,...
            'toFilter_q',bb_q,...
            'fromFilter_i',filter_out_i,...
            'fromFilter_q',filter_out_q,...
            'toCordic_xi',toCordic_xi,...
            'toCordic_yi',toCordic_yi,...
            'fromCordic_xo',da_c,...
            'fromCordic_yo',db_c,...
            'mult_i',dac_i,...
            'scale_i',scale_i,...
            'mult_q',dac_q,...
            'scale_q',scale_q,...
            'prod_i',P_I,...
            'prod_q',P_Q,...
            'phase_inc',phase_inc,...
            'phase',phase,...
            'enbANDRate',enbANDRate,...
            'rate',rate,...
            'load_rate',load_rate,...
            'dac_a',this.dac_a,...
            'dac_b',this.dac_b);

        end


    end

end

