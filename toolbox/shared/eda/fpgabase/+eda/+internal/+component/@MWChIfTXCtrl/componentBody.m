function hdlcode=componentBody(this)





    hdlcode=this.hdlcodeinit;




    hdlcode.arch_functions=['  FUNCTION dataWidthInBytes (constant DATAWIDTH : integer) return integer is\n',...
    '   variable tmp1 : integer;\n',...
    '   variable tmp2 : integer;\n',...
    '   BEGIN \n',...
    '    tmp1 := DATAWIDTH mod 8;\n',...
    '    if tmp1 = 0 then\n',...
    '      tmp2 := DATAWIDTH / 8;\n',...
    '    else\n',...
    '      tmp2 := DATAWIDTH / 8 + 1;\n',...
    '    end if;\n',...
    '     return tmp2;\n',...
    '   END;\n\n'];

    hdlcode.arch_typedefs=['  type DTX_STATE_TYPE is (DTX_IDLE, DTX_DATA, DTX_DATA_1BYTE, DTX_CONT, DTX_CONT_1BYTE, DTX_WAIT, DTX_WAIT_1BYTE);\n',...
    '  type EOP_STATE_TYPE is (EOP_IDLE, EOP_RECEIVED, EOP_TX, EOP_COMPLETED);\n'];


    [HEADER_AND_PAYLOAD_DATALENGTH,ptr]=hdlnewsignal('HEADER_AND_PAYLOAD_DATALENGTH','block',-1,0,0,'integer','');%#ok<ASGLU>
    hdlcode.arch_constants=[hdlcode.arch_constants,makehdlconstantdecl(ptr,'dataWidthInBytes(TX_DATAWIDTH) + 5')];

    [PAYLOAD_DATALENGTH,ptr]=hdlnewsignal('PAYLOAD_DATALENGTH','block',-1,0,0,'integer','');%#ok<ASGLU>
    hdlcode.arch_constants=[hdlcode.arch_constants,makehdlconstantdecl(ptr,'dataWidthInBytes(TX_DATAWIDTH)')];

    [MAX_PAYLOAD,ptr]=hdlnewsignal('MAX_PAYLOAD','block',-1,0,0,'integer','');%#ok<ASGLU>
    hdlcode.arch_constants=[hdlcode.arch_constants,makehdlconstantdecl(ptr,'12')];


    [DTX_state,ptr]=hdlnewsignal('DTX_state','block',-1,0,0,'DTX_STATE_TYPE','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [eop_state,ptr]=hdlnewsignal('eop_state','block',-1,0,0,'EOP_STATE_TYPE','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [DTXDataCnt,ptr]=hdlnewsignal('DTXDataCnt','block',-1,0,0,'unsigned(MAX_PAYLOAD - 1 DOWNTO 0)','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];


    [txLength,ptr]=hdlnewsignal('txLength','block',-1,0,0,'unsigned(MAX_PAYLOAD - 1 DOWNTO 0)','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [enbCycleCnt,ptr]=hdlnewsignal('enbCycleCnt','block',-1,0,0,'unsigned(15 DOWNTO 0)','unit16');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];


    [EOP_cnt,ptr]=hdlnewsignal('EOP_cnt','block',-1,0,0,'unsigned(2 DOWNTO 0)','uint32');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [EOP_tmp,ptr]=hdlnewsignal('EOP_tmp','block',-1,0,0,'std_logic','boolean');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [txDone_tmp,ptr]=hdlnewsignal('txDone_tmp','block',-1,0,0,'std_logic','boolean');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [simModeS,ptr]=hdlnewsignal('simModeS','block',-1,0,0,'std_logic','boolean');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [shftOutRegS,ptr]=hdlnewsignal('shftOutregS','block',-1,0,0,'std_logic','boolean');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];


    dclk=this.findSignalName('dclk','componentBody');
    reset=this.findSignalName('reset','componentBody');
    dinVld=this.findSignalName('dinVld','componentBody');
    txRdy=this.findSignalName('txRdy','componentBody');
    rxEOP=this.findSignalName('rxEOP','componentBody');
    simCycle=this.findSignalName('simCycle','componentBody');
    shftOutReg=this.findSignalName('shftOutReg','componentBody');
    txEOP=this.findSignalName('txEOP','componentBody');
    simMode=this.findSignalName('simMode','componentBody');
    NOPcmd=this.findSignalName('NOPcmd','componentBody');
    txDone=this.findSignalName('txDone','componentBody');
    txCompleted=this.findSignalName('txCompleted','componentBody');

    if strcmpi(this.generic.COUPLE_RXTX.instance_Value,'''1''')
        eopStateMachine=[...
        ' eop_proc: process (',dclk,')\n',...
        '   begin \n',...
        '     if ',dclk,'''event and ',dclk,' = ''1'' then \n',...
        '       if ',reset,' = ''1'' then\n',...
        '         ',eop_state,' <= EOP_IDLE;\n',...
        '         ',EOP_cnt,'   <= to_unsigned(0, 3);\n',...
        '       else \n',...
        '         case ',eop_state,' is \n',...
        '           when EOP_IDLE => \n',...
        '             if ',rxEOP,' = ''1'' then \n',...
        '               if ',dinVld,' = ''1'' then\n',...
        '                 ',eop_state,' <= EOP_TX;\n',...
        '               elsif (',txLength,' = to_unsigned(1, MAX_PAYLOAD))  then \n',...
        '                 ',eop_state,' <= EOP_TX;\n',...
        '               else\n',...
        '                 ',eop_state,' <= EOP_RECEIVED;\n',...
        '               end if;\n',...
        '             end if;\n',...
        '           when EOP_RECEIVED => \n',...
        '             if ',NOPcmd,' = ''1'' then\n',...
        '               ',eop_state,' <= EOP_IDLE;\n',...
        '             elsif ',dinVld,' = ''1'' then \n',...
        '               ',eop_state,' <= EOP_TX;\n',...
        '             end if;\n',...
        '           when EOP_TX => \n',...
        '             if ',NOPcmd,' = ''1'' then\n',...
        '               ',eop_state,' <= EOP_IDLE;\n',...
        '             elsif ',EOP_tmp,' = ''1'' then \n',...
        '               if ',EOP_cnt,' = to_unsigned(7, 3) then\n',...
        '                 ',eop_state,' <= EOP_COMPLETED;\n',...
        '                 ',EOP_cnt,'   <= to_unsigned(0, 3);\n',...
        '               else\n',...
        '                 ',EOP_cnt,'   <= ',EOP_cnt,' + to_unsigned(1, 3);\n',...
        '               end if;\n',...
        '             end if;\n',...
        '           when EOP_COMPLETED => \n',...
        '             ',eop_state,' <= EOP_IDLE;\n',...
        '           when others => \n',...
        '             ',eop_state,' <= EOP_IDLE;\n',...
        '         end case;\n',...
        '       end if;\n',...
        '     end if;\n',...
        '   end process eop_proc;\n\n',...
        ' inter_eop: process(',eop_state,', ',DTX_state,', ',DTXDataCnt,', ',enbCycleCnt,', ',simCycle,', ',txLength,')\n',...
' begin\n'...
        ,' ',EOP_tmp,' <= ''0'';\n',...
        ' if (',eop_state,' = EOP_TX) then \n',...
        '    if (',DTXDataCnt,' = ',txLength,' - to_unsigned(1, MAX_PAYLOAD)) AND (',enbCycleCnt,' =  unsigned(',simCycle,')) then \n',...
        '        ',EOP_tmp,' <= ''1'';\n',...
        '     end if;\n',...
        '  end if;\n',...
' end process inter_eop;\n\n'...
        ,' ',txDone,' <= ',txDone_tmp,' AND (NOT ',dinVld,');\n\n',...
        ' proc_status: process(',eop_state,')\n',...
' begin\n'...
        ,'  ',txCompleted,'  <= ''0'';\n',...
        '  if ',eop_state,' = EOP_COMPLETED then\n',...
        '     ',txCompleted,' <= ''1'';\n',...
        '  end if;\n',...
        ' end process proc_status;\n\n',...
        ' ',shftOutReg,' <= ',shftOutRegS,';\n',...
        ' ',txEOP,'      <= ',EOP_tmp,';\n'];
    else
        eopStateMachine=[...
        ' eop_proc: process (',dclk,')\n',...
        '   begin \n',...
        '     if ',dclk,'''event and ',dclk,' = ''1'' then \n',...
        '       if ',reset,' = ''1'' then\n',...
        '         ',eop_state,' <= EOP_IDLE;\n',...
        '         ',EOP_cnt,'   <= to_unsigned(0, 3);\n',...
        '       else \n',...
        '         case ',eop_state,' is \n',...
        '           when EOP_IDLE => \n',...
        '             if ',rxEOP,' = ''1'' then \n',...
        '               if (',txLength,' = to_unsigned(1, MAX_PAYLOAD))  then \n',...
        '                 ',eop_state,' <= EOP_TX;\n',...
        '               else\n',...
        '                 ',eop_state,' <= EOP_RECEIVED;\n',...
        '               end if;\n',...
        '             end if;\n',...
        '           when EOP_RECEIVED => \n',...
        '             if ',NOPcmd,' = ''1'' then\n',...
        '               ',eop_state,' <= EOP_IDLE;\n',...
        '             elsif ',dinVld,' = ''1'' then \n',...
        '               ',eop_state,' <= EOP_TX;\n',...
        '             end if;\n',...
        '           when EOP_TX => \n',...
        '             if ',NOPcmd,' = ''1'' then\n',...
        '               ',eop_state,' <= EOP_IDLE;\n',...
        '             elsif ',EOP_tmp,' = ''1'' then \n',...
        '               if ',EOP_cnt,' = to_unsigned(7, 3) then\n',...
        '                 ',eop_state,' <= EOP_COMPLETED;\n',...
        '                 ',EOP_cnt,'   <= to_unsigned(0, 3);\n',...
        '               else\n',...
        '                 ',EOP_cnt,'   <= ',EOP_cnt,' + to_unsigned(1, 3);\n',...
        '               end if;\n',...
        '             end if;\n',...
        '           when EOP_COMPLETED => \n',...
        '             ',eop_state,' <= EOP_IDLE;\n',...
        '           when others => \n',...
        '             ',eop_state,' <= EOP_IDLE;\n',...
        '         end case;\n',...
        '       end if;\n',...
        '     end if;\n',...
        '   end process eop_proc;\n\n',...
        ' inter_eop: process(',eop_state,', ',DTX_state,', ',DTXDataCnt,', ',enbCycleCnt,', ',simCycle,', ',txLength,')\n',...
' begin\n'...
        ,' ',EOP_tmp,' <= ''0'';\n',...
        ' if (',eop_state,' = EOP_TX) then \n',...
        '   if (',DTXDataCnt,' = ',txLength,' - to_unsigned(1, MAX_PAYLOAD)) AND (',enbCycleCnt,' =  unsigned(',simCycle,')) then \n',...
        '     ',EOP_tmp,' <= ''1'';\n',...
        '   end if;\n',...
        ' end if;\n',...
' end process inter_eop;\n\n'...
        ,' ',txDone,'       <= ''1'';\n\n',...
        ' ',txCompleted,'  <= ''1'';\n',...
        ' ',shftOutReg,' <= ',shftOutRegS,';\n',...
        ' ',txEOP,'      <= ',EOP_tmp,';\n'];
    end;

    hdlcode.arch_body_blocks=[...
    '   DTXCtrl_proc: process (',dclk,')\n',...
    '   begin \n',...
    '     if ',dclk,'''event and ',dclk,' = ''1'' then \n',...
    '       if ',reset,' = ''1'' then\n',...
    '         ',DTX_state,'     <= DTX_IDLE;\n',...
    '         ',enbCycleCnt,'   <= to_unsigned(0, 16);\n',...
    '         ',DTXDataCnt,'    <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '         ',shftOutRegS,'    <= ''0'';\n',...
    '         ',txDone_tmp,'    <= ''1'';\n',...
    '         ',simModeS,'      <= ''0'';\n',...
    '         ',txLength,'      <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '       else \n',...
    '         case ',DTX_state,' is \n',...
    '           when DTX_IDLE => \n',...
    '             ',DTX_state,'    <= DTX_IDLE;\n',...
    '             ',enbCycleCnt,'  <= to_unsigned(0, 16);\n',...
    '             ',DTXDataCnt,'   <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '             ',txDone_tmp,'   <= ''1'';\n',...
    '             ',simModeS,'     <= ',simMode,';\n',...
    '             ',txLength,'     <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             if ',dinVld,' = ''1'' then \n',...
    '               ',DTX_state,'    <= DTX_DATA;\n',...
    '               ',enbCycleCnt,' <= ',enbCycleCnt,' + to_unsigned(1,16);\n',...
    '               if ',txLength,' > to_unsigned(1, MAX_PAYLOAD) AND ',txRdy,' = ''1'' then\n',...
    '                 ',txDone_tmp,'   <= ''0'';\n',...
    '                 ',shftOutRegS,'   <= ''1'';\n',...
    '                 ',DTXDataCnt,'    <= ',DTXDataCnt,' + to_unsigned(1, MAX_PAYLOAD);\n',...
    '               elsif ',txLength,' = to_unsigned(1, MAX_PAYLOAD) AND ',txRdy,' = ''1'' then\n',...
    '                 ',txDone_tmp,'   <= ''1'';\n',...
    '                 ',shftOutRegS,'   <= ''0'';\n',...
    '                 ',DTX_state,'   <= DTX_DATA_1BYTE;\n',...
    '               end if;\n',...
    '             end if;\n',...
    '           when DTX_DATA => \n',...
    '             if ',txRdy,' = ''1'' then\n',...
    '               if ',DTXDataCnt,' < ',txLength,' - to_unsigned(1, MAX_PAYLOAD) then\n',...
    '                 ',shftOutRegS,'   <= ''1'';\n',...
    '                 ',DTXDataCnt,'    <= ',DTXDataCnt,' + to_unsigned(1, MAX_PAYLOAD);\n',...
    '               else \n',...
    '                 ',txDone_tmp,' <= ''0'';\n',...
    '                 ',shftOutRegS,' <= ''0'';\n',...
    '                 if ',enbCycleCnt,' < unsigned(',simCycle,') then\n',...
    '                   ',txDone_tmp,'   <= ''1'';\n',...
    '                   ',DTX_state,'    <= DTX_CONT;\n',...
    '                 elsif ',simModeS,' = ''1'' then\n',...
    '                   if ',eop_state,' = EOP_COMPLETED then\n',...
    '                     ',DTX_state,' <= DTX_IDLE;\n',...
    '                     ',enbCycleCnt,' <= to_unsigned(0, 16);\n',...
    '                     ',txLength,' <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '                   else\n',...
    '                     ',DTX_state,' <= DTX_WAIT;\n',...
    '                   end if;\n',...
    '                 else \n',...
    '                   if ',eop_state,' = EOP_COMPLETED then\n',...
    '                     ',DTX_state,'  <= DTX_IDLE;\n',...
    '                     ',enbCycleCnt,' <= to_unsigned(0, 16);\n',...
    '                     ',txLength,'  <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '                   else\n',...
    '                     ',DTX_state,' <= DTX_WAIT;\n',...
    '                     ',txLength,'    <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '                   end if;\n',...
    '                 end if;\n',...
    '               end if;\n',...
    '             else \n',...
    '               ',shftOutRegS,' <= ''0'';\n',...
    '             end if;\n',...
    '           when DTX_DATA_1BYTE => \n',...
    '             ',txDone_tmp,'     <= ''1'';\n',...
    '             ',shftOutRegS,' <= ''0'';\n',...
    '             if ',enbCycleCnt,' < unsigned(',simCycle,') then\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '               ',DTX_state,'    <= DTX_CONT_1BYTE;\n',...
    '             elsif ',simModeS,' = ''1'' then\n',...
    '                if ',eop_state,' = EOP_COMPLETED then\n',...
    '                  ',DTX_state,' <= DTX_IDLE;\n',...
    '                  ',enbCycleCnt,' <= to_unsigned(0, 16);\n',...
    '                  ',txLength,' <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '                else\n',...
    '                  ',DTX_state,'  <= DTX_WAIT_1BYTE;\n',...
    '                  ',txDone_tmp,' <= ''1'';\n',...
    '                end if;\n',...
    '             else \n',...
    '               if ',eop_state,' = EOP_COMPLETED then\n',...
    '                 ',DTX_state,'   <= DTX_IDLE;\n',...
    '                 ',enbCycleCnt,' <= to_unsigned(0, 16);\n',...
    '                 ',txLength,'  <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '               else\n',...
    '                 ',DTX_state,'  <= DTX_WAIT_1BYTE;\n',...
    '                 ',txDone_tmp,' <= ''0'';\n',...
    '               end if;\n',...
    '             end if;\n',...
    '           when DTX_CONT => \n',...
    '             ',txDone_tmp,'      <= ''0'';\n',...
    '             if ',dinVld,'  = ''1'' then \n',...
    '               ',DTX_state,'    <= DTX_DATA;\n',...
    '               ',txDone_tmp,'   <= ''0'';\n',...
    '               ',DTXDataCnt,'   <= to_unsigned(1, MAX_PAYLOAD);\n',...
    '               ',shftOutRegS,'   <= ''1'';\n',...
    '               ',enbCycleCnt,'  <= ',enbCycleCnt,' + to_unsigned(1, 16);\n',...
    '               ',txLength,'     <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             elsif ',eop_state,' =  EOP_TX then \n',...
    '               ',DTX_state,' <= DTX_CONT;\n',...
    '             elsif ',eop_state,' = EOP_RECEIVED OR ',eop_state,' = EOP_IDLE then\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '             elsif ',eop_state,' = EOP_COMPLETED then\n',...
    '               ',DTX_state,'    <= DTX_IDLE;\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '               ',enbCycleCnt,'  <= to_unsigned(0, 16);\n',...
    '               ',DTXDataCnt,'   <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '               ',txLength,'     <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             end if;\n',...
    '           when DTX_CONT_1BYTE => \n',...
    '             ',DTX_state,'    <= DTX_CONT_1BYTE;\n',...
    '             ',txDone_tmp,'      <= ''1'';\n',...
    '             if ',dinVld,' = ''1'' then \n',...
    '               ',enbCycleCnt,' <= ',enbCycleCnt,' + to_unsigned(1,16);\n',...
    '               ',DTX_state,'   <= DTX_DATA_1BYTE;\n',...
    '             end if;\n',...
    '           when DTX_WAIT => \n',...
    '             if ',dinVld,'  = ''1'' then \n',...
    '               ',DTX_state,'    <= DTX_DATA;\n',...
    '               ',txDone_tmp,'   <= ''0'';\n',...
    '               ',DTXDataCnt,'    <= to_unsigned(1, MAX_PAYLOAD);\n',...
    '               ',enbCycleCnt,' <= to_unsigned(1, 16);\n',...
    '               if ',txLength,' > to_unsigned(1, MAX_PAYLOAD) then\n',...
    '                 ',shftOutRegS,'   <= ''1'';\n',...
    '               elsif ',txLength,' = to_unsigned(1, MAX_PAYLOAD) then\n',...
    '                 ',shftOutRegS,'   <= ''0'';\n',...
    '                 ',DTX_state,'    <= DTX_DATA_1BYTE;\n',...
    '               end if;\n',...
    '             elsif ',eop_state,' =  EOP_TX then \n',...
    '               ',txDone_tmp,'   <= ''0'';\n',...
    '             elsif ',eop_state,' = EOP_RECEIVED OR ',eop_state,' = EOP_IDLE then\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '             elsif ',eop_state,' = EOP_COMPLETED then\n',...
    '               ',DTX_state,'    <= DTX_IDLE;\n',...
    '               ',txDone_tmp,'  <= ''0'';\n',...
    '               ',enbCycleCnt,' <= to_unsigned(0, 16);\n',...
    '               ',DTXDataCnt,'  <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '               ',txLength,'    <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             end if;\n',...
    '           when DTX_WAIT_1BYTE => \n',...
    '             if ',dinVld,'  = ''1'' then \n',...
    '               ',DTX_state,'    <= DTX_DATA_1BYTE;\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '               ',DTXDataCnt,'   <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '               ',enbCycleCnt,' <= to_unsigned(1, 16);\n',...
    '               ',txLength,'    <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             elsif ',eop_state,' =  EOP_TX then \n',...
    '               ',txDone_tmp,'   <= ''0'';\n',...
    '             elsif ',eop_state,' = EOP_RECEIVED OR ',eop_state,' = EOP_IDLE then\n',...
    '               ',txDone_tmp,'      <= ''1'';\n',...
    '             elsif ',eop_state,' = EOP_COMPLETED then\n',...
    '               ',DTX_state,'    <= DTX_IDLE;\n',...
    '               ',txDone_tmp,'   <= ''1'';\n',...
    '               ',enbCycleCnt,'  <= to_unsigned(0, 16);\n',...
    '               ',DTXDataCnt,'   <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '               ',txLength,'     <= to_unsigned(PAYLOAD_DATALENGTH, MAX_PAYLOAD);\n',...
    '             end if;',...
    '           when others => \n',...
    '             ',DTX_state,'    <= DTX_IDLE;\n',...
    '             ',enbCycleCnt,'  <= to_unsigned(0, 16);\n',...
    '             ',DTXDataCnt,'   <= to_unsigned(0, MAX_PAYLOAD);\n',...
    '             ',txDone_tmp,'   <= ''1'';\n',...
    '             ',simModeS,'     <= ''0'';\n',...
    '         end case;\n',...
    '       end if;\n',...
    '     end if;\n',...
    '   end process DTXCtrl_proc;\n\n',...
    eopStateMachine];
end
