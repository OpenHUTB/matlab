function hdlcode=SYNCFIFOStatus(this)



    hdlcode=this.hdlcodeinit;
    hdlcode.entity_library='LIBRARY IEEE;\nUSE IEEE.std_logic_unsigned.ALL;\n';
    addrWidth=this.generic.ADDRWIDTH.Name;
    hdlcode.arch_signals=['  SIGNAL status_cnt                       : std_logic_vector(',addrWidth,' -1  DOWNTO 0);\n'];
    hdlcode.arch_constants=['  CONSTANT FIFO_DEPTH                     : integer := 2**',addrWidth,';\n'];
    hdlcode.arch_body_blocks=[...
    'PROCESS(clk, rst)\n',...
    'BEGIN -- PROCESS\n',...
    '  IF (rst = ''1'') THEN\n',...
    '    status_cnt   <= (others => ''0'');\n',...
    '  ELSIF clk''EVENT AND clK = ''1'' THEN\n',...
    '    IF ((rden = ''1'') AND NOT(wren = ''1'') AND(status_cnt /= 0)) THEN\n',...
    '      status_cnt <= status_cnt - 1; \n',...
    '    ELSIF ((wren = ''1'') AND NOT(rden = ''1'') AND (status_cnt /= FIFO_DEPTH)) THEN\n',...
    '      status_cnt <= status_cnt + 1;\n',...
    '    END IF;\n',...
    '  END IF;\n',...
    'END PROCESS;\n\n',...
    'full  <= ''1'' WHEN (status_cnt >= (FIFO_DEPTH)) ELSE ''0'';\n',...
    'empty <= ''1'' WHEN (status_cnt <= 0)           ELSE ''0'';\n'];
end



