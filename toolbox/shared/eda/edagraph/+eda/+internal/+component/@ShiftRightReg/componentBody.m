function hdlcode=componentBody(this)






    hdlcode=this.hdlcodeinit;


    [sel,ptr]=hdlnewsignal('sel','block',-1,0,0,'std_logic_vector(1 downto 0)','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];

    [tmpReg,ptr]=hdlnewsignal('tempReg','block',-1,0,0,'std_logic_vector(DATA_WIDTH -1  downto 0)','');
    hdlcode.arch_signals=[hdlcode.arch_signals,makehdlsignaldecl(ptr)];


    clk=this.findSignalName('clk','componentBody');
    reset=this.findSignalName('reset','componentBody');
    shift=this.findSignalName('shift','componentBody');
    load=this.findSignalName('load','componentBody');
    input=this.findSignalName('input','componentBody');
    output=this.findSignalName('output','componentBody');


    hdlcode.arch_body_blocks=[...
    ' ',sel,'    <= ',load,' & ',shift,';\n,'...
    ,' ',output,' <= ',tmpReg,';\n\n',...
    ' process (',clk,',',reset,')\n',...
    '  begin\n',...
    '   if ',reset,' = ''1'' then\n',...
    '     ',tmpReg,' <= (DATA_WIDTH - 1 => ''1'', others => ''0'');\n',...
    '   elsif ',clk,'''event and ',clk,' = ''1'' then\n',...
    '     case ',sel,' is\n',...
    '      when "10" =>\n',...
    '        ',tmpReg,' <= ',input,';\n',...
    '      when "01" =>\n',...
    '        ',tmpReg,'(DATA_WIDTH - 1)          <= ''0'';\n',...
    '        ',tmpReg,'(DATA_WIDTH - 2 downto 0) <= ',tmpReg,'(DATA_WIDTH - 1 downto 1);\n',...
    '      when "11" =>\n',...
    '        ',tmpReg,'(DATA_WIDTH - 1)          <= ',input,'(0);\n',...
    '        ',tmpReg,'(DATA_WIDTH - 2 downto 0) <= ',input,'(DATA_WIDTH - 1 downto 1); \n',...
    '      when others =>\n',...
    '        ',tmpReg,' <= ',tmpReg,';\n',...
    '     end case;\n',...
    '   end if;\n',...
    ' end process;\n\n'];
end

