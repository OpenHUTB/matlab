function[]=spsDrivesCurrentControllerDcCbak(block,cbakMode)


    detailLevel=lower(get_param(block,'detailLevel'));
    driveType=get_param(block,'driveType');
    internalBlock=[block,'/current_controller'];
    ports=get_param(block,'Ports');
    nbOutPorts=ports(2);
    haveFourOutputs=(nbOutPorts==4);

    switch driveType
    case 'Chopper based'
        numQuad=get_param(block,'numQuadChop');

        if(strcmp(cbakMode,'init')&&~haveFourOutputs)
            replace_block(block,'FollowLinks','on','Name','out2','Parent',block,'Outport','noprompt');
        end

        if strcmp(detailLevel,'detailed')
            switchingFreq='on';
        else
            switchingFreq='off';
        end

        maskVisibilities={
        'on',...
        'on',...
        'on',...
        'off',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'off',...
        'on',...
        'on',...
        };

        maskEnables={
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        switchingFreq,...
        'on',...
        'on',...
        'on',...
        };


        if~isequal(get_param(internalBlock,'LabelModeActiveChoice'),['Chopper_',detailLevel,'_',numQuad,'q'])
            set_param(internalBlock,'LabelModeActiveChoice',['Chopper_',detailLevel,'_',numQuad,'q']);
        end

    case 'Rectifier based'
        numQuad=get_param(block,'numQuadRect');

        if(strcmp(cbakMode,'init')&&strcmp(numQuad,'2')&&haveFourOutputs)
            replace_block(block,'FollowLinks','on','Name','out2','Parent',block,'Terminator','noprompt');
        end

        if(strcmp(cbakMode,'init')&&strcmp(numQuad,'4')&&~haveFourOutputs)
            replace_block(block,'FollowLinks','on','Name','out2','Parent',block,'Outport','noprompt');
        end

        maskVisibilities={
        'on',...
        'off',...
        'off',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'off',...
        'on',...
        'on',...
        'on',...
        };

        maskEnables={
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        'on',...
        };


        if~isequal(get_param(internalBlock,'LabelModeActiveChoice'),['Rectifier_',numQuad,'q'])
            set_param(internalBlock,'LabelModeActiveChoice',['Rectifier_',numQuad,'q']);
        end
    otherwise
        error(message('physmod:powersys:common:InvalidParameter',block,driveType,'Drive type'));
    end

    set_param(block,'MaskVisibilities',maskVisibilities);
    if sps_Authoring(bdroot(block))
        set_param(block,'MaskEnables',maskEnables);
    end