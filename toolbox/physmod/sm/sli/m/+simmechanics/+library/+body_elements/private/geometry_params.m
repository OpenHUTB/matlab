function maskParams=geometry_params(prefix)

    if nargin<1||isempty(prefix)
        prefix='';
    else
        prefix=genvarname(prefix);
    end

    msgFcn=@pm_message;
    make_params=@simmechanics.library.helper.make_params;

    maskParams(1)=pm.sli.MaskParameter;

    maskParams(end).VarName=[prefix,msgFcn(fullId('geometryShape'))];
    maskParams(end).Value='Brick';


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('rectangle:rectangleWidth')),...
    '1',...
    msgFcn(fullId('rectangle:rectangleWidthUnits')),...
    'm',true)];
    maskParams=[maskParams,make_params(...
    msgFcn(fullId('rectangle:rectangleHeight')),...
    '1',...
    msgFcn(fullId('rectangle:rectangleHeightUnits')),...
    'm',true)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('brick:brickDimensions')),...
    '[1 1 1]',...
    msgFcn(fullId('brick:brickDimensionUnits')),...
    'm',true)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('cylinder:cylinderRadius')),...
    '1',...
    msgFcn(fullId('cylinder:cylinderRadiusUnits')),...
    'm',true)];

    maskParams=[maskParams,make_params(...
    msgFcn(fullId('cylinder:cylinderLength')),...
    '1',...
    msgFcn(fullId('cylinder:cylinderLengthUnits')),...
    'm',true)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('sphere:sphereRadius')),...
    '1',...
    msgFcn(fullId('sphere:sphereRadiusUnits')),...
    'm',true)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('ellipsoid:ellipsoidRadii')),...
    '[1 1 1]',...
    msgFcn(fullId('ellipsoid:ellipsoidRadiiUnits')),...
    'm',true)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('generalPrism:extrusionCrossSection')),...
    '[1 1; -1 1; -1 -1; 1 -1]',...
    msgFcn(fullId('generalPrism:extrusionCrossSectionUnits')),...
    'm',false)];

    maskParams=[maskParams,make_params(...
    msgFcn(fullId('generalPrism:extrusionLength')),...
    '1',...
    msgFcn(fullId('generalPrism:extrusionLengthUnits')),...
    'm',false)];


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('regularPrism:polygonNumSides')),'3',...
    false)];

    maskParams=[maskParams,make_params(...
    msgFcn(fullId('regularPrism:polygonOuterRadius')),...
    '1',...
    msgFcn(fullId('regularPrism:polygonOuterRadiusUnits')),...
    'm',true)];


    maskParams(end+1)=pm.sli.MaskParameter;
    maskParams(end).VarName=[prefix,msgFcn(fullId('fileGeometry:extGeomFileType'))];
    maskParams(end).Value=msgFcn(defVal('extGeomFile:fileType'));

    maskParams(end+1)=pm.sli.MaskParameter;

    maskParams(end).VarName=[prefix,msgFcn(fullId('fileGeometry:extGeomFileName'))];
    maskParams(end).Value='';

    maskParams(end+1)=pm.sli.MaskParameter;

    maskParams(end).VarName=[prefix,msgFcn(fullId('fileGeometry:extGeomFileUnits'))];
    maskParams(end).Value='m';


    maskParams=[maskParams,make_params(...
    msgFcn(fullId('generalSolidOfRevolution:revolutionCrossSection')),...
    '[1 1; 1 -1; 2 -1; 2 1]',...
    msgFcn(fullId('generalSolidOfRevolution:revolutionCrossSectionUnits')),...
    'm',false)];

    maskParams(end+1)=pm.sli.MaskParameter;

    maskParams(end).VarName=[prefix...
    ,msgFcn(fullId('solidOfRevolution:revolutionExtent'))];
    maskParams(end).Value='Full';

    maskParams=[maskParams,make_params(...
    msgFcn(fullId('solidOfRevolution:revolutionAngle')),...
    '180',...
    msgFcn(fullId('solidOfRevolution:revolutionAngleUnits')),...
    'deg',false)];

end

function fullMsgId=fullId(msgId)
    fullMsgId=['mech2:messages:parameters:geometry:',msgId,':ParamName'];
end

function val=defVal(msgId)
    val=['sm:sli:defaults:geometry:',msgId];
end
