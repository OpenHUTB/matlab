classdef SinglePhaseAsynchronousM_class<ConvClass&handle



    properties

        OldParam=struct(...
        'NominalParameters',[],...
        'MainWindingStator',[],...
        'MainWindingRotor',[],...
        'MutualInductance',[],...
        'AuxiliaryWinding',[],...
        'Mechanical',[],...
        'CapacitorStart',[],...
        'CapacitorRun',[],...
        'DisconnectionSpeed',[],...
        'InitialSpeed',[],...
        'TsPowergui',[],...
        'TsBlock',[]...
        )


        OldDropdown=struct(...
        'MechanicalLoad',[],...
        'UNITS',[],...
        'MachineType',[],...
        'DataType',[],...
        'MeasurementBus',[]...
        )


        NewDirectParam=struct(...
        'SRated',[],...
        'VRated',[],...
        'FRated',[],...
        'nPolePairs',[],...
        'a',[],...
        'wd',[]...
        )


        NewDerivedParam=struct(...
        'Ras',[],...
        'Llas',[],...
        'Rar',[],...
        'Llar',[],...
        'Lms',[],...
        'Rbs',[],...
        'Llbs',[],...
        'pu_Ras',[],...
        'pu_Llas',[],...
        'pu_Rar',[],...
        'pu_Llar',[],...
        'pu_Lms',[],...
        'pu_Rbs',[],...
        'pu_Llbs',[],...
        'Rs',[],...
        'Cs',[],...
        'Rr',[],...
        'Cr',[],...
        'pu_Rs',[],...
        'pu_Cs',[],...
        'pu_Rr',[],...
        'pu_Cr',[],...
        'J',[],...
        'D',[],...
        'wr0',[],...
        'Te_out_conv',[],...
        'wr_out_conv',[],...
        'ids_out_conv',[],...
        'iqs_out_conv',[],...
        'Te_in_conv',[]...
        )


        NewDropdown=struct(...
        'param_unit',[]...
        )


        BlockOption={...
        {'MechanicalLoad','Torque Tm';'MachineType','Split Phase'},'TmSP';...
        {'MechanicalLoad','Torque Tm';'MachineType','Capacitor-Start'},'TmCS';...
        {'MechanicalLoad','Torque Tm';'MachineType','Capacitor-Start-Run'},'TmCSR';...
        {'MechanicalLoad','Torque Tm';'MachineType','Main & auxiliary windings'},'TmMAW';...
        {'MechanicalLoad','Mechanical rotational port';'MachineType','Split Phase'},'MechanicalSP';...
        {'MechanicalLoad','Mechanical rotational port';'MachineType','Capacitor-Start'},'MechanicalCS';...
        {'MechanicalLoad','Mechanical rotational port';'MachineType','Capacitor-Start-Run'},'MechanicalCSR';...
        {'MechanicalLoad','Mechanical rotational port';'MachineType','Main & auxiliary windings'},'MechanicalMAW';...
        }

        OldBlockName=[];
        NewBlockPath=[];
        ConversionType=[];
    end

    properties(Constant)
        OldPath='powerlib/Machines/Single Phase Asynchronous Machine'
        NewPath='elec_conv_SinglePhaseAsynchronousM/SinglePhaseAsynchronousM'
    end

    methods
        function obj=objParamMappingDirect(obj)
            obj.NewDirectParam.SRated=ConvClass.mapDirect(obj.OldParam.NominalParameters,1);
            obj.NewDirectParam.VRated=ConvClass.mapDirect(obj.OldParam.NominalParameters,2);
            obj.NewDirectParam.FRated=ConvClass.mapDirect(obj.OldParam.NominalParameters,3);
            obj.NewDirectParam.nPolePairs=ConvClass.mapDirect(obj.OldParam.Mechanical,3);
            obj.NewDirectParam.a=ConvClass.mapDirect(obj.OldParam.Mechanical,4);
            obj.NewDirectParam.wd=obj.OldParam.DisconnectionSpeed;
        end


        function obj=SinglePhaseAsynchronousM_class(NominalParameters,MainWindingStator,MainWindingRotor,...
            MutualInductance,AuxiliaryWinding,Mechanical,...
            CapacitorStart,CapacitorRun,InitialSpeed,UNITS)
            if nargin>0
                obj.OldParam.NominalParameters=NominalParameters;
                obj.OldParam.MainWindingStator=MainWindingStator;
                obj.OldParam.MainWindingRotor=MainWindingRotor;
                obj.OldParam.MutualInductance=MutualInductance;
                obj.OldParam.AuxiliaryWinding=AuxiliaryWinding;
                obj.OldParam.Mechanical=Mechanical;
                obj.OldParam.CapacitorStart=CapacitorStart;
                obj.OldParam.CapacitorRun=CapacitorRun;
                obj.OldParam.InitialSpeed=InitialSpeed;
                obj.OldDropdown.UNITS=UNITS;
            end
        end

        function obj=objParamMappingDerived(obj)

            SRated=obj.OldParam.NominalParameters(1);
            VRated=obj.OldParam.NominalParameters(2);
            FRated=obj.OldParam.NominalParameters(3);
            nPolePairs=obj.OldParam.Mechanical(3);
            b=ee.internal.perunit.SinglePhaseMachineBase(SRated,VRated,FRated,nPolePairs);

            obj.NewDerivedParam.wr0=(obj.OldParam.InitialSpeed/100)*b.wMechanical;

            switch obj.OldDropdown.UNITS
            case 'SI'
                obj.NewDerivedParam.Ras=obj.OldParam.MainWindingStator(1);
                obj.NewDerivedParam.Llas=obj.OldParam.MainWindingStator(2);
                obj.NewDerivedParam.Rar=obj.OldParam.MainWindingRotor(1);
                obj.NewDerivedParam.Llar=obj.OldParam.MainWindingRotor(2);
                obj.NewDerivedParam.Lms=obj.OldParam.MutualInductance;
                obj.NewDerivedParam.Rbs=obj.OldParam.AuxiliaryWinding(1);
                obj.NewDerivedParam.Llbs=obj.OldParam.AuxiliaryWinding(2);
                obj.NewDerivedParam.Rs=obj.OldParam.CapacitorStart(1);
                obj.NewDerivedParam.Cs=obj.OldParam.CapacitorStart(2);
                obj.NewDerivedParam.Rr=obj.OldParam.CapacitorRun(1);
                obj.NewDerivedParam.Cr=obj.OldParam.CapacitorRun(2);

                obj.NewDerivedParam.pu_Ras=obj.OldParam.MainWindingStator(1)/b.R;
                obj.NewDerivedParam.pu_Llas=obj.OldParam.MainWindingStator(2)/b.L;
                obj.NewDerivedParam.pu_Rar=obj.OldParam.MainWindingRotor(1)/b.R;
                obj.NewDerivedParam.pu_Llar=obj.OldParam.MainWindingRotor(2)/b.L;
                obj.NewDerivedParam.pu_Lms=obj.OldParam.MutualInductance/b.L;
                obj.NewDerivedParam.pu_Rbs=obj.OldParam.AuxiliaryWinding(1)/b.R;
                obj.NewDerivedParam.pu_Llbs=obj.OldParam.AuxiliaryWinding(2)/b.L;
                obj.NewDerivedParam.pu_Rs=obj.OldParam.CapacitorStart(1)/b.R;
                obj.NewDerivedParam.pu_Cs=obj.OldParam.CapacitorStart(2)/b.C;
                obj.NewDerivedParam.pu_Rr=obj.OldParam.CapacitorRun(1)/b.R;
                obj.NewDerivedParam.pu_Cr=obj.OldParam.CapacitorRun(2)/b.C;

                obj.NewDerivedParam.J=obj.OldParam.Mechanical(1);
                obj.NewDerivedParam.D=obj.OldParam.Mechanical(2);

                obj.NewDerivedParam.Te_out_conv=b.torque;
                obj.NewDerivedParam.wr_out_conv=b.wMechanical;
                obj.NewDerivedParam.ids_out_conv=-b.i;
                obj.NewDerivedParam.iqs_out_conv=b.i;
                obj.NewDerivedParam.Te_in_conv=1;

            case 'pu'
                obj.NewDerivedParam.pu_Ras=obj.OldParam.MainWindingStator(1);
                obj.NewDerivedParam.pu_Llas=obj.OldParam.MainWindingStator(2);
                obj.NewDerivedParam.pu_Rar=obj.OldParam.MainWindingRotor(1);
                obj.NewDerivedParam.pu_Llar=obj.OldParam.MainWindingRotor(2);
                obj.NewDerivedParam.pu_Lms=obj.OldParam.MutualInductance;
                obj.NewDerivedParam.pu_Rbs=obj.OldParam.AuxiliaryWinding(1);
                obj.NewDerivedParam.pu_Llbs=obj.OldParam.AuxiliaryWinding(2);
                obj.NewDerivedParam.pu_Rs=obj.OldParam.CapacitorStart(1);
                obj.NewDerivedParam.pu_Cs=obj.OldParam.CapacitorStart(2);
                obj.NewDerivedParam.pu_Rr=obj.OldParam.CapacitorRun(1);
                obj.NewDerivedParam.pu_Cr=obj.OldParam.CapacitorRun(2);

                obj.NewDerivedParam.Ras=obj.OldParam.MainWindingStator(1)*b.R;
                obj.NewDerivedParam.Llas=obj.OldParam.MainWindingStator(2)*b.L;
                obj.NewDerivedParam.Rar=obj.OldParam.MainWindingRotor(1)*b.R;
                obj.NewDerivedParam.Llar=obj.OldParam.MainWindingRotor(2)*b.L;
                obj.NewDerivedParam.Lms=obj.OldParam.MutualInductance*b.L;
                obj.NewDerivedParam.Rbs=obj.OldParam.AuxiliaryWinding(1)*b.R;
                obj.NewDerivedParam.Llbs=obj.OldParam.AuxiliaryWinding(2)*b.L;
                obj.NewDerivedParam.Rs=obj.OldParam.CapacitorStart(1)*b.R;
                obj.NewDerivedParam.Cs=obj.OldParam.CapacitorStart(2)*b.C;
                obj.NewDerivedParam.Rr=obj.OldParam.CapacitorRun(1)*b.R;
                obj.NewDerivedParam.Cr=obj.OldParam.CapacitorRun(2)*b.C;

                obj.NewDerivedParam.J=2*obj.OldParam.Mechanical(1)*b.torque/b.wMechanical;
                obj.NewDerivedParam.D=obj.OldParam.Mechanical(2)*b.torque/b.wMechanical;

                obj.NewDerivedParam.Te_out_conv=1;
                obj.NewDerivedParam.wr_out_conv=1;
                obj.NewDerivedParam.ids_out_conv=-1;
                obj.NewDerivedParam.iqs_out_conv=1;
                obj.NewDerivedParam.Te_in_conv=b.torque;
            end


        end

        function obj=objDropdownMapping(obj)
            switch obj.OldDropdown.UNITS
            case 'SI'
                obj.NewDropdown.param_unit='2';
            case 'pu'
                obj.NewDropdown.param_unit='1';
            end
        end
    end

end
