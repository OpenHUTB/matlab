classdef DCMachine_class<ConvClass&handle



    properties

        OldParam=struct(...
        'RLa',[],...
        'RLf',[],...
        'Laf',[],...
        'Ke',[],...
        'Kt',[],...
        'J',[],...
        'Bm',[],...
        'Tf',[],...
        'w0',[],...
        'Ifinit',[],...
        'TsPowergui',[],...
        'TsBlock',[]...
        )


        OldDropdown=struct(...
        'PresetModel',[],...
        'MechanicalLoad',[],...
        'FieldType',[],...
        'MachineConstant',[],...
        'ShowDetailedParameters',[],...
        'MeasurementBus',[]...
        )


        NewDirectParam=struct(...
        'Ra',[],...
        'La',[],...
        'Rf',[],...
        'Lf',[],...
        'Laf',[],...
        'Kv',[],...
        'Ki',[],...
        'J',[],...
        'lam',[],...
        'Tf',[],...
        'wr0',[]...
        )


        NewDerivedParam=struct(...
        )

        NewDropdown=struct(...
        'emf_or_torque',[]...
        )


        BlockOption={...
        {'MechanicalLoad','Torque TL';'FieldType','Wound';'MeasurementBus','off'},'TLWound';...
        {'MechanicalLoad','Torque TL';'FieldType','Permanent magnet';'MeasurementBus','off'},'TLPM';...
        {'MechanicalLoad','Speed w';'FieldType','Wound';'MeasurementBus','off'},'wWound';...
        {'MechanicalLoad','Speed w';'FieldType','Permanent magnet';'MeasurementBus','off'},'wPM';...
        {'MechanicalLoad','Mechanical rotational port';'FieldType','Wound';'MeasurementBus','off'},'RotationalPortWound';...
        {'MechanicalLoad','Mechanical rotational port';'FieldType','Permanent magnet';'MeasurementBus','off'},'RotationalPortPM';...
        {'MechanicalLoad','Torque TL';'FieldType','Wound';'MeasurementBus','on'},'TLWoundSigName';...
        {'MechanicalLoad','Torque TL';'FieldType','Permanent magnet';'MeasurementBus','on'},'TLPMSigName';...
        {'MechanicalLoad','Speed w';'FieldType','Wound';'MeasurementBus','on'},'wWoundSigName';...
        {'MechanicalLoad','Speed w';'FieldType','Permanent magnet';'MeasurementBus','on'},'wPMSigName';...
        {'MechanicalLoad','Mechanical rotational port';'FieldType','Wound';'MeasurementBus','on'},'RotationalPortWoundSigName';...
        {'MechanicalLoad','Mechanical rotational port';'FieldType','Permanent magnet';'MeasurementBus','on'},'RotationalPortPMSigName';...
        }

        OldBlockName=[];
        NewBlockPath=[];
        ConversionType=[];
    end

    properties(Constant)
        OldPath='powerlib/Machines/DC Machine'
        NewPath='elec_conv_DCMachine/DCMachine'
    end

    methods
        function obj=objParamMappingDirect(obj)
            obj.NewDirectParam.Ra=ConvClass.mapDirect(obj.OldParam.RLa,1);
            obj.NewDirectParam.La=ConvClass.mapDirect(obj.OldParam.RLa,2);
            obj.NewDirectParam.Rf=ConvClass.mapDirect(obj.OldParam.RLf,1);
            obj.NewDirectParam.Lf=ConvClass.mapDirect(obj.OldParam.RLf,2);
            obj.NewDirectParam.Laf=obj.OldParam.Laf;
            obj.NewDirectParam.Kv=obj.OldParam.Ke;
            obj.NewDirectParam.Ki=obj.OldParam.Kt;
            obj.NewDirectParam.J=obj.OldParam.J;
            obj.NewDirectParam.lam=obj.OldParam.Bm;
            obj.NewDirectParam.Tf=obj.OldParam.Tf;
            obj.NewDirectParam.wr0=obj.OldParam.w0;
        end


        function obj=DCMachine_class()
            if nargin>0
            end
        end

        function obj=objParamMappingDerived(obj)


        end

        function obj=objDropdownMapping(obj)
            logObj=ElecAssistantLog.getInstance();

            switch obj.OldDropdown.FieldType
            case 'Wound'
                logObj.addMessage(obj,'CustomMessage','The armature and field current might start from undesired values.');
            case 'Permanent magnet'
                logObj.addMessage(obj,'CustomMessage','The armature current might start from an undesired value.');
            otherwise

            end


            if(~strcmp(obj.OldDropdown.PresetModel,'No'))&&strcmp(obj.OldDropdown.FieldType,'Wound')
                logObj.addMessage(obj,'OptionNotSupported','Preset Model','Preset Models');
            end


            if strcmp(obj.OldDropdown.FieldType,'Permanent magnet')
                switch obj.OldDropdown.MachineConstant
                case 'Torque constant (N.m/A)'
                    obj.NewDropdown.emf_or_torque='2';
                case 'Back-emf constant (V/rpm) '
                    obj.NewDropdown.emf_or_torque='1';
                otherwise

                end
            end
        end
    end

end
