function[netlistFile]=createSPICEToolNetlist(netlistFileIndex,SPICETool,dirName,SPICEFile,subcircuitName,subcircuitDetails,test,structArrayIndex,relTol,absTol,vnTol)

































    netlistExtension=".net";
    if(SPICETool=="LTspice")
        netlistFile="testNetlist"+subcircuitName+netlistExtension;
    end
    if(SPICETool=="SIMetrix")
        netlistFile="testNetlist"+subcircuitName+"_"+netlistFileIndex+netlistExtension;
    end
    if isempty(which(SPICEFile))
        includeFile=SPICEFile;
    else
        includeFile=which(SPICEFile);
    end
    optionsList=["DampInductors=0"...
    ,"Thev_Induc=1"...
    ,"Gfarad=0"...
    ,"Gfloat=0"...
    ,"reltol=",relTol...
    ,"abstol=",absTol...
    ,"vntol=",vnTol...
    ,"Gmin=0"...
    ,"cshunt=0"...
    ,"cshuntintern=0"...
    ,"gshunt=0"...
    ,"topologycheck=0"];


    fid=fopen(strcat(dirName+"/"+netlistFile),"w+");
    finishup=onCleanup(@()myCleanupFun(fid));


    fprintf(fid,"* Autogenerated netlist at %s\n",datetime);
    fprintf(fid,".opt");
    fprintf(fid," %s",optionsList);
    fprintf(fid,"\n");
    fprintf(fid,".inc %s\n",includeFile);
    fprintf(fid,"\n.tran %g %g\n\n",test(structArrayIndex).simTime/test(structArrayIndex).minPts,test(structArrayIndex).simTime);


    if(SPICETool=="LTspice")
        if~isempty(test(structArrayIndex).stepValues)
            fprintf(fid,".param stepValue=%g\n",test(structArrayIndex).stepValues(1));
            if length(test(structArrayIndex).stepValues)>1
                fprintf(fid,".step param stepValue list");
                fprintf(fid," %g",test(structArrayIndex).stepValues);
                fprintf(fid,"\n");
            end
            fprintf(fid,"\n");
        end
    end
    if(SPICETool=="SIMetrix")
        if~isempty(test(structArrayIndex).stepValues)
            fprintf(fid,".param stepValue=%g\n",test(structArrayIndex).stepValues(netlistFileIndex));
            fprintf(fid,"\n");
        end
    end
    fprintf(fid,"X1");
    fprintf(fid," dut%d",1:length(subcircuitDetails.nodes));
    fprintf(fid," %s\n",subcircuitName);
    for nodeIndex=1:length(test(structArrayIndex).loadNodes)
        fprintf(fid,"R%d load%d dut%d %g\n",test(structArrayIndex).loadNodes(nodeIndex),test(structArrayIndex).loadNodes(nodeIndex),test(structArrayIndex).loadNodes(nodeIndex),...
        test(structArrayIndex).loadValues(nodeIndex));
    end
    for nodeIndex=1:length(test(structArrayIndex).dcNodes)
        if strncmpi(test(structArrayIndex).dcTypes(nodeIndex),"voltage",1)
            device="V";
        elseif strncmpi(test(structArrayIndex).dcTypes(nodeIndex),"current",1)
            device="I";
        end
        fprintf(fid,"%s%d ",device,test(structArrayIndex).dcNodes(nodeIndex));
        if ismember(test(structArrayIndex).dcNodes(nodeIndex),test(structArrayIndex).loadNodes)
            fprintf(fid,"load");
        else
            fprintf(fid,"dut");
        end
        fprintf(fid,"%d 0 %g\n",test(structArrayIndex).dcNodes(nodeIndex),test(structArrayIndex).dcValues(nodeIndex));
    end
    for nodeIndex=1:length(test(structArrayIndex).stepNodes)
        if strncmpi(test(structArrayIndex).stepType(nodeIndex),"voltage",1)
            device="V";
        elseif strncmpi(test(structArrayIndex).stepType(nodeIndex),"current",1)
            device="I";
        end
        fprintf(fid,"%s%d ",device,test(structArrayIndex).stepNodes(nodeIndex));
        if ismember(test(structArrayIndex).stepNodes(nodeIndex),test(structArrayIndex).loadNodes)
            fprintf(fid,"load");
        else
            fprintf(fid,"dut");
        end
        fprintf(fid,"%d 0 {stepValue}\n",test(structArrayIndex).stepNodes(nodeIndex));
    end
    if strncmpi(test(structArrayIndex).sweepType(1),"voltage",1)
        for nodeIndex=1:length(test(structArrayIndex).sweepNodes)
            if strncmpi(test(structArrayIndex).sweepType(nodeIndex),"voltage",1)
                device="V";
            elseif strncmpi(test(structArrayIndex).sweepType(nodeIndex),"current",1)
                device="I";
            end
            fprintf(fid,"%s%d ",device,test(structArrayIndex).sweepNodes(nodeIndex));
            if ismember(test(structArrayIndex).sweepNodes(nodeIndex),test(structArrayIndex).loadNodes)
                fprintf(fid,"load");
            else
                fprintf(fid,"dut");
            end
            fprintf(fid,"%d 0 PWL(0 %g %g %g)\n",test(structArrayIndex).sweepNodes(nodeIndex),test(structArrayIndex).sweepValues(1),test(structArrayIndex).simTime,...
            test(structArrayIndex).sweepValues(end));
        end
    end
    if strncmpi(test(structArrayIndex).sweepType(1),"current",1)
        for nodeIndex=1:length(test(structArrayIndex).sweepNodes)
            device="I";
            device1="R1";
        end
        if(test(structArrayIndex).name=="qosst5")||(test(structArrayIndex).name=="qosst3")||(test(structArrayIndex).name=="qosst6")||(test(structArrayIndex).name=="qosst4")
            fprintf(fid,"%s%d load",device,test(structArrayIndex).sweepNodes(nodeIndex));
            fprintf(fid,"%d 0 PWL(0 0 %g %g %g %g)\n",test(structArrayIndex).sweepNodes(nodeIndex),test(structArrayIndex).sweepValues(1),test(structArrayIndex).sweepValues(end),test(structArrayIndex).simTime,...
            test(structArrayIndex).sweepValues(end));
            fprintf(fid,"%s%d load",device1,test(structArrayIndex).sweepNodes(nodeIndex));
            fprintf(fid,"%d 0 1e12",test(structArrayIndex).sweepNodes(nodeIndex));
        else
            fprintf(fid,"%s%d dut",device,test(structArrayIndex).sweepNodes(nodeIndex));
            fprintf(fid,"%d 0 PWL(0 0 %g %g %g %g)\n",test(structArrayIndex).sweepNodes(nodeIndex),test(structArrayIndex).sweepValues(1),test(structArrayIndex).sweepValues(end),test(structArrayIndex).simTime,...
            test(structArrayIndex).sweepValues(end));
            fprintf(fid,"%s%d dut",device1,test(structArrayIndex).sweepNodes(nodeIndex));
            fprintf(fid,"%d 0 1e12",test(structArrayIndex).sweepNodes(nodeIndex));
        end
    end
    if(SPICETool=="SIMetrix")
        if(test(structArrayIndex).name=="idvgst6tj27")||(test(structArrayIndex).name=="idvgst6tj75")||(test(structArrayIndex).name=="idvdst6")||(test(structArrayIndex).name=="qisst6")||...
            (test(structArrayIndex).name=="qosst6")||(test(structArrayIndex).name=="breakdownt6")
            fprintf(fid,"\n.PRINT TRAN V(dut1)");
            fprintf(fid,"\n.PRINT TRAN V(dut2)");
            fprintf(fid,"\n.PRINT TRAN V(dut3)");
            fprintf(fid,"\n.PRINT TRAN V(dut4)");
            fprintf(fid,"\n.PRINT TRAN V(dut5)");
            fprintf(fid,"\n.PRINT TRAN V(dut6)");
            fprintf(fid,"\n.PRINT TRAN I(V1)");
            fprintf(fid,"\n.PRINT TRAN I(V2)");
            fprintf(fid,"\n.PRINT TRAN I(V3)");
            fprintf(fid,"\n.PRINT TRAN I(V4)");
            fprintf(fid,"\n.PRINT TRAN I(V5)");
            fprintf(fid,"\n.PRINT TRAN I(V6)");
        end
        if(test(structArrayIndex).name=="idvgst5tj27")||(test(structArrayIndex).name=="idvgst5tj75")||(test(structArrayIndex).name=="idvdst5")||(test(structArrayIndex).name=="qisst5")||...
            (test(structArrayIndex).name=="qosst5")||(test(structArrayIndex).name=="breakdownt5")
            fprintf(fid,"\n.PRINT TRAN V(dut1)");
            fprintf(fid,"\n.PRINT TRAN V(dut2)");
            fprintf(fid,"\n.PRINT TRAN V(dut3)");
            fprintf(fid,"\n.PRINT TRAN V(dut4)");
            fprintf(fid,"\n.PRINT TRAN V(dut5)");
            fprintf(fid,"\n.PRINT TRAN I(V1)");
            fprintf(fid,"\n.PRINT TRAN I(V2)");
            fprintf(fid,"\n.PRINT TRAN I(V3)");
            fprintf(fid,"\n.PRINT TRAN I(V4)");
            fprintf(fid,"\n.PRINT TRAN I(V5)");
        end
        if(test(structArrayIndex).name=="idvgst3")||(test(structArrayIndex).name=="idvdst3")||(test(structArrayIndex).name=="qisst3")||(test(structArrayIndex).name=="qosst3")||...
            (test(structArrayIndex).name=="breakdownt3")||(test(structArrayIndex).name=="idvgst4")||(test(structArrayIndex).name=="idvdst4")||(test(structArrayIndex).name=="qisst4")||...
            (test(structArrayIndex).name=="qosst4")||(test(structArrayIndex).name=="breakdownt4")
            fprintf(fid,"\n.PRINT TRAN V(dut1)");
            fprintf(fid,"\n.PRINT TRAN V(dut2)");
            fprintf(fid,"\n.PRINT TRAN V(dut3)");
            fprintf(fid,"\n.PRINT TRAN I(V1)");
            fprintf(fid,"\n.PRINT TRAN I(V2)");
            fprintf(fid,"\n.PRINT TRAN I(V3)");
        end
    end
    fclose(fid);
end

function myCleanupFun(f)
    if fopen(f)
        p=fopen(f);
        fclose(f);
        delete(p);
    end


end