function dlgStruct=getDialogSchema(this,name)







    bOpen=struct(...
    'Type','pushbutton',...
    'RowSpan',[1,1],...
    'ColSpan',[1,1],...
    'ObjectMethod','cbkOpen',...
    'FilePath',locGetImageFilePath('open.png'),...
    'Enabled',1);
    tOpen=this.dlgText(getString(message('rptgen:RptgenML_LibraryRpt:openReportLabel')),...
    'RowSpan',[1,1],...
    'ColSpan',[2,2]);

    bGenerate=struct(...
    'Type','pushbutton',...
    'RowSpan',[2,2],...
    'ColSpan',[1,1],...
    'ObjectMethod','cbkReport',...
    'FilePath',locGetImageFilePath('Report.png'),...
    'Enabled',1);
    tGenerate=this.dlgText(getString(message('rptgen:RptgenML_LibraryRpt:generateReportLabel')),...
    'RowSpan',[2,2],...
    'ColSpan',[2,2]);

    pActions=this.dlgContainer({
bOpen
tOpen
bGenerate
tGenerate
    },getString(message('rptgen:RptgenML_LibraryRpt:actionsLabel')),...
    'LayoutGrid',[2,2],...
    'ColStretch',[0,1]);


    [currSysPath,currSysName]=locGetCurrentSystem();

    if isempty(currSysPath)
        pSimulink={};
    else

        try
            rptName=rptgen.findSlRptName(currSysPath);
        catch
            rptName='';
        end

        bAssociate=struct(...
        'Type','pushbutton',...
        'DialogRefresh',true,...
        'RowSpan',[1,1],...
        'ColSpan',[1,1],...
        'ObjectMethod','cbkSimulink',...
        'FilePath',locGetImageFilePath('simulink_associate.png'),...
        'Enabled',~locIsSetRptEqualCurrentRpt(this,rptName));
        tAssociate=this.dlgText(...
        sprintf(getString(message('rptgen:RptgenML_LibraryRpt:associateXWithSimulinkLabel')),...
        this.FileName,currSysName),...
        'RowSpan',[1,1],...
        'ColSpan',[2,2]);

        bUnassociate=struct(...
        'Type','pushbutton',...
        'DialogRefresh',true,...
        'RowSpan',[2,2],...
        'ColSpan',[1,1],...
        'MatlabMethod','cbkAssociateSimulink(RptgenML.Root,[],''-null'');',...
        'FilePath',locGetImageFilePath('simulink_unassociate.png'),...
        'Enabled',true);
        tUnassociate=this.dlgText(...
        sprintf(getString(message('rptgen:RptgenML_LibraryRpt:unassociateSystemMsg')),...
        currSysName),...
        'RowSpan',[2,2],...
        'ColSpan',[2,2]);

        tEmptyLine=this.dlgText('',...
        'RowSpan',[3,3],...
        'ColSpan',[1,2]);

        tStatusAssociation=this.dlgText(...
        locGetAssociationStatus(currSysName,rptName),...
        'RowSpan',[4,4],...
        'ColSpan',[1,2]);

        pSimulink=this.dlgContainer({
bAssociate
tAssociate
bUnassociate
tUnassociate
tEmptyLine
tStatusAssociation
        },getString(message('rptgen:RptgenML_LibraryRpt:simulinkLabel')),...
        'LayoutGrid',[4,2],...
        'ColStretch',[0,1]);

        pSimulink={pSimulink};
    end


    desc=this.getDescription('-deferred');

    tDescriptions=this.dlgText(desc,...
    'RowSpan',[1,1],...
    'ColSpan',[1,1],...
    'WordWrap',true);

    pDescription=this.dlgContainer({
tDescriptions
    },getString(message('rptgen:RptgenML_LibraryRpt:descriptionLabel')),...
    'LayoutGrid',[2,1],...
    'RowStretch',[0,1]);


    dlgStruct=this.dlgMain(name,{
pActions
    pSimulink{:}
pDescription
    });


    function[currSysPath,currSysName]=locGetCurrentSystem()

        currSysPath='';
        currSysName='';
        if rptgen.isSimulinkLoaded

            currSysPath=gcs;
            if~isempty(currSysPath)
                currSysName=strrep(get_param(currSysPath,'Name'),char(10),' ');
            end
        end


        function tf=locIsSetRptEqualCurrentRpt(this,rptName)


            [rptPath,rptFile,rptExt]=fileparts(rptName);
            [thisPath,thisFile,thisExt]=fileparts(fullfile(this.PathName,this.FileName));

            if(isempty(rptPath)||strcmp(rptPath,thisPath))...
                &&(isempty(rptExt)||strcmp(rptExt,thisExt))...
                &&strcmp(rptFile,thisFile)

                tf=true;
            else
                tf=false;
            end


            function msg=locGetAssociationStatus(currSysName,rptName)


                if isempty(rptName)
                    msg=sprintf(getString(message('rptgen:RptgenML_LibraryRpt:noAssociatedReportMsg')),currSysName);
                else
                    [unused,rptFile]=fileparts(rptName);
                    msg=sprintf(getString(message('rptgen:RptgenML_LibraryRpt:systemIsAssociatedMsg')),...
                    currSysName,rptFile);
                end


                function imgFilePath=locGetImageFilePath(imageName)

                    imgFilePath=fullfile(toolboxdir('rptgen'),'resources',imageName);


