function dlgStruct=dlgValueContainer(this,varargin)





    normValue=strtrim(this.Value);
    isXMLValueText=~this.Casted&&~isempty(normValue)&&strcmp(normValue(1),'<')&&strcmp(normValue(end),'>');

    if isLibrary(this)

        globalEnable=0;
    else

        globalEnable=1;
    end

    idStr=this.ID;
    if~isempty(this.DescriptionShort)
        idStr=[idStr,' - ',this.DescriptionShort];
    end
    if strcmp(this.ID,'generate.toc')

        sectionTypes={
        'book',getString(message('rptgen:RptgenML_StylesheetElementID:bookLabel'))
        'chapter',getString(message('rptgen:RptgenML_StylesheetElementID:chapterLabel'))
        'sect1',getString(message('rptgen:RptgenML_StylesheetElementID:sect1Label'))
        'sect2',getString(message('rptgen:RptgenML_StylesheetElementID:sect2Label'))
        'sect3',getString(message('rptgen:RptgenML_StylesheetElementID:sect3Label'))
        'sect4',getString(message('rptgen:RptgenML_StylesheetElementID:sect4Label'))
        'sect5',getString(message('rptgen:RptgenML_StylesheetElementID:sect5Label'))
        'section',getString(message('rptgen:RptgenML_StylesheetElementID:sectionLabel'))
        };
        sectionTypesCount=size(sectionTypes,1);

        tocTypes={
        'title',getString(message('rptgen:RptgenML_StylesheetElementID:titlepageLabel'))
        'toc',getString(message('rptgen:RptgenML_StylesheetElementID:tableOfContentsLabel'))
        'figure',getString(message('rptgen:RptgenML_StylesheetElementID:figureListLabel'))
        'table',getString(message('rptgen:RptgenML_StylesheetElementID:tableListLabel'))
        };



        tocTypesCount=size(tocTypes,1);


        for i=1:sectionTypesCount
            for j=1:tocTypesCount
                try
                    if rptgen.use_java
                        isChecked=com.mathworks.toolbox.rptgen.xml.StylesheetEditor.getGenerateToc(this.JavaHandle,...
                        sectionTypes{i,1},tocTypes{j,1});
                    else
                        isChecked=mlreportgen.re.internal.ui.StylesheetEditor.getGenerateToc(this.JavaHandle,...
                        sectionTypes{i,1},tocTypes{j,1});
                    end
                catch
                    isChecked=false;
                end
                tableData{i,j}=struct('Type','checkbox',...
                'InitialValue',isChecked);
            end
        end

        dlgStruct=this.dlgContainer({
        this.dlgText(idStr,...
        'WordWrap',1,...
        'ColSpan',[1,1],...
        'RowSpan',[1,1])
        struct('Type','table',...
        'Tag','generate.toc.value',...
        'UserData',struct('sectionTypes',{sectionTypes(:,1)},'tocTypes',{tocTypes(:,1)}),...
        'Size',[sectionTypesCount,tocTypesCount],...
        'Grid',true,...
        'Data',{tableData},...
        'ColHeader',{tocTypes(:,2)'},...
        'ColumnCharacterWidth',cellfun('length',tocTypes(:,2))',...
        'RowHeader',{sectionTypes(:,2)'},...
        'Editable',globalEnable,...
        'Enabled',globalEnable,...
        'HeaderVisibility',[1,1],...
        'ValueChangedCallback',@onValueChanged,...
        'RowSpan',[2,2],...
        'ColSpan',[1,1])
        },getString(message('rptgen:RptgenML_StylesheetElementID:valueLabel')),...
        'LayoutGrid',[2,1],...
        'RowStretch',[0,1],...
        varargin{:});
    elseif strcmp(this.ID,'formal.title.placement')

        formalTypes={
        'figure',getString(message('rptgen:RptgenML_StylesheetElementID:figureLabel'))
        'table',getString(message('rptgen:RptgenML_StylesheetElementID:tableLabel'))
        };
        formalTypesCount=size(formalTypes,1);




































        dlgContent={this.dlgText(idStr,...
        'WordWrap',1,...
        'ColSpan',[1,1],'RowSpan',[1,1])};
        for i=1:formalTypesCount
            dlgContent{end+1}=struct('Type','combobox',...
            'Tag',['placement.',formalTypes{i,1}],...
            'Enabled',globalEnable,...
            'Name',[formalTypes{i,2},':'],...
            'Entries',{{'before','after'}},...
            'InitialValue',getFormalTitlePlacement(this,formalTypes{i,1}),...
            'MatlabMethod','setFormalTitlePlacement',...
            'MatlabArgs',{{this,formalTypes{i,1},'%value','%dialog'}},...
            'RowSpan',[i+1,i+1],...
            'ColSpan',[1,1]);
        end

        dlgStruct=this.dlgContainer(dlgContent,...
        getString(message('rptgen:RptgenML_StylesheetElementID:valueLabel')),...
        'LayoutGrid',[formalTypesCount+2,1],...
        'RowStretch',[zeros(1,formalTypesCount+1),1],...
        varargin{:});

    elseif isXMLValueText


        dlgStruct=this.dlgContainer({
        this.dlgText(idStr,...
        'WordWrap',1,...
        'ColSpan',[1,2],...
        'RowSpan',[1,1])
        this.dlgText(getString(message('rptgen:RptgenML_StylesheetElementID:xmlValueLabel')),...
        'ColSpan',[1,1],...
        'RowSpan',[2,2]);
        rmfield(this.dlgWidget('Value',...
        'ColSpan',[1,2],...
        'RowSpan',[3,3],...
        'Type','editarea',...
        'Tag','ValueXML',...
        'DialogRefresh',1,...
        'Enabled',globalEnable),'Name')
        },getString(message('rptgen:RptgenML_StylesheetElementID:valueLabel')),...
        'LayoutGrid',[3,2],'RowStretch',[0,0,1],'ColStretch',[1,0],...
        varargin{:});

    elseif(rptgen.use_java&&com.mathworks.toolbox.rptgen.xml.StylesheetEditor.isParameterNode(this.JavaHandle))...
        ||(~rptgen.use_java&&mlreportgen.re.internal.ui.StylesheetEditor.isParameterNode(this.JavaHandle))
        badValue=strncmp(this.Value,'[[',2);

        dlgStruct=this.dlgContainer({
        this.dlgText(idStr,...
        'WordWrap',1,...
        'ColSpan',[1,2],...
        'RowSpan',[1,1])
        this.dlgText(getString(message('rptgen:RptgenML_StylesheetElementID:xmlValueLabel')),...
        'ColSpan',[1,1],...
        'RowSpan',[2,2]);
        struct('Type','pushbutton',...
        'ColSpan',[2,2],...
        'RowSpan',[2,2],...
        'Tag','castValueAsString',...
        'DialogRefresh',1,...
        'Enabled',globalEnable,...
        'ToolTip',getString(message('rptgen:RptgenML_StylesheetElementID:convertToStringLabel')),...
        'MatlabMethod','castValueAsString',...
        'MatlabArgs',{{'%source'}},...
        'Name',getString(message('rptgen:RptgenML_StylesheetElementID:editAsStringLabel')))
        rmfield(this.dlgWidget('Value',...
        'ColSpan',[1,2],...
        'RowSpan',[3,3],...
        'Type','editarea',...
        'Tag','ValueXML',...
        'DialogRefresh',1,...
        'Enabled',globalEnable&&~badValue),'Name')
        },getString(message('rptgen:RptgenML_StylesheetElementID:valueLabel')),...
        'LayoutGrid',[3,2],'RowStretch',[0,0,1],'ColStretch',[1,0],...
        varargin{:});
    else

        if strcmp(this.DataType,'boolean')
            pValue=struct(findprop(this,'value'));
            if strncmp(this.Value,'''',1)
                pValue.DataType={
                '''1''','true (''1'')'
                '''0''','false (''0'')'
                };
            else
                pValue.DataType={
                '1','true (1)'
                '0','false (0)'
                };
            end
            wValue=this.dlgWidget(pValue);
        elseif strncmp(this.DataType,'|',1)
            try
                if rptgen.use_java
                    dt=com.mathworks.toolbox.rptgen.xml.StylesheetCustomizationParser.parseListDataType(this.DataType);
                else
                    dt=mlreportgen.re.internal.ui.StylesheetCustomizationParser.parseListDataType(this.DataType);
                end
                dt=cellstr(char(dt));
                pValue=struct(findprop(this,'Value'));
                pValue.DataType=[dt,strrep(dt,'''','')];
                wValue=this.dlgWidget(pValue);
            catch
                wValue=this.dlgWidget('Value');
            end
        else
            wValue=this.dlgWidget('Value');
        end


        dlgStruct=this.dlgContainer({
        this.dlgText(idStr,...
        'WordWrap',1,...
        'ColSpan',[1,2],...
        'RowSpan',[1,1])
        this.dlgSet(wValue,...
        'ColSpan',[1,1],...
        'RowSpan',[2,2],...
        'DialogRefresh',1,...
        'Enabled',globalEnable)
        struct('Type','pushbutton',...
        'ColSpan',[2,2],...
        'RowSpan',[2,2],...
        'Tag','castValueAsXML',...
        'ToolTip',getString(message('rptgen:RptgenML_StylesheetElementID:convertToXmlLabel')),...
        'DialogRefresh',1,...
        'Enabled',globalEnable,...
        'MatlabMethod','castValueAsXML',...
        'MatlabArgs',{{'%source'}},...
        'Name',getString(message('rptgen:RptgenML_StylesheetElementID:editAsXmlLabel')))
        },getString(message('rptgen:RptgenML_StylesheetElementID:valueLabel')),...
        'LayoutGrid',[3,2],'RowStretch',[0,0,1],'ColStretch',[1,0],...
        varargin{:});
    end







    function onValueChanged(d,r,c,val)

        this=d.getDialogSource;
        args=d.getUserData('generate.toc.value');

        setGenerateToc(this,args.sectionTypes{r+1},args.tocTypes{c+1},val,d);
























