classdef IBISPin<handle&matlab.mixin.Heterogeneous

...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...



    properties
        PinName(1,1)string{serdes.utilities.mustBeShorterThan(PinName,6)}=""
        SignalName(1,1)string{serdes.utilities.mustBeShorterThan(SignalName,41)}=""
        ModelName(1,1)string{serdes.utilities.mustBeShorterThan(ModelName,41)}=""
        Rpin(1,1)string{serdes.utilities.mustBeShorterThan(Rpin,10)}=""
        Lpin(1,1)string{serdes.utilities.mustBeShorterThan(Lpin,10)}=""
        Cpin(1,1)string{serdes.utilities.mustBeShorterThan(Cpin,10)}=""
        Hidden(1,1)logical=false;
    end

    methods
        function pin=IBISPin(varargin)
            parser=inputParser;
            parser.addParameter('pinname',"")
            parser.addParameter('signalname',"")
            parser.addParameter('modelname',"")
            parser.addParameter('rpin',"")
            parser.addParameter('lpin',"")
            parser.addParameter('cpin',"")
            parser.parse(varargin{:})
            args=parser.Results;
            pin.PinName=args.pinname;
            pin.SignalName=args.signalname;
            pin.ModelName=args.modelname;
            pin.Rpin=args.rpin;
            pin.Lpin=args.lpin;
            pin.Cpin=args.cpin;
        end

        function ibisString=getIBISString(pin,indent)
            if pin.Hidden
                ibisString="";
            else
                if strcmp(pin.Rpin,"")&&strcmp(pin.Lpin,"")&&strcmp(pin.Cpin,"")
                    ibisString=indent+string(sprintf('%-8s%-16s%-16s\n',...
                    pin.PinName,pin.SignalName,pin.ModelName));
                else
                    ibisString=indent+string(sprintf('%-8s%-16s%-16s%-16s%-16s%-16s\n',...
                    pin.PinName,pin.SignalName,pin.ModelName,pin.Rpin,pin.Lpin,pin.Cpin));
                end
            end
        end
    end
end

