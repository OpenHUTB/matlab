function dlgStruct=getAutogenInfoDialogSchema(h,name)%#ok





    text_NoAutogenTasks.Name=DAStudio.message('Simulink:taskEditor:SystemTaskDesc_noTasksNeeded');
    text_NoAutogenTasks.WordWrap=true;
    text_NoAutogenTasks.Type='text';


    button_autogen.Type='pushbutton';
    button_autogen.Name='';
    button_autogen.Tag='button_autogen';
    button_autogen.WidgetId=button_autogen.Tag;
    button_autogen.Enabled=1;
    button_autogen.MatlabMethod='DeploymentDiagram.callbackFunction';
    button_autogen.MatlabArgs={'refreshMapping','%dialog'};
    button_autogen.ToolTip=DAStudio.message('Simulink:taskEditor:PerformUpdateDiagramToolTip');
    button_autogen.FilePath=DeploymentDiagram.colorUtil('getRefreshIconPath');
    button_autogen.MinimumSize=[37,26];
    button_autogen.MaximumSize=[37,26];


    autogenText.Name=...
    DAStudio.message('Simulink:taskEditor:PerformUpdateDiagramText');
    autogenText.Type='text';

    emptyPanel.Name='';
    emptyPanel.Type='panel';

    [indexedItems,layout]=...
    slprivate('getIndexedGroupItems',3,{...
    autogenText,button_autogen,emptyPanel});

    autogenGrp.Name='';
    autogenGrp.Type='panel';
    autogenGrp.Items=indexedItems;
    autogenGrp.LayoutGrid=layout;


    sysTaskTable.Name='';
    sysTaskTable.Type='table';
    sysTaskTable.Tag='_SystemTask_Table_';
    sysTaskTable.Grid=1;
    sysTaskTable.RowHeaderWidth=2;
    sysTaskTable.LastColumnStretchable=true;
    sysTaskTable.ColumnCharacterWidth=[20,15,5];

    tableData=getTableData(h);
    numRows=0;
    if strcmp(h.SystemTaskStatus,'Partially mapped')
        assert(~isempty(tableData));
        numRows=size(tableData);
        sysTaskTable.Enabled=true;
        text_NoAutogenTasks.Visible=false;
    else
        sysTaskTable.Visible=false;
        if strcmp(h.SystemTaskStatus,'Needs update diagram')
            text_NoAutogenTasks.Visible=false;
        else
            text_NoAutogenTasks.Visible=true;
        end
    end

    sysTaskTable.Size=[numRows,3];
    sysTaskTable.Data=tableData;
    sysTaskTable.Grid=1;
    sysTaskTable.ColHeader={...
    DAStudio.message('Simulink:taskEditor:SystemTaskTableHeader_Name'),...
    DAStudio.message('Simulink:taskEditor:SystemTaskTableHeader_Type'),...
    DAStudio.message('Simulink:taskEditor:SystemTaskTableHeader_Period')};


    [indexedItems,layout]=...
    slprivate('getIndexedGroupItems',3,{...
    autogenGrp,'stretch','stretch',...
    text_NoAutogenTasks,'stretch','stretch',...
    sysTaskTable,'stretch','stretch',...
    });

    synthTasksGrp.Name='';
    synthTasksGrp.Type='group';
    synthTasksGrp.Flat=false;
    synthTasksGrp.Items=indexedItems;
    synthTasksGrp.LayoutGrid=layout;

    [indexedItems,layout]=...
    slprivate('getIndexedGroupItems',2,{...
    synthTasksGrp,'blank'});


    automaticAnalysisGrp.Name='';
    automaticAnalysisGrp.Type='panel';
    automaticAnalysisGrp.Items=indexedItems;
    automaticAnalysisGrp.LayoutGrid=layout;
    automaticAnalysisGrp.RowStretch=[0,1];
    automaticAnalysisGrp.ColStretch=[1,0];





    title=DAStudio.message('Simulink:taskEditor:SystemTasksDialogTitle');
    dlgStruct.DialogTitle=title;
    dlgStruct.DisableDialog=DeploymentDiagram.isTaskConfigurationInUse(h);
    dlgStruct.Items={automaticAnalysisGrp};
    dlgStruct.LayoutGrid=[1,1];
    dlgStruct.Source=h;
    dlgStruct.DialogTag='TaskEditor_SystemTasks_DDG';
    dlgStruct.HelpMethod='helpview';
    dlgStruct.EmbeddedButtonSet={'Help'};

    mapId=['mapkey:',class(h)];
    dlgStruct.HelpArgs={mapId,'help_button','CSHelpWindow'};

    function tableData=getTableData(h)
        tableData={};

        autoTasks=h.AutogeneratedTasks;
        if isempty(autoTasks)
            return;
        end
        for i=1:length(autoTasks)
            tableData{i,1}=autoTasks(i).QualifiedName;%#ok<*AGROW>
            if isa(autoTasks(i),'Simulink.SoftwareTarget.AutogenTask')
                typeStr='Periodic';
                periodStr=autoTasks(i).Period;
            else
                typeStr='Aperiodic';
                periodStr='---';
            end
            tableData{i,2}=typeStr;
            tableData{i,3}=periodStr;
        end
