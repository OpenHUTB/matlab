function slhelp( block_hdl, option )















































docPath = docroot;


if nargin == 0
doc simulink/;
return ;
end 


isMasked = strcmp( get_param( block_hdl, 'mask' ), 'on' );


if nargin == 2
if contains( option, 'mask' )

if ~isMasked

DAStudio.error( 'Simulink:blocks:SL_BlockIsNotMasked' );
end 
else 
if contains( option, 'parameter' )

isMasked = false;
else 

DAStudio.error( 'Simulink:blocks:SL_UnknownCommandOption', option );
end 
end 
end 


if isMasked
[ found_key, str ] = LocalParseMaskHelp( block_hdl );
if found_key
eval( str );
return ;
end 
end 

block_type = get_param( block_hdl, 'BlockType' );

if isequal( block_type, 'CustomWebBlock' ) || isequal( block_type, 'CustomTuningWebBlock' ) ||  ...
isequal( block_type, 'CustomStandaloneWebBlock' )
block_type = get_param( block_hdl, 'CustomType' );
if strcmp( block_type, 'Switch' )
config = jsondecode( get_param( block_hdl, 'Configuration' ) );
if strcmp( config.type, 'RotarySwitch' )
block_type = 'Custom Rotary Switch';
else 
if isfield( config.settings, 'variant' )
if strcmp( config.settings.variant, 'slider' )
block_type = 'Custom Slider Switch';
elseif strcmp( config.settings.variant, 'rocker' )
block_type = 'Custom Rocker Switch';
else 
block_type = 'Custom Toggle Switch';
end 
end 
end 
end 
end 


mdlHdl = bdroot( block_hdl );
isSystemComposerMdl = strcmp( get_param( mdlHdl, 'SimulinkSubDomain' ), 'Architecture' ) ||  ...
strcmp( get_param( mdlHdl, 'SimulinkSubDomain' ), 'SoftwareArchitecture' );
if isSystemComposerMdl
if isequal( block_type, 'SubSystem' )

if isequal( get_param( block_hdl, 'SimulinkSubDomain' ), 'ArchitectureAdapter' )
block_type = 'Adapter';
elseif isequal( get_param( block_hdl, 'Variant' ), 'on' )
block_type = 'VariantComponent';
elseif systemcomposer.internal.isStateflowBehaviorComponent( block_hdl )
block_type = 'ChartComponent';
else 
block_type = 'Component';
end 
elseif isequal( block_type, 'ModelReference' )

block_type = 'ReferenceArchitecture';
end 
end 


if ( isequal( block_type, 'SimscapeBus' ) )
try 
web( pmsl_help( block_hdl ) );
return ;
catch 
DAStudio.error( 'Simulink:blocks:SL_SimscapeBus' );
end 
end 


if Simulink.internal.isArchitectureModel( bdroot( block_hdl ), 'AUTOSARArchitecture' )
if any( strcmp( block_type, { 'SubSystem', 'ModelReference' } ) )

if autosar.composition.Utils.isCompositionBlock( block_hdl )
block_type = 'AUTOSARCompositionBlock';
elseif autosar.composition.Utils.isComponentBlock( block_hdl )
block_type = 'AUTOSARComponentBlock';
end 
end 
end 


if ( isequal( block_type, 'ConnectionLabel' ) )
try 
web( pmsl_help( block_hdl ) );
return ;
catch 
DAStudio.error( 'Simulink:blocks:SL_ConnectionLabel' );
end 
end 


if ( isequal( block_type, 'VariantPMConnector' ) )
try 
web( pmsl_help( block_hdl ) );
return ;
catch 
DAStudio.error( 'Simulink:blocks:SL_VariantConnector' );
end 
end 


if ( isequal( block_type, 'MATLABSystem' ) )
if ( isequal( get_param( block_hdl, 'MaskType' ), 'MatrixInterpolation' ) )
block_type = 'MatrixInterpolation';
end 
end 

if isequal( block_type, 'Inport' ) && strcmpi( get_param( block_hdl, 'IsBusElementPort' ), 'on' )
if strcmpi( get_param( block_hdl, 'IsClientServer' ), 'on' )
block_type = 'FunctionElementCall';
else 
block_type = 'BusElementInport';
end 
elseif isequal( block_type, 'Outport' ) && strcmpi( get_param( block_hdl, 'IsBusElementPort' ), 'on' )
if strcmpi( get_param( block_hdl, 'IsClientServer' ), 'on' )
block_type = 'FunctionElement';
else 
block_type = 'BusElementOutport';
end 
end 


isMATLABSystemBlock =  ...
isequal( block_type, 'MATLABSystem' ) ||  ...
isequal( block_type, 'MATLABDiscreteEventSystem' );


if isMATLABSystemBlock
system_name = get_param( block_hdl, 'System' );
calledFromInitialDialog = ( nargin == 2 ) && strcmp( option, 'parameter' );
systemIsDefined = ~strcmp( system_name, '<Enter System Class Name>' ) && ~isempty( system_name );
if ~calledFromInitialDialog && systemIsDefined
block_type = system_name;
end 
elseif isMasked
mask_type = get_param( block_hdl, 'MaskType' );
if ( isempty( mask_type ) )
block_type = get_param( block_hdl, 'BlockType' );
else 
block_type = mask_type;
end 
elseif slprivate( 'is_stateflow_based_block', block_hdl )
block_type = 'Stateflow';
else 
if isequal( block_type, 'SubSystem' )
if ~isempty( get_param( block_hdl, 'TemplateBlock' ) )
block_type = 'ConfigurableSubsystem';
elseif strcmp( get_param( block_hdl, 'Variant' ), 'on' )
block_type = 'VariantSubsystem';
elseif strcmp( get_param( block_hdl, 'SystemType' ), 'EventFunction' )


eventListener = find_system( block_hdl, 'MatchFilter', @Simulink.match.internal.filterOutInactiveVariantSubsystemChoices, 'BlockType', 'EventListener' );
if ( strcmp( get_param( eventListener, 'EventType' ), 'Initialize' ) )
block_type = 'InitializeFunctionSubsystem';
elseif ( strcmp( get_param( eventListener, 'EventType' ), 'Terminate' ) )
block_type = 'TerminateFunctionSubsystem';
elseif ( strcmp( get_param( eventListener, 'EventType' ), 'Reset' ) )
block_type = 'ResetFunctionSubsystem';
else 
assert( strcmp( get_param( eventListener, 'EventType' ), 'Reinitialize' ) );
block_type = 'ReinitializeFunctionSubsystem';
end 
else 
block_type = [ get_param( block_hdl, 'SystemType' ), 'Subsystem' ];
end 
end 


if isequal( block_type, 'Scope' ) &&  ...
strcmp( get_param( block_hdl, 'DefaultConfigurationName' ), 'spbscopes.TimeScopeBlockCfg' )
block_type = 'TimeScope';
elseif ( isequal( block_type, 'TimeScope' ) &&  ...
strcmp( get_param( block_hdl, 'DefaultConfigurationName' ), 'Simulink.scopes.TimeScopeBlockCfg' ) ) ||  ...
isequal( block_type, 'Scope' )
if strcmp( get_param( block_hdl, 'Floating' ), 'on' ) ||  ...
strcmp( get_param( block_hdl, 'IOType' ), 'viewer' )
block_type = 'FloatingTimeScope';
else 
block_type = 'SimulinkTimeScope';
end 
end 

if isequal( block_type, 'TimeScope' ) && isempty( ver( 'dsp' ) )
block_type = 'SimulinkTimeScope';
end 
end 
[ mapName, pathToMapFile ] = LocalGetBlockMapName( block_type, docPath );



if isMATLABSystemBlock && ( isempty( mapName ) || strcmp( mapName, 'User Defined' ) )
doc( block_type );
return ;



elseif strcmp( mapName, 'User Defined' )
CR = newline;
SL_BLOCKS_PAGE = 'matlab:helpview(''simulink'',''blocks'');';

aBlockLabel = message( 'Simulink:utility:blockRefLabel' ).getString(  );
aMaskType = get_param( block_hdl, 'MaskType' );
aMaskHelp = get_param( block_hdl, 'MaskHelp' );

aNoHelpLabel = [  ];
if isempty( aMaskHelp )
aNoHelpLabel = message( 'Simulink:utility:noHelpTopicLabel' ).getString(  );
end 

out_str = [  ...
'<head><meta http-equiv="content-type" content="text/html;charset=utf-8">', CR,  ...
'<title>', getString( message( 'Simulink:utility:SLMaskedBlockLabel' ) ), aMaskType,  ...
'</title>', CR,  ...
'</head>', CR,  ...
'<body bgcolor=#FFFFFF>', CR,  ...
'<table border=0 width="100%" cellpadding=0 cellspacing=0><tr>',  ...
'<td valign=baseline bgcolor="#e7ebf7"><b>', aNoHelpLabel, '</b></td>',  ...
'<td valign=baseline bgcolor="#e7ebf7" align=right>',  ...
'<a href="', SL_BLOCKS_PAGE, '">', aBlockLabel, '</a>',  ...
'</td></tr></table>',  ...
'<font size=+3 color="#990000">', aMaskType, '</font>', CR,  ...
'<p style="white-space: pre-wrap;">', aMaskHelp, '</p>', CR,  ...
'</body>',  ...
'</html>',  ...
 ];

web( [ 'text://', out_str ] );

else 
if isempty( docPath )
helpview( [ matlabroot, '/toolbox/local/helperr.html' ] );
else 
if strcmp( mapName, 'Stateflow' )
chartId = sf( 'Private', 'block2chart', block_hdl );
sfObj = find( sfroot, 'id', chartId );
if sf( 'Private', 'is_eml_chart', chartId )
helpview( 'simulink', 'em_block_ref' );
elseif sf( 'Private', 'is_truth_table_chart', chartId )
helpview( 'stateflow', 'truth_table_block_ref' );
elseif sf( 'Private', 'is_des_chart', chartId )
helpview( 'simevents', 'DiscreteEventChart' );
elseif isa( sfObj, 'Stateflow.StateTransitionTableChart' )
helpview( 'stateflow', 'state_transition_table_block_ref' );
elseif isa( sfObj, 'Stateflow.ReactiveTestingTableChart' )
Stateflow.STT.Views.ReactiveViewManager.openHelp( chartId );
elseif Stateflow.ReqTable.internal.isRequirementsTable( chartId )
helpview( 'slrequirements', 'req_table_block' );
elseif ( isa( sfObj, 'Stateflow.Chart' ) )
helpview( 'stateflow', 'stateflow_block_ref' );
end 
else 
helpview( pathToMapFile, mapName );
end 
end 
end 





function [ mapName, pathToMapFile ] = LocalGetBlockMapName( block_type, docPath )

if strcmp( block_type, 'MessageViewer' )
if ( license( 'test', 'SimEvents' ) )
pathToMapFile = 'simevents';
elseif ( license( 'test', 'Stateflow' ) )
pathToMapFile = 'stateflow';
elseif license( 'test', 'Simulink_Test' )
pathToMapFile = 'sltest';
end 
elseif strcmp( block_type, 'MATLABDiscreteEventSystem' )
pathToMapFile = 'simevents';
elseif strcmp( block_type, 'VideoViewer' ) || strcmp( block_type, 'ToImage' ) ...
 || strcmp( block_type, 'FromImage' )
pathToMapFile = 'vision';
elseif strcmp( block_type, 'ObserverReference' ) || strcmp( block_type, 'ObserverPort' )
pathToMapFile = 'sltest';
elseif strcmp( block_type, 'FloatTypecast' ) || strcmp( block_type, 'StateControl' ) ...
 || strcmp( block_type, 'EnabledSynchronousSubsystem' )
pathToMapFile = 'hdlcoder';
else 
pathToMapFile = 'simulink';
end 

blks = {  ...
'Abs', 'abs'; ...
'ActionPort', 'actionport'; ...
'AlgebraicConstraint', 'algebraicconstraint'; ...
'ArgIn', 'argin'; ...
'ArgOut', 'argout'; ...
'ArithShift', 'shiftarithmetic'; ...
'Assertion', 'assertion'; ...
'Bias', 'bias'; ...
'Block Support Table', 'blocksupporttable'; ...
'Checks_Gradient', 'checkdiscretegradient'; ...
'Checks_DGap', 'checkdynamicgap'; ...
'Checks_DRange', 'checkdynamicrange'; ...
'Checks_SGap', 'checkstaticgap'; ...
'Checks_SRange', 'checkstaticrange'; ...
'Checks_DMin', 'checkdynamiclowerbound'; ...
'Checks_DMax', 'checkdynamicupperbound'; ...
'Checks_Resolution', 'checkinputresolution'; ...
'Checks_SMin', 'checkstaticlowerbound'; ...
'Checks_SMax', 'checkstaticupperbound'; ...
'Assignment', 'assignment'; ...
'Backlash', 'backlash'; ...
'Reference', 'badlink'; ...
'Bit Clear', 'bitclear'; ...
'Bit Set', 'bitset'; ...
'BitwiseOperator', 'bitwiseoperator'; ...
'Band-Limited White Noise.', 'bandlimitedwhitenoise'; ...
'BusAssignment', 'busassignment'; ...
'BusCreator', 'buscreator'; ...
'BusSelector', 'busselector'; ...
'BusToVector', 'bustovector'; ...
'chirp', 'chirpsignal'; ...
'Clock', 'clock'; ...
'CodeReuseSubsystem', 'codereusesubsystem'; ...
'CombinatorialLogic', 'combinatoriallogic'; ...
'Compare To Zero', 'comparetozero'; ...
'Compare To Constant', 'comparetoconstant'; ...
'ComplexToMagnitudeAngle', 'complextomagnitudeangle'; ...
'ComplexToRealImag', 'complextorealimag'; ...
'Concatenate', 'concatenate'; ...
'Configuration block', 'configurablesubsystem'; ...
'Constant', 'constant'; ...
'Conversion Inherited', 'datatypeconversioninherited'; ...
'Cosine', 'cosine'; ...
'Coulombic and Viscous Friction', 'coulombandviscousfriction'; ...
'Counter Free-Running', 'counterfreerunning'; ...
'Counter Limited', 'counterlimited'; ...
'CustomGaugeBlock', 'custom_gauge'; ...
'CallbackButton', 'callback'; ...
'DataStoreMemory', 'datastorememory'; ...
'DataStoreRead', 'datastoreread'; ...
'DataStoreWrite', 'datastorewrite'; ...
'DataTypeConversion', 'datatypeconversion'; ...
'DataTypeDuplicate', 'datatypeduplicate'; ...
'Data Type Propagation', 'datatypepropagation'; ...
'DeadZone', 'deadzone'; ...
'Dead Zone Dynamic', 'deadzonedynamic'; ...
'Decrement Time To Zero', 'decrementtimetozero'; ...
'Decrement To Zero', 'decrementtozero'; ...
'Demux', 'demux'; ...
'Derivative', 'derivative'; ...
'Detect Change', 'detectchange'; ...
'Detect Decrease', 'detectdecrease'; ...
'Detect Increase', 'detectincrease'; ...
'Detect Fall Negative', 'detectfallnegative'; ...
'Detect Fall Nonpositive', 'detectfallnonpositive'; ...
'Detect Rise Nonnegative', 'detectrisenonnegative'; ...
'Detect Rise Positive', 'detectrisepositive'; ...
'Difference', 'difference'; ...
'DigitalClock', 'digitalclock'; ...
'Discrete Derivative', 'discretederivative'; ...
'DiscreteFilter', 'discretefilter'; ...
'DiscreteFir', 'discretefir'; ...
'DiscretePulseGenerator', 'discretepulsegenerator'; ...
'DiscreteStateSpace', 'discretestatespace'; ...
'DiscreteIntegrator', 'discretetimeintegrator'; ...
'FirstOrderHold', 'first_order_hold'; ...
'PWM', 'pwm'; ...
'PropagationDelay', 'propagationdelay'; ...
'VariablePulseGenerator', 'variablepulsegenerator'; ...
'DiscreteTransferFcn', 'discretetransferfcn'; ...
'DiscreteZeroPole', 'discretezeropole'; ...
'Display', 'display'; ...
'DocBlock', 'docblock'; ...
'DotProduct', 'dotproduct'; ...
'EnablePort', 'enable'; ...
'Extract Bits', 'extractbits'; ...
'Enumerated Constant', 'simulink_enum_constant'; ...
'Environment Controller', 'environmentcontroller'; ...
'EventListener', 'eventlistener'; ...
'Fcn', 'fcn'; ...
'Find', 'find'; ...
'First Order Transfer Fcn', 'transferfcnfirstorder'; ...
'First-Order Hold', 'firstorderhold'; ...
'FloatingTimeScope', 'floatingtimescope'; ...
'FloatTypecast', 'floattypecast'; ...
'ForEach', 'foreach'; ...
'FMU', 'FMU_block'; ...
'ForIterator', 'for'; ...
'From', 'from'; ...
'FromDataflow', 'fromdataflow'; ...
'FromFile', 'fromfile'; ...
'FromImage', 'fromimage'; ...
'FromWorkspace', 'fromworkspace'; ...
'FunctionCaller', 'functioncaller'; ...
'Function-Call Generator', 'functioncallgenerator'; ...
'FunctionCallFeedbackLatch', 'functioncallfeedbacklatch'; ...
'FunctionCallSplit', 'functioncallsplit'; ...
'Gain', 'gain'; ...
'Goto', 'goto'; ...
'GotoTagVisibility', 'gototagvisibility'; ...
'Ground', 'ground'; ...
'HitCross', 'hitcrossing'; ...
'HitScheduler', 'hitscheduler'; ...
'If', 'if'; ...
'Real World Value Increment', 'incrementrealworld'; ...
'Stored Integer Value Increment', 'incrementstoredinteger'; ...
'InitialCondition', 'ic'; ...
'Inport', 'inport'; ...
'BusElementInport', 'buselementinport'; ...
'BusElementOutport', 'buselementoutport'; ...
'FunctionElementCall', 'functionelementcall'; ...
'FunctionElement', 'functionelement'; ...
'Integer Delay', 'integerdelay'; ...
'Delay', 'delay'; ...
'Integrator', 'integrator'; ...
'Interpolation_n-D', 'interpolationusingprelookup'; ...
'Interval Test', 'intervaltest'; ...
'Interval Test Dynamic', 'intervaltestdynamic'; ...
'Lead or Lag Compensator', 'transferfcnleadorlag'; ...
'Logic', 'logicaloperator'; ...
'Lookup', 'lookuptable'; ...
'Lookup Table Dynamic', 'lookuptabledynamic'; ...
'LookupIdxSearch', 'prelookupindexsearch'; ...
'LookupNDDirect', 'directlookuptablend'; ...
'Lookup_n-D', 'lookuptablend'; ...
'LookupNDInterpIdx', 'interpolationndusingprelookup'; ...
'Lookup2D', 'lookuptable2d'; ...
'MagnitudeAngleToComplex', 'magnitudeangletocomplex'; ...
'ManualSwitch', 'manualswitch'; ...
'Math', 'mathfunction'; ...
'MATLABDiscreteEventSystem', 'MATLABDiscreteEventSystem'; ...
'MATLABFcn', 'matlabfcn'; ...
'MATLABSystem', 'matlab_system'; ...
'MatrixInterpolation', 'MatrixInterpolation'; ...
'Matrix Gain', 'matrixgain'; ...
'Memory', 'memory'; ...
'Merge', 'merge'; ...
'MessageMerge', 'MessageMerge'; ...
'MessagePollingSubsystem', 'messagepollingsubsystem'; ...
'MessageTriggeredSubsystem', 'messagetriggeredsubsystem'; ...
'MessageViewer', 'MessageViewer'; ...
'MinMax', 'minmax'; ...
'MinMax Running Resettable', 'minmaxrunningresettable'; ...
'ModelReference', 'model'; ...
'M-S-Function', 'msfunction'; ...
'CMBlock', 'modelinfo'; ...
'MultiPortSwitch', 'multiportswitch'; ...
'Mux', 'mux'; ...
'Outport', 'out'; ...
'ParameterWriter', 'ParameterWriter'; ...
'PermuteDimensions', 'permutedimensions'; ...
'PID 1dof', 'pidcontroller1dof'; ...
'PID 2dof', 'pidcontroller2dof'; ...
'Polyval', 'polynomial'; ...
'PreLookup', 'prelookup'; ...
'Product', 'product'; ...
'Probe', 'probe'; ...
'Pulse Generator', 'pulsegenerator'; ...
'Queue', 'EntityQueue'; ...
'Quantizer', 'quantizer'; ...
'Ramp', 'ramp'; ...
'RandomNumber', 'randomnumber'; ...
'RateLimiter', 'ratelimiter'; ...
'Rate Limiter Dynamic', 'ratelimiterdynamic'; ...
'RateTransition', 'ratetransition'; ...
'Real World Value Decrement', 'decrementrealworld'; ...
'RealImagToComplex', 'realimagtocomplex'; ...
'Receive', 'MessageReceive'; ...
'Reciprocal', 'newtonreciprocal'; ...
'RelationalOperator', 'relationaloperator'; ...
'Relay', 'relay'; ...
'Repeating Sequence Interpolated', 'repeatingsequenceinterpolated'; ...
'Repeating Sequence Stair', 'repeatingsequencestair'; ...
'Repeating table', 'repeatingsequence'; ...
'ResetPort', 'reset'; ...
'Reshape', 'reshape'; ...
'Rounding', 'roundingfunction'; ...
'SampleTimeMath', 'weightedsampletimemath'; ...
'Saturate', 'saturation'; ...
'Saturation Dynamic', 'saturationdynamic'; ...
'Scaling Strip', 'datatypescalingstrip'; ...
'Send', 'MessageSend'; ...
'Scope', 'scope'; ...
'SecondOrderIntegrator', 'secondorderintegrator'; ...
'Selector', 'selector'; ...
'Shift Arithmetic', 'shiftarithmetic'; ...
'S-Function', 'sfunction'; ...
'Signum', 'sign'; ...
'Sigbuilder block', 'signalbuilder'; ...
'SignalConversion', 'signalconversion'; ...
'SignalGenerator', 'signalgenerator'; ...
'SignalSpecification', 'signalspecification'; ...
'SignalViewerScope', 'signalviewerscope'; ...
'SimulinkTimeScope', 'dsptimescope'; ...
'Sin', 'sinewave'; ...
'Sine', 'sine'; ...
'Sine and Cosine', 'sineandcosine'; ...
'Slider Gain', 'slidergain'; ...
'Squeeze', 'squeeze'; ...
'StateControl', 'statecontrol'; ...
'SynchronousSubsystem', 'synchronoussubsystem'; ...
'EnabledSynchronousSubsystem', 'enabledsynchronoussubsystem'; ...
'ResettableSynchronousSubsystem', 'resettablesynchronoussubsystem'; ...
'StateEnablePort', 'stateenable'; ...
'StateReader', 'statereader'; ...
'StateSpace', 'statespace'; ...
'StateWriter', 'statewriter'; ...
'Step', 'step'; ...
'Stop', 'stopsimulation'; ...
'Stored Integer Value Decrement', 'decrementstoredinteger'; ...
'Stateflow', 'Stateflow'; ...
'Subsystem', 'subsystem'; ...
'AtomicSubsystem', 'subsystem'; ...
'VirtualSubsystem', 'subsystem'; ...
'ConfigurableSubsystem', 'configurablesubsystem'; ...
'TriggeredSubsystem', 'triggeredsubsystem'; ...
'EnabledSubsystem', 'enabledsubsystem'; ...
'EnabledAndTriggeredSubsystem', 'enabledandtriggeredsubsystem'; ...
'Function-CallSubsystem', 'functioncallsubsystem'; ...
'SimulinkFunctionSubsystem', 'simulinkfunction'; ...
'InitializeFunctionSubsystem', 'initializefunction'; ...
'TerminateFunctionSubsystem', 'terminatefunction'; ...
'ResetFunctionSubsystem', 'resetfunction'; ...
'ReinitializeFunctionSubsystem', 'reinitializefunction'; ...
'ForEachSubsystem', 'foreachsubsystem'; ...
'ForIteratorSubsystem', 'foriteratorsubsystem'; ...
'ResettableSubsystem', 'resettablesubsystem'; ...
'WhileIteratorSubsystem', 'whileiteratorsubsystem'; ...
'VariantSubsystem', 'variantsubsystem'; ...
'Variant Model', 'variantsubsystem'; ...
'Wrap To Zero', 'wraptozero'; ...
'ActionSubsystem', 'actionsubsystem'; ...
'IfActionSubsystem', 'actionsubsystem'; ...
'Sqrt', 'sqrtfcn'; ...
'SwitchCaseActionSubsystem', 'actionsubsystem'; ...
'Sum', 'sum'; ...
'Switch', 'switch'; ...
'SwitchCase', 'switchcase'; ...
'Tapped Delay Line', 'tappeddelayline'; ...
'Terminator', 'terminator'; ...
'ToDataflow', 'todataflow'; ...
'ToFile', 'tofile'; ...
'ToImage', 'toimage'; ...
'ToWorkspace', 'toworkspace'; ...
'Transfer Fcn Real Zero', 'transferfcnrealzero'; ...
'TransferFcn', 'transferfcn'; ...
'TransportDelay', 'transportdelay'; ...
'TriggerPort', 'trigger'; ...
'Triggered Linearization', 'triggerbasedlinearization'; ...
'Timed Linearization', 'timebasedlinearization'; ...
'Trigonometry', 'trigonometricfunction'; ...
'UnaryMinus', 'unaryminus'; ...
'UniformRandomNumber', 'uniformrandomnumber'; ...
'UnitDelay', 'unitdelay'; ...
'VariableTransportDelay', 'variabletransportdelay'; ...
'VariantSink', 'variantsink'; ...
'VariantSource', 'variantsource'; ...
'ManualVariantSource', 'manualvariantsource'; ...
'ManualVariantSink', 'manualvariantsink'; ...
'VideoViewer', 'vipvideoviewer'; ...
'WaveformGenerator', 'waveformgenerator'; ...
'Weighted Moving Average', 'weightedmovingaverage'; ...
'WhileIterator', 'while'; ...
'Width', 'width'; ...
'XY scope.', 'xygraph'; ...
'ZeroOrderHold', 'zeroorderhold'; ...
'ZeroPole', 'zeropole'; ...
'S-Function Builder', 'sfunctionbuilder'; ...
'Fixed-Point State-Space', 'fixedpointstatespace'; ...
'Transfer Fcn Direct Form II', 'transferfcndirectformii'; ...
'Transfer Fcn Direct Form II Time Varying', 'transferfcndirectformiitimevarying'; ...
'Unit Delay Enabled', 'unitdelayenabled'; ...
'Unit Delay Enabled External Initial Condition', 'unitdelayenabledexternalinitialcondition'; ...
'Unit Delay Enabled Resettable', 'unitdelayenabledresettable'; ...
'Unit Delay Enabled Resettable External Initial Condition', 'unitdelayenabledresettableexternalinitialcondition'; ...
'Unit Delay External Initial Condition', 'unitdelayexternalinitialcondition'; ...
'Unit Delay Resettable', 'unitdelayresettable'; ...
'Unit Delay Resettable External Initial Condition', 'unitdelayresettableexternalinitialcondition'; ...
'Unit Delay With Preview Enabled', 'unitdelaywithpreviewenabled'; ...
'Unit Delay With Preview Enabled Resettable', 'unitdelaywithpreviewenabledresettable'; ...
'Unit Delay With Preview Enabled Resettable External RV', 'unitdelaywithpreviewenabledresettableexternalrv'; ...
'Unit Delay With Preview Resettable', 'unitdelaywithpreviewresettable'; ...
'Unit Delay With Preview Resettable External RV', 'unitdelaywithpreviewresettableexternalrv'; ...
'UnitConversion', 'UNIT_CONVERSION'; ...
'UnitConfiguration', 'UNITCONFIGURATION'; ...
'Checkbox', 'hmi_check_box'; ...
'ComboBox', 'hmi_combo_box'; ...
'RadioButtonGroup', 'hmi_radio_button'; ...
'DisplayBlock', 'hmi_display'; ...
'EditField', 'hmi_edit'; ...
'LampBlock', 'hmi_lamp'; ...
'MultiStateImageBlock', 'hmi_multistate_image'; ...
'RotarySwitchBlock', 'hmi_rotary_switch'; ...
'SliderSwitchBlock', 'hmi_slider_switch'; ...
'ToggleSwitchBlock', 'hmi_toggle_switch'; ...
'RockerSwitchBlock', 'hmi_rocker_switch'; ...
'PushButtonBlock', 'hmi_push_button'; ...
'CircularGaugeBlock', 'hmi_gauge'; ...
'SemiCircularGaugeBlock', 'hmi_half_gauge'; ...
'QuarterGaugeBlock', 'hmi_quarter_gauge'; ...
'LinearGaugeBlock', 'hmi_linear_gauge'; ...
'KnobBlock', 'hmi_knob'; ...
'SliderBlock', 'hmi_slider'; ...
'DashboardScope', 'hmi_scope'; ...
'PMIOPort', 'ConnectionPort'; ...
'TwoWayConnection', 'TwoWayConnection'; ...
'PMIOPort', 'ConnectionPort'; ...
'TwoWayConnection', 'TwoWayConnection'; ...
'ComposeString', 'ComposeString'; ...
'ScanString', 'ScanString'; ...
'StringCompare', 'StringCompare'; ...
'StringConcatenate', 'StringConcatenate'; ...
'StringConstant', 'StringConstant'; ...
'StringFind', 'StringFind'; ...
'StringContains', 'StringContains'; ...
'StringCount', 'StringCount'; ...
'StringToDouble', 'StringToDouble'; ...
'StringToEnum', 'StringToEnum'; ...
'StringToASCII', 'StringToASCII'; ...
'Substring', 'Substring'; ...
'ToString', 'ToString'; ...
'ASCIIToString', 'ASCIIToString'; ...
'StringLength', 'StringLength'; ...
'CCaller', 'CCaller'; ...
'CFunction', 'CFunction'; ...
'DescriptorStateSpace', 'descriptorstatespace'; ...
'ObserverReference', 'observer_reference_block_ref'; ...
'ObserverPort', 'observer_port_block_ref'; ...
'EntityTransportDelay', 'MESSAGEDELAY'; ...
'Record', 'recordblock'; ...
'IdentityMatrix', 'IdentityMatrix'; ...
'IsTriangular', 'IsTriangular'; ...
'IsSymmetric', 'IsSymmetric'; ...
'HermitianTranspose', 'HermitianTranspose'; ...
'Transpose', 'Transpose'; ...
'CrossProduct', 'CrossProduct'; ...
'Matrix Square', 'MatrixSquare'; ...
'IsHermitian', 'IsHermitian'; ...
'Permute Matrix', 'PermuteMatrix'; ...
'Submatrix', 'Submatrix'; ...
'Create Diagonal Matrix', 'CreateDiagonalMatrix'; ...
'Extract Diagonal', 'ExtractDiagonal'; ...
'Circular Gauge', 'circular_gauge'; ...
'Horizontal Gauge', 'horizontal_gauge'; ...
'Vertical Gauge', 'vertical_gauge'; ...
'Horizontal Slider', 'horizontal_slider'; ...
'Vertical Slider', 'vertical_slider'; ...
'Knob', 'custom_knob'; ...
'Lamp', 'custom_lamp'; ...
'Push Button', 'custom_push_button'; ...
'Callback Button', 'custom_callback_button'; ...
'Custom Rotary Switch', 'custom_rotary_switch'; ...
'Custom Slider Switch', 'custom_slider_switch'; ...
'Custom Rocker Switch', 'custom_rocker_switch'; ...
'Custom Toggle Switch', 'custom_toggle_switch'; ...
'Playback', 'playbackblock'; ...
'Bit to Integer Converter', 'bit_to_integer_converter'; ...
'Integer to Bit Converter', 'integer_to_bit_converter'; ...
'Neighborhood', 'neighborhood'; ...
'NeighborhoodProcessingSubsystem', 'npss'; ...
 };


i = find( strcmp( blks( :, 1 ), block_type ) );


if isempty( i )

btype1 = strrep( block_type, ' ', '' );
i = find( strcmp( blks( :, 1 ), btype1 ) );
if isempty( i )
mapName = 'User Defined';

listOfMapFiles = which( 'getBlockHelpMapNameAndPath', '-all' );
processed_map_file_path = [ "" ];
currPWD = pwd;
try 
for k = 1:length( listOfMapFiles )
folder_name = string( fileparts( listOfMapFiles{ k } ) );
if contains( processed_map_file_path, folder_name )
continue ;
else 
processed_map_file_path = [ processed_map_file_path, folder_name ];
end 

getBlockHelpMapNameAndPathHandle = builtin( '_GetFunctionHandleForFullpath', listOfMapFiles{ k } );
try 
[ mapName, relativeOrFullPathToMapFile, found ] = getBlockHelpMapNameAndPathHandle( block_type );
catch fcnCallError
warning( message( 'Simulink:blocks:SL_FailedHelper', block_type, fcnCallError.message ) );
continue ;
end 
if ischar( found ) && strcmp( found, 'fullpath' )
pathToMapFile = relativeOrFullPathToMapFile;
break ;
elseif found
pathToMapFile = [ docPath, relativeOrFullPathToMapFile ];
break ;
end 
end 
catch anError
cd( currPWD );
DAStudio.error( 'Simulink:blocks:SL_FailedHelper', block_type, anError.message );
end 
cd( currPWD );
else 
mapName = blks{ i, 2 };
end 
else 

mapName = blks{ i, 2 };
end 

function [ found_key, str ] = LocalParseMaskHelp( block_hdl )









help_str = get_param( block_hdl, 'MaskHelp' );
help_str = deblankBeginEnd( help_str );



keyWords = { 'http', 'https', 'file', 'ftp', 'mailto', 'news' };
tok = lower( strtok( help_str, ':' ) );
if any( matches( keyWords, tok ) ) || strncmp( help_str, 'www.', 4 )
found_key = 1;
str = [ 'web(''', help_str, ''',''-helpbrowser'');' ];
return ;
end 


keyStrs = { 'web', 'eval', 'helpview' };
i = strfind( help_str, '(' );
if ~isempty( i )
h = help_str( 1:i - 1 );
for keyIdx = 1:length( keyStrs )
if strncmp( h, keyStrs{ keyIdx }, length( keyStrs{ keyIdx } ) )
found_key = 1;
str = help_str;
return ;
end 
end 
end 


found_key = 0;str = help_str;
return 

function y = deblankBeginEnd( x )




if isempty( x )
y = x;

else 

CR = newline;
i = 1;while ( isspace( x( i ) ) || x( i ) == CR ), i = i + 1;end 
x = x( i:end  );


i = length( x );while ( isspace( x( i ) ) || x( i ) == CR ), i = i - 1;end 
y = x( 1:i );

end 







































































% Decoded using De-pcode utility v1.2 from file /tmp/tmp8PlGW1.p.
% Please follow local copyright laws when handling this file.

