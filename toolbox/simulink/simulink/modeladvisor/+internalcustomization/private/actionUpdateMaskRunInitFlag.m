function[result]=actionUpdateMaskRunInitFlag(taskobj)





    modelAdvisorObj=taskobj.MAObj;
    template=ModelAdvisor.FormatTemplate('ListTemplate');
    template.setSubBar(false);

    fullName=getfullname(modelAdvisorObj.System);
    [blockList]=getBlocksForRunInitFlagUpdate(modelAdvisorObj,fullName);

    if isLibrary(fullName)
        isLocked=strcmp(get_param(bdroot(fullName),'Lock'),'on');
        if isLocked
            result=generateLockedLibraryMessage(modelAdvisorObj,blockList);
            return;
        end
    end

    fixBlocksForRunInitFlagUpdate(blockList);
    result=generateSuccessMessage(modelAdvisorObj);
end

function[isValid]=isLibrary(libraryName)
    isValid=false;

    try
        mdlInfo=Simulink.MDLInfo(bdroot(libraryName));
    catch
        return;
    end

    if~mdlInfo.IsLibrary
        return;
    end

    isValid=true;
end



function fixBlocksForRunInitFlagUpdate(blockList)
    for i=1:length(blockList)
        maskObj=get_param(blockList{i}.block,'MaskObject');
        maskObj.RunInitForIconRedraw=blockList{i}.updateFlagTo;
    end
end

function[blockList]=getBlocksForRunInitFlagUpdate(modelAdvisorObj,system)
    blockList={};
    masks=find_system(system,'LookUnderMasks','all','MatchFilter',@Simulink.match.allVariants,...
    'FollowLinks','off','Mask','on');
    for i=1:length(masks)
        linkStatus=get_param(masks{i},'StaticLinkStatus');
        if(~strcmpi(linkStatus,'none'))
            continue;
        end

        maskObj=get_param(masks{i},'MaskObject');


        if maskObj.isAutoGeneratedModelBlockMask()
            continue;
        end

        wsVars=maskObj.getWorkspaceVariables();
        cmdList={};
        parseType='parseForDependencyAndCommands';
        try
            [~,wsDependent,~]=parseMaskDisplay(maskObj.Display,wsVars,cmdList,parseType);
        catch
            continue;
        end

        if~wsDependent&&~strcmp(maskObj.RunInitForIconRedraw,'off')
            blockList{end+1}=struct('block',masks{i},'updateFlagTo','off');%#ok<AGROW>
        elseif wsDependent&&~strcmp(maskObj.RunInitForIconRedraw,'on')
            blockList{end+1}=struct('block',masks{i},'updateFlagTo','on');%#ok<AGROW>
        end
    end
    blockList=modelAdvisorObj.filterResultWithExclusion(blockList);
end


function[template]=generateSuccessMessage(modelAdvisorObj)
    template=ModelAdvisor.FormatTemplate('ListTemplate');
    template.setSubBar(false);

    statusMessage={};
    statusMessage{end+1}=DAStudio.message('ModelAdvisor:engine:MASuccessUpdatingListMasksToUpdateForCheckMaskRunInitFlag');
    template.setSubResultStatusText(statusMessage);
    template.setSubResultStatus('pass');

    modelAdvisorObj.setActionResultStatus(true);
    modelAdvisorObj.setActionEnable(false);
end


function[template]=generateLockedLibraryMessage(modelAdvisorObj,blocksNeedingUpdate)
    template=ModelAdvisor.FormatTemplate('ListTemplate');
    template.setSubBar(false);
    template.setInformation(DAStudio.message('ModelAdvisor:engine:MACheckMaskRunInitFlag'));

    template.setSubResultStatus('warn');
    template.setSubResultStatusText(DAStudio.message('ModelAdvisor:engine:MALockedLibraryWarningCheckMaskRunInitFlag'));
    template.setListObj(blocksNeedingUpdate{:}.block);

    modelAdvisorObj.setActionResultStatus(false);
    modelAdvisorObj.setActionEnable(true);
end