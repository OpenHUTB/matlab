classdef platformUtilsDAGNet<dnnfpga.bitstreambase.platformUtilsBeta2




    methods(Static=true)
        function addrMapObj=includeHWAddresses_integration(target)


            addrMapDUTOffsets=dnnfpga.bitstreambase.platformUtilsDAGNet.includeHWAddresses(target);


            addrMapDDROffsets=dnnfpga.bitstreambase.platformUtilsDAGNet.includeHWAddresses_DDRoffsets(target);

            addrMapObj=[addrMapDUTOffsets;addrMapDDROffsets];

        end








        function addrMapObj=includeHWAddresses(target)
            [ipbase,~]=dnnfpga.bitstreambase.platformUtilsBeta2.baseAddr(target);
            addrMap={...
            {'reset_offset',hex2dec('000')},...
            {'AXI1Rd_offset',hex2dec('008')},...
            {'AXI1Wr_offset',hex2dec('00C')},...
            {'AXI2Rd_offset',hex2dec('010')},...
            {'AXI3Rd_offset',hex2dec('014')},...
            {'AXI3Wr_offset',hex2dec('018')},...
            {'done',hex2dec('220')},...
            {'inputStart',hex2dec('224')},...
            {'preLoadingStart',hex2dec('228')},...
            {'FrameCount',hex2dec('24C')},...
            {'fc_weight_ddr_addr',hex2dec('294')},...
            {'fc_lc_ddr_len',hex2dec('298')},...
            {'fc_lc_ddr_addr',hex2dec('29C')},...
            {'fc_layerNum',hex2dec('300')},...
            {'fc_modeIn',hex2dec('304')},...
            {'skd_ddr_addr',hex2dec('308')},...
            {'skd_ddr_len',hex2dec('30C')},...
            {'add_ip_addr',hex2dec('310')},...
            {'add_op_addr',hex2dec('314')},...
            {'wr_reqCounter',hex2dec('318')},...
            {'nc_LCtotalLength_IP0',hex2dec('31C')},...
            {'nc_LCtotalLength_Conv',hex2dec('320')},...
            {'nc_LCtotalLength_OP0',hex2dec('324')},...
            {'nc_LCoffset_IP0',hex2dec('328')},...
            {'nc_LCoffset_Conv',hex2dec('32C')},...
            {'nc_LCoffset_OP0',hex2dec('330')},...
            {'conv_weight_ddr_addr',hex2dec('334')},...
            {'has_handShaking',hex2dec('338')},...
            {'hs_ddr_addr',hex2dec('33C')},...
            {'adder_lc_addr',hex2dec('340')},...
            {'adder_lc_len',hex2dec('348')},...
            {'StreamingMode',hex2dec('34C')},...
            {'InputNext',hex2dec('350')},...
            {'InputValid',hex2dec('354')},...
            {'InputAddr',hex2dec('358')},...
            {'InputSize',hex2dec('35C')},...
            {'OutputNext',hex2dec('360')},...
            {'OutputValid',hex2dec('364')},...
            {'OutputAddr',hex2dec('368')},...
            {'OutputSize',hex2dec('36C')},...
            {'StreamingDone',hex2dec('370')},...
            {'InputStop',hex2dec('374')},...
            {'AXIStreamOutSize',hex2dec('378')},...
            {'PerfCounterOverflow',hex2dec('37C')},...
            {'UseCustomBaseAddr',hex2dec('380')},...
            {'InputBaseAddr',hex2dec('384')},...
            {'OutputBaseAddr',hex2dec('388')},...
            };



            addrMapObj=containers.Map('KeyType','char','ValueType','uint32');

            for i=1:length(addrMap)
                amap=addrMap{i};
                addrMapObj(amap{1})=ipbase+amap{2};
            end

        end

    end
end




