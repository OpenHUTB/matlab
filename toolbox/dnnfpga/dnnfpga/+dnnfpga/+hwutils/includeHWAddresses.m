function includeHWAddresses(target)






    heavyValidation=false;



    switch lower(target)
    case{'xilinx'}
        ipbase=hex2dec('44a00000');
        ddrbase=hex2dec('80000000');
    case{'altera'}
        ipbase=hex2dec('80000000');
        ddrbase=hex2dec('00000000');
    otherwise
        error('Target must be either ''altera'' or ''xilinx''');
    end
    writeScratchAddr=hex2dec('10000000');
    input_buffer_addr=hex2dec('08000000');
    output_buffer_addr=hex2dec('50000000');

    addrMap={...
    {'ddrbase',ddrbase},...
    {'input_buffer_addr',input_buffer_addr},...
    {'output_buffer_addr',output_buffer_addr},...
    {'writeScratchAddr',hex2dec('10000000')},...
    {'readScratchAddr',writeScratchAddr+hex2dec('10000000')},...
    {'reset_offset',ipbase+hex2dec('000')},...
    {'ddrbasereg_offset',ipbase+hex2dec('008')},...
    {'dmard_ddrbasereg_offset',ipbase+hex2dec('00c')},...
    {'dmawr_ddrbasereg_offset',ipbase+hex2dec('010')},...
    {'start_offset',ipbase+hex2dec('100')},...
    {'debugEnable_offset',ipbase+hex2dec('10C')},...
    {'debugSelect_offset',ipbase+hex2dec('110')},...
    {'debugValid_offset',ipbase+hex2dec('114')},...
    {'debugWrData_offset',ipbase+hex2dec('118')},...
    {'debugWrAddr_offset',ipbase+hex2dec('11C')},...
    {'debugRdAddr_offset',ipbase+hex2dec('120')},...
    {'debugRdData_offset',ipbase+hex2dec('138')},...
    {'debugDMAEnable_offset',ipbase+hex2dec('108')},...
    {'debugDMALength_offset',ipbase+hex2dec('124')},...
    {'debugDMAWidth_offset',ipbase+hex2dec('144')},...
    {'debugDMAOffset_offset',ipbase+hex2dec('128')},...
    {'debugDMADirection_offset',ipbase+hex2dec('12C')},...
    {'debugDMAStart_offset',ipbase+hex2dec('130')},...
    {'dma_from_ddr4_done',ipbase+hex2dec('13C')},...
    {'dma_to_ddr4_done',ipbase+hex2dec('140')},...
    {'done_offset',ipbase+hex2dec('134')},...
    {'layerNum_offset',ipbase+hex2dec('104')},...
    {'weightSize_offset',ipbase+hex2dec('160')},...
    {'fifo_write_ready',ipbase+hex2dec('148')},...
    {'fifo_read_ready',ipbase+hex2dec('14C')},...
    {'has_input_fifo',ipbase+hex2dec('150')},...
    {'has_output_fifo',ipbase+hex2dec('154')},...
    {'fifo_read_data',ipbase+hex2dec('16C')},...
    {'image_length',ipbase+hex2dec('15C')},...
    {'debug_dma_offset',ipbase+hex2dec('164')},...
    {'debug_dma_width',ipbase+hex2dec('168')},...
    {'X_3',ipbase+hex2dec('190')},...
    {'Y_3',ipbase+hex2dec('194')},...
    {'BLOCK_LIMIT',ipbase+hex2dec('198')},...
    {'loop_times',ipbase+hex2dec('19C')},...
    {'hw_sw_padding_logic_sel',ipbase+hex2dec('1A0')},...
    {'Xmod3',ipbase+hex2dec('218')},...
    {'Ymod3',ipbase+hex2dec('21C')},...
    };

    for i=1:length(addrMap)
        amap=addrMap{i};
        assignin('caller',amap{1},amap{2});
    end

    assignin('caller','heavyValidation',heavyValidation);
end
