function simrfV2threewinding( block, action )






top_sys = bdroot( block );
if strcmpi( get_param( top_sys, 'BlockDiagramType' ), 'library' ) &&  ...
strcmpi( top_sys, 'simrfV2elements' )
return 
end 




switch ( action )
case 'simrfInit'

if regexpi( get_param( top_sys, 'SimulationStatus' ),  ...
'^(updating|initializing|stopped)$' )

MaskWSValues = simrfV2getblockmaskwsvalues( block );


validateattributes( MaskWSValues.L1, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'positive', 'finite' }, block,  ...
'Three Winding Transformer L1' );
validateattributes( MaskWSValues.L2, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'positive', 'finite' }, block,  ...
'Three Winding Transformer L2' );
validateattributes( MaskWSValues.L3, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'positive', 'finite' }, block,  ...
'Three Winding Transformer L3' );
validateattributes( MaskWSValues.K12, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'finite', '>',  - 1, '<', 1 }, block,  ...
'Coefficient of coupling K12' );
validateattributes( MaskWSValues.K13, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'finite', '>',  - 1, '<', 1 }, block,  ...
'Coefficient of coupling K13' );
validateattributes( MaskWSValues.K23, { 'numeric' },  ...
{ 'nonempty', 'scalar', 'finite', '>',  - 1, '<', 1 }, block,  ...
'Coefficient of coupling K23' );
set_param( [ block, '/THREE_WINDING_TRANSFORMER_RF' ],  ...
'L1', num2str( MaskWSValues.L1, 16 ),  ...
'L1_unit', MaskWSValues.L1_unit,  ...
'L2', num2str( MaskWSValues.L2, 16 ),  ...
'L2_unit', MaskWSValues.L2_unit,  ...
'L3', num2str( MaskWSValues.L3, 16 ),  ...
'L3_unit', MaskWSValues.L3_unit,  ...
'K12', num2str( MaskWSValues.K12, 16 ),  ...
'K13', num2str( MaskWSValues.K13, 16 ),  ...
'K23', num2str( MaskWSValues.K23, 16 ) )
end 
end 

end 
% Decoded using De-pcode utility v1.2 from file /tmp/tmpYTuyWA.p.
% Please follow local copyright laws when handling this file.

