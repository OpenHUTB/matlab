function output=simrfV2_ce_update(mdl)

    mdl=convertStringsToChars(mdl);



    validateattributes(mdl,{'char','string'},{'nonempty','scalartext'},...
    '','mdl',1)

    open_system(mdl)
    set_param(mdl,'SimulationCommand','update')

    if strncmp(mdl,'simrf',5)
        newmdl=regexprep(mdl,'simrf','simrfV2');
    else
        newmdl=[mdl,'_v2'];
    end
    save_system(mdl,newmdl)
    load_system(mdl);


    blks=[];


    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/R')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/L')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/C')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Z')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/Gnd')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrf_lib/Elements/Mutual\nInductor'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrf_lib/Elements/Three-Winding\nTransformer'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Signal\nCombiner'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/S-parameters')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Transmission\nLine'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Phase\nShift'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Amplifier')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Mixer')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfsources1/Continuous\nWave'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfsources1/Sinusoid')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfsources1/Noise')];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nInport'))];
    blks=[blks;find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nOutport'))];
    delete_block(blks);
    blks=find_system(newmdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nParameters'));
    for i=1:numel(blks)
        b=blks{i};
        lh=get_param(b,'LineHandles');
        delete_line(get_param(lh.LConn,'Line'))
    end
    delete_block(blks)



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/R');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/R',...
        'Resistance',get_param(b,'R'),...
        'Resistance_unit',get_param(b,'R_unit'),...
        'AddNoise','off')
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/L');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/L',...
        'Inductance',get_param(b,'Li'),...
        'Inductance_unit',get_param(b,'Li_unit'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/C');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/C',...
        'Capacitance',get_param(b,'C'),...
        'Capacitance_unit',get_param(b,'C_unit'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Z');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Z',...
        'Impedance_type','Frequency independent',...
        'Impedance',get_param(b,'ComplexZ'));
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrf_lib/Elements/Gnd');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Gnd')
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrf_lib/Elements/Mutual\nInductor'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),...
        sprintf('simrfV2_lib/Elements/Mutual\nInductor'),...
        'L1',get_param(b,'L1'),...
        'L1_unit',get_param(b,'L1_unit'),...
        'L2',get_param(b,'L2'),...
        'L2_unit',get_param(b,'L2_unit'),...
        'K',get_param(b,'K'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrf_lib/Elements/Three-Winding\nTransformer'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),...
        sprintf('simrfV2_lib/Elements/Three-Winding\nTransformer'),...
        'L1',get_param(b,'L1'),...
        'L1_unit',get_param(b,'L1_unit'),...
        'L2',get_param(b,'L2'),...
        'L2_unit',get_param(b,'L2_unit'),...
        'L3',get_param(b,'L3'),...
        'L3_unit',get_param(b,'L3_unit'),...
        'K12',get_param(b,'K12'),...
        'K13',get_param(b,'K13'),...
        'K23',get_param(b,'K23'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Signal\nCombiner'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Signal Combiner',...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/S-parameters');
    for i=1:numel(blks)
        b=blks{i};
        DataSource=get_param(b,'DataSource');
        if strcmp(DataSource,'S-parameters')
            DataSource='Network-parameters';
        end
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/S-parameters',...
        'DataSource',DataSource,...
        'File',get_param(b,'File'),...
        'Paramtype','S-parameters',...
        'Sparam',get_param(b,'Sparam'),...
        'SparamFreq',get_param(b,'SparamFreq'),...
        'SparamFreq_unit',get_param(b,'SparamFreqUnit'),...
        'SparamZ0',get_param(b,'SparamZ0'),...
        'Residues',get_param(b,'Residues'),...
        'Poles',get_param(b,'Poles'),...
        'DF',get_param(b,'DF'),...
        'FitOpt',get_param(b,'FitOpt'),...
        'FitTol',get_param(b,'FitTol'),...
        'SourceFreq',get_param(b,'SourceFreq'),...
        'PlotFreq',get_param(b,'PlotFreq'),...
        'PlotFreq_unit',get_param(b,'PlotFreqUnit'),...
        'PlotType',get_param(b,'PlotType'),...
        'YParam1',get_param(b,'YParam1'),...
        'YFormat1',get_param(b,'YFormat1'),...
        'YParam2',get_param(b,'YParam2'),...
        'YFormat2',get_param(b,'YFormat2'),...
        'YOption',get_param(b,'YOption'),...
        'XOption',get_param(b,'XOption'),...
        'InternalGrounding',get_param(b,'InternalGrounding'),...
        'SparamRepresentation',get_param(b,'SparamRepresentation'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Transmission\nLine'));
    for i=1:numel(blks)
        b=blks{i};
        Model_type=get_param(b,'Model_type');
        if strcmp(Model_type,'Delay-based and lossless')||...
            strcmp(Model_type,'Delay-based and lossy')
            warning('Delay-based not supported');
            Model_type='Lumped parameter L-section';
        end
        replaceBlock(b,regexprep(b,mdl,newmdl),...
        sprintf('simrfV2elements/Transmission\nLine'),...
        'Model_type',Model_type,...
        'Parameterization',get_param(b,'Parameterization'),...
        'TransDelay',get_param(b,'TransDelay'),...
        'TransDelay_unit',get_param(b,'TransDelay_unit'),...
        'CharImped',get_param(b,'CharImped'),...
        'CharImped_unit',get_param(b,'CharImped_unit'),...
        'Resistance',get_param(b,'Resistance'),...
        'Resistance_unit',get_param(b,'Resistance_unit'),...
        'Inductance',get_param(b,'Inductance'),...
        'Inductance_unit',get_param(b,'Inductance_unit'),...
        'Capacitance',get_param(b,'Capacitance'),...
        'Capacitance_unit',get_param(b,'Capacitance_unit'),...
        'Conductance',get_param(b,'Conductance'),...
        'Conductance_unit',get_param(b,'Conductance_unit'),...
        'LineLength',get_param(b,'LineLength'),...
        'LineLength_unit',get_param(b,'LineLength_unit'),...
        'NumSegments',get_param(b,'NumSegments'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfelements1/Phase\nShift'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Phase Shift',...
        'PhaseShiftOption',get_param(b,'PhaseShiftOption'),...
        'PhaseShift',get_param(b,'PhaseShift'),...
        'PhaseShift_unit',get_param(b,'PhaseShift_unit'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end






    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Amplifier');
    for i=1:numel(blks)
        b=blks{i};
        if strcmp(get_param(b,'TreatAsLinear'),'on')
            IP2='inf';
            IP3='inf';
        else
            IP2=get_param(b,'IP2');
            IP3=get_param(b,'IP3');
        end
        if strcmp(get_param(b,'Source_Poly'),'Derived from intercept point')
            datasource='Polynomial coefficients';
        else
            datasource=get_param(b,'DataSource');
        end

        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Amplifier',...
        'DataSource',datasource,...
        'File',get_param(b,'File'),...
        'Sparam',get_param(b,'Sparam'),...
        'SparamFreq',get_param(b,'SparamFreq'),...
        'SparamFreq_unit',get_param(b,'SparamFreqUnit'),...
        'SparamZ0',get_param(b,'SparamZ0'),...
        'Source_linear_gain',get_param(b,'Source_linear_gain'),...
        'linear_gain',get_param(b,'linear_gain'),...
        'linear_gain_unit',get_param(b,'linear_gain_unit'),...
        'Zin',get_param(b,'Zin'),...
        'Zout',get_param(b,'Zout'),...
        'Source_Poly','Even and odd order',...
        'Poly_Coeffs',get_param(b,'Poly_Coeffs'),...
        'IPType',get_param(b,'IPType'),...
        'IP2',IP2,...
        'IP2_unit',get_param(b,'IP2_unit'),...
        'IP3',IP3,...
        'IP3_unit',get_param(b,'IP3_unit'),...
        'NF',get_param(b,'NF'),...
        'InternalGrounding',get_param(b,'InternalGrounding'),...
        'SourceFreq',get_param(b,'SourceFreq'),...
        'PlotFreq',get_param(b,'PlotFreq'),...
        'PlotFreq_unit',get_param(b,'PlotFreqUnit'),...
        'PlotType',get_param(b,'PlotType'),...
        'YParam1',get_param(b,'YParam1'),...
        'YFormat1',get_param(b,'YFormat1'),...
        'YParam2',get_param(b,'YParam2'),...
        'YFormat2',get_param(b,'YFormat2'),...
        'YOption',get_param(b,'YOption'),...
        'XOption',get_param(b,'XOption'),...
        'SparamRepresentation',get_param(b,'SparamRepresentation'),...
        'FitTol','-40',...
        'FitOpt','Share all poles')
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfelements1/Mixer');
    for i=1:numel(blks)
        b=blks{i};

        if strcmp(get_param(b,'Source_Poly'),'Derived from intercept point')
            gainoption='Polynomial coefficients';
        else
            gainoption=get_param(b,'Source_linear_gain');
        end

        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2elements/Mixer',...
        'Source_linear_gain',gainoption,...
        'linear_gain',get_param(b,'linear_gain'),...
        'linear_gain_unit',get_param(b,'linear_gain_unit'),...
        'Zin',get_param(b,'Zin'),...
        'Zout',get_param(b,'Zout'),...
        'ZLO',get_param(b,'ZLO'),...
        'Source_Poly','Even and odd order',...
        'Poly_Coeffs',get_param(b,'Poly_Coeffs'),...
        'IPType',get_param(b,'IPType'),...
        'IP2',get_param(b,'IP2'),...
        'IP2_unit',get_param(b,'IP2_unit'),...
        'IP3',get_param(b,'IP3'),...
        'IP3_unit',get_param(b,'IP3_unit'),...
        'NF',get_param(b,'NF'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfsources1/Continuous\nWave'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),...
        sprintf('simrfV2sources1/Continuous\nWave'),...
        'CWSourceType',get_param(b,'CWSourceType'),...
        'Z0',get_param(b,'Z0'),...
        'IVoltage',get_param(b,'IVoltage'),...
        'ICurrent',get_param(b,'ICurrent'),...
        'MagPower',get_param(b,'MagPower'),...
        'IVoltage_unit',get_param(b,'IVoltageUnit'),...
        'ICurrent_unit',get_param(b,'ICurrentUnit'),...
        'MagPower_unit',get_param(b,'PowerUnit'),...
        'QVoltage',get_param(b,'QVoltage'),...
        'QCurrent',get_param(b,'QCurrent'),...
        'AnglePower',get_param(b,'AnglePower'),...
        'QVoltage_unit',get_param(b,'QVoltageUnit'),...
        'QCurrent_unit',get_param(b,'QCurrentUnit'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end




    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfsources1/Sinusoid');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2sources1/Sinusoid',...
        'SineSourceType',get_param(b,'SineSourceType'),...
        'VO_I',get_param(b,'VO_I'),...
        'VO_I_unit',get_param(b,'VO_I_Unit'),...
        'IO_I',get_param(b,'IO_I'),...
        'IO_I_unit',get_param(b,'IO_I_Unit'),...
        'VO_Q',get_param(b,'VO_Q'),...
        'VO_Q_unit',get_param(b,'VO_Q_Unit'),...
        'IO_Q',get_param(b,'IO_Q'),...
        'IO_Q_unit',get_param(b,'IO_Q_Unit'),...
        'VA_I',get_param(b,'VA_I'),...
        'VA_I_unit',get_param(b,'VA_I_Unit'),...
        'IA_I',get_param(b,'IA_I'),...
        'IA_I_unit',get_param(b,'IA_I_Unit'),...
        'VA_Q',get_param(b,'VA_Q'),...
        'VA_Q_unit',get_param(b,'VA_Q_Unit'),...
        'IA_Q',get_param(b,'IA_Q'),...
        'IA_Q_unit',get_param(b,'IA_Q_Unit'),...
        'Fmod',get_param(b,'Fmod'),...
        'Fmod_unit',get_param(b,'Fmod_Unit'),...
        'TD',get_param(b,'TD'),...
        'TD_unit',get_param(b,'TD_Unit'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock','simrfsources1/Noise');
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2sources1/Noise',...
        'SimulinkInputSignalType',get_param(b,'SimulinkInputSignalType'),...
        'NoiseType','White',...
        'NoisePSD',get_param(b,'NoisePSD'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nInport'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2util1/Inport',...
        'SimulinkInputSignalType',get_param(b,'SimulinkInputSignalType'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'ZS',get_param(b,'ZS'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nOutport'));
    for i=1:numel(blks)
        b=blks{i};
        replaceBlock(b,regexprep(b,mdl,newmdl),'simrfV2util1/Outport',...
        'SensorType',get_param(b,'SensorType'),...
        'OutputFormat',get_param(b,'OutputFormat'),...
        'CarrierFreq',get_param(b,'CarrierFreq'),...
        'CarrierFreq_unit',get_param(b,'CarrierFreqUnit'),...
        'ZL',get_param(b,'ZL'),...
        'InternalGrounding',get_param(b,'InternalGrounding'))
    end



    blks=find_system(mdl,'LookUnderMasks','all',...
    'MatchFilter',@Simulink.match.internal.filterOutInactiveVariantSubsystemChoices,...
    'ReferenceBlock',sprintf('simrfutil1/SimRF\nParameters'));
    for i=1:numel(blks)
        paramBlk=blks{i};
        solverBlk=simrfV2_findConnected(paramBlk,...
        sprintf('nesl_utility_internal/Solver\nConfiguration'));
        solverBlk=solverBlk{1};

        delete_block(regexprep(solverBlk,mdl,newmdl))
        replaceBlock(solverBlk,regexprep(solverBlk,mdl,newmdl),...
        'simrfV2util1/Configuration',...
        'AutoFreq','on',...
        'Tones',get_param(paramBlk,'CarrierFreq'),...
        'Tones_unit',get_param(paramBlk,'CarrierFreqUnit'),...
        'Harmonics','1',...
        'SolverType','NDF2',...
        'StepSize',get_param(solverBlk,'LocalSolverSampleTime'),...
        'StepSize_unit','s',...
        'AddNoise',get_param(paramBlk,'AddThermalNoise'),...
        'Temperature',get_param(paramBlk,'EnvTemperature'),...
        'Temperature_unit',get_param(paramBlk,'EnvTemperatureUnit'))
    end

    bdclose(mdl)
    save_system(newmdl)
    bdclose(newmdl)
    open_system(newmdl);
    if nargout>0
        output=newmdl;
    end

    function output=replaceBlock(oldblk,newname,libblk,varargin)
        Position=get_param(oldblk,'Position');
        Orientation=get_param(oldblk,'Orientation');
        NamePlacement=get_param(oldblk,'NamePlacement');
        ShowName=get_param(oldblk,'ShowName');
        BlockMirror=get_param(oldblk,'BlockMirror');
        BlockRotation=get_param(oldblk,'BlockRotation');
        BackgroundColor=get_param(oldblk,'BackgroundColor');
        ForegroundColor=get_param(oldblk,'ForegroundColor');
        DropShadow=get_param(oldblk,'DropShadow');
        h=add_block(libblk,newname,...
        'Position',Position,...
        'Orientation',Orientation,...
        'NamePlacement',NamePlacement,...
        'ShowName',ShowName,...
        'BlockMirror',BlockMirror,...
        'BlockRotation',BlockRotation,...
        'BackgroundColor',BackgroundColor,...
        'ForegroundColor',ForegroundColor,...
        'DropShadow',DropShadow,...
        varargin{:});
        set_param(h,'Position',Position)
        if nargout>0
            output=h;
        end
