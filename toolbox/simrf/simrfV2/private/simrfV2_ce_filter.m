function[newData]=simrfV2_ce_filter(origData)






    newData(length(origData))=struct;
    s_idx=0;
    for n_idx=1:length(origData)
        switch origData(n_idx).Name
        case{'DesignMethod','ResponseType','Implementation',...
            'ImplementationIdeal','ImplementationRational',...
            'UseFilterOrder','FilterOrder','PassFreq_lp',...
            'PassFreq_lp_unit','PassFreq_hp','PassFreq_hp_unit',...
            'PassFreq_bp','PassFreq_bp_unit','PassFreq_bs',...
            'PassFreq_bs_unit','PassAtten','StopFreq_lp',...
            'StopFreq_lp_unit','StopFreq_hp','StopFreq_hp_unit',...
            'StopFreq_bp','StopFreq_bp_unit','StopFreq_bs',...
            'StopFreq_bs_unit','StopAtten','Rsrc','Rload',...
            'AutoImpulseLength','ImpulseLength','ImpulseLength_unit',...
            'InternalGrounding','PlotFuncLeft','PlotRightOnVT',...
            'PlotRightNoTD','PlotRightNoGD','PlotRightNoIR',...
            'PlotRightNoSR','FreqPoints','Freq_unit','TimePoints',...
            'Time_unit','XaxisScale','YaxisScale','needRedraw'}
            s_idx=s_idx+1;
            newData(s_idx).Name=origData(n_idx).Name;
            newData(s_idx).Value=origData(n_idx).Value;
        case{'PlotLeftForm','PlotRightForm'}
            s_idx=s_idx+1;
            newData(s_idx).Name=origData(n_idx).Name;
            if strcmp(origData(n_idx).Value,'Magnitude (decibels)')
                newData(s_idx).Value='Magnitude (dB)';
            else
                newData(s_idx).Value=origData(n_idx).Value;
            end
        end
    end

    newData=newData(1:s_idx);

end