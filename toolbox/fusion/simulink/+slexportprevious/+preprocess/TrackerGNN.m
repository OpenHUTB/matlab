function TrackerGNN(obj)



    exportVer=obj.ver;


    if isR2021bOrEarlier(obj.ver)
        srcBlock='motalgorithmslib/Global Nearest Neighbor Multi Object Tracker';
        paramsToRemove={'EnableMemoryManagement',...
        'AssignmentClustering',...
        'MaxNumDetectionsPerSensor',...
        'MaxNumDetectionsPerCluster',...
        'MaxNumTracksPerCluster',...
        'ClusterViolationHandling'};
        RemoveRule={...
        slexportprevious.rulefactory.removeInstanceParameter(...
        ['<SourceBlock|"',srcBlock,'">'],paramsToRemove,exportVer)};
        obj.appendRules(RemoveRule);
    end

    if isR2021aOrEarlier(obj.ver)

        srcBlock='motalgorithmslib/Global Nearest Neighbor Multi Object Tracker';
        rule=slexportprevious.rulefactory.removeInstanceParameter(...
        ['<SourceBlock|"',srcBlock,'">'],...
        'MaxNumOOSMSteps',...
        exportVer);
        obj.appendRule(rule);


        if exportVer.isSLX
            rule=['<Block<SourceBlock|"',srcBlock,'"><InstanceData<OOSMHandling:repval "Terminate">>>'];
        else
            rule=slexportprevious.rulefactory.replaceInSourceBlock(...
            'OOSMHandling',...
            srcBlock,...
            'Terminate');
        end
        obj.appendRule(rule);
    end

    if isR2020bOrEarlier(obj.ver)


        newRef='motalgorithmslib/Global Nearest Neighbor Multi Object Tracker';
        oldRef='fusionlib/Global Nearest Neighbor Multi Object Tracker';
        obj.appendRule(['<Block<SourceBlock|"',newRef,'":repval "',oldRef,'">>']);

        NewBlockParamsRules={...
        slexportprevious.rulefactory.renameInstanceParameter(...
        ['<SourceBlock|"',oldRef,'">'],...
        'StateParametersSimulink','StateParams',exportVer),...
        slexportprevious.rulefactory.removeInstanceParameter(...
        ['<SourceBlock|"',oldRef,'">'],...
        'TrackerIndex',exportVer),...
        slexportprevious.rulefactory.removeInstanceParameter(...
        ['<SourceBlock|"',oldRef,'">'],...
        'OOSMHandling',exportVer),...
        slexportprevious.rulefactory.removeInstanceParameter(...
        ['<SourceBlock|"',oldRef,'">'],...
        'HasStateParametersInput',exportVer)};
        obj.appendRules(NewBlockParamsRules);

    end

end
